'use strict';

/**
 * AMRadioChannel
 *
 * A radio channel that uses AM.
 *
 * http://schema.org/AMRadioChannel
 */
var AMRadioChannel = 'http://schema.org/AMRadioChannel';
/**
 * APIReference
 *
 * Reference documentation for application programming interfaces (APIs).
 *
 * http://schema.org/APIReference
 */
var APIReference = 'http://schema.org/APIReference';
/**
 * AboutPage
 *
 * Web page type: About page.
 *
 * http://schema.org/AboutPage
 */
var AboutPage = 'http://schema.org/AboutPage';
/**
 * AcceptAction
 *
 * The act of committing to/adopting an object.\n\nRelated actions:\n\n* [[RejectAction]]: The antonym of AcceptAction.
 *
 * http://schema.org/AcceptAction
 */
var AcceptAction = 'http://schema.org/AcceptAction';
/**
 * Accommodation
 *
 * An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
 * For more specific types of accommodations not defined in schema.org, one can use [[additionalType]] with external vocabularies.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/Accommodation
 */
var Accommodation = 'http://schema.org/Accommodation';
/**
 * AccountingService
 *
 * Accountancy business.\n\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\(s).
 *
 *
 * http://schema.org/AccountingService
 */
var AccountingService = 'http://schema.org/AccountingService';
/**
 * AchieveAction
 *
 * The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.
 *
 * http://schema.org/AchieveAction
 */
var AchieveAction = 'http://schema.org/AchieveAction';
/**
 * Action
 *
 * An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.\n\nSee also [blog post](http://blog.schema.org/2014/04/announcing-schemaorg-actions.html) and [Actions overview document](http://schema.org/docs/actions.html).
 *
 * http://schema.org/Action
 */
var Action = 'http://schema.org/Action';
/**
 * ActionAccessSpecification
 *
 * A set of requirements that must be fulfilled in order to perform an Action.
 *
 * http://schema.org/ActionAccessSpecification
 */
var ActionAccessSpecification = 'http://schema.org/ActionAccessSpecification';
/**
 * ActionStatusType
 *
 * The status of an Action.
 *
 * http://schema.org/ActionStatusType
 */
var ActionStatusType = 'http://schema.org/ActionStatusType';
/**
 * ActivateAction
 *
 * The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).
 *
 * http://schema.org/ActivateAction
 */
var ActivateAction = 'http://schema.org/ActivateAction';
/**
 * AddAction
 *
 * The act of editing by adding an object to a collection.
 *
 * http://schema.org/AddAction
 */
var AddAction = 'http://schema.org/AddAction';
/**
 * AdministrativeArea
 *
 * A geographical region, typically under the jurisdiction of a particular government.
 *
 * http://schema.org/AdministrativeArea
 */
var AdministrativeArea = 'http://schema.org/AdministrativeArea';
/**
 * AdultEntertainment
 *
 * An adult entertainment establishment.
 *
 * http://schema.org/AdultEntertainment
 */
var AdultEntertainment = 'http://schema.org/AdultEntertainment';
/**
 * AdultOrientedEnumeration
 *
 * Enumeration of considerations that make a product relevant or potentially restricted for adults only.
 *
 * http://schema.org/AdultOrientedEnumeration
 */
var AdultOrientedEnumeration = 'http://schema.org/AdultOrientedEnumeration';
/**
 * AdvertiserContentArticle
 *
 * An [[Article]] that an external entity has paid to place or to produce to its specifications. Includes [advertorials](https://en.wikipedia.org/wiki/Advertorial), sponsored content, native advertising and other paid content.
 *
 * http://schema.org/AdvertiserContentArticle
 */
var AdvertiserContentArticle = 'http://schema.org/AdvertiserContentArticle';
/**
 * AggregateOffer
 *
 * When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.\n\nNote: AggregateOffers are normally expected to associate multiple offers that all share the same defined [[businessFunction]] value, or default to http://purl.org/goodrelations/v1#Sell if businessFunction is not explicitly defined.
 *
 * http://schema.org/AggregateOffer
 */
var AggregateOffer = 'http://schema.org/AggregateOffer';
/**
 * AggregateRating
 *
 * The average rating based on multiple ratings or reviews.
 *
 * http://schema.org/AggregateRating
 */
var AggregateRating = 'http://schema.org/AggregateRating';
/**
 * AgreeAction
 *
 * The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/AgreeAction
 */
var AgreeAction = 'http://schema.org/AgreeAction';
/**
 * Airline
 *
 * An organization that provides flights for passengers.
 *
 * http://schema.org/Airline
 */
var Airline = 'http://schema.org/Airline';
/**
 * Airport
 *
 * An airport.
 *
 * http://schema.org/Airport
 */
var Airport = 'http://schema.org/Airport';
/**
 * AlignmentObject
 *
 * An intangible item that describes an alignment between a learning resource and a node in an educational framework.
 *
 * Should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.
 *
 * http://schema.org/AlignmentObject
 */
var AlignmentObject = 'http://schema.org/AlignmentObject';
/**
 * AllocateAction
 *
 * The act of organizing tasks/objects/events by associating resources to it.
 *
 * http://schema.org/AllocateAction
 */
var AllocateAction = 'http://schema.org/AllocateAction';
/**
 * AmpStory
 *
 * A creative work with a visual storytelling format intended to be viewed online, particularly on mobile devices.
 *
 * http://schema.org/AmpStory
 */
var AmpStory = 'http://schema.org/AmpStory';
/**
 * AmusementPark
 *
 * An amusement park.
 *
 * http://schema.org/AmusementPark
 */
var AmusementPark = 'http://schema.org/AmusementPark';
/**
 * AnalysisNewsArticle
 *
 * An AnalysisNewsArticle is a [[NewsArticle]] that, while based on factual reporting, incorporates the expertise of the author/producer, offering interpretations and conclusions.
 *
 * http://schema.org/AnalysisNewsArticle
 */
var AnalysisNewsArticle = 'http://schema.org/AnalysisNewsArticle';
/**
 * AnatomicalStructure
 *
 * Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.
 *
 * http://schema.org/AnatomicalStructure
 */
var AnatomicalStructure = 'http://schema.org/AnatomicalStructure';
/**
 * AnatomicalSystem
 *
 * An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can include circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.
 *
 * http://schema.org/AnatomicalSystem
 */
var AnatomicalSystem = 'http://schema.org/AnatomicalSystem';
/**
 * AnimalShelter
 *
 * Animal shelter.
 *
 * http://schema.org/AnimalShelter
 */
var AnimalShelter = 'http://schema.org/AnimalShelter';
/**
 * Answer
 *
 * An answer offered to a question; perhaps correct, perhaps opinionated or wrong.
 *
 * http://schema.org/Answer
 */
var Answer = 'http://schema.org/Answer';
/**
 * Apartment
 *
 * An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>).
 *
 * http://schema.org/Apartment
 */
var Apartment = 'http://schema.org/Apartment';
/**
 * ApartmentComplex
 *
 * Residence type: Apartment complex.
 *
 * http://schema.org/ApartmentComplex
 */
var ApartmentComplex = 'http://schema.org/ApartmentComplex';
/**
 * AppendAction
 *
 * The act of inserting at the end if an ordered collection.
 *
 * http://schema.org/AppendAction
 */
var AppendAction = 'http://schema.org/AppendAction';
/**
 * ApplyAction
 *
 * The act of registering to an organization/service without the guarantee to receive it.\n\nRelated actions:\n\n* [[RegisterAction]]: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.
 *
 * http://schema.org/ApplyAction
 */
var ApplyAction = 'http://schema.org/ApplyAction';
/**
 * ApprovedIndication
 *
 * An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.
 *
 * http://schema.org/ApprovedIndication
 */
var ApprovedIndication = 'http://schema.org/ApprovedIndication';
/**
 * Aquarium
 *
 * Aquarium.
 *
 * http://schema.org/Aquarium
 */
var Aquarium = 'http://schema.org/Aquarium';
/**
 *
 *
 *
 *
 * http://schema.org/ArchiveComponent
 */
var ArchiveComponent = 'http://schema.org/ArchiveComponent';
/**
 *
 *
 *
 *
 * http://schema.org/ArchiveOrganization
 */
var ArchiveOrganization = 'http://schema.org/ArchiveOrganization';
/**
 * ArriveAction
 *
 * The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.
 *
 * http://schema.org/ArriveAction
 */
var ArriveAction = 'http://schema.org/ArriveAction';
/**
 * ArtGallery
 *
 * An art gallery.
 *
 * http://schema.org/ArtGallery
 */
var ArtGallery = 'http://schema.org/ArtGallery';
/**
 * Artery
 *
 * A type of blood vessel that specifically carries blood away from the heart.
 *
 * http://schema.org/Artery
 */
var Artery = 'http://schema.org/Artery';
/**
 * Article
 *
 * An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.\n\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).
 *
 * http://schema.org/Article
 */
var Article = 'http://schema.org/Article';
/**
 * AskAction
 *
 * The act of posing a question / favor to someone.\n\nRelated actions:\n\n* [[ReplyAction]]: Appears generally as a response to AskAction.
 *
 * http://schema.org/AskAction
 */
var AskAction = 'http://schema.org/AskAction';
/**
 * AskPublicNewsArticle
 *
 * A [[NewsArticle]] expressing an open call by a [[NewsMediaOrganization]] asking the public for input, insights, clarifications, anecdotes, documentation, etc., on an issue, for reporting purposes.
 *
 * http://schema.org/AskPublicNewsArticle
 */
var AskPublicNewsArticle = 'http://schema.org/AskPublicNewsArticle';
/**
 * AssessAction
 *
 * The act of forming one's opinion, reaction or sentiment.
 *
 * http://schema.org/AssessAction
 */
var AssessAction = 'http://schema.org/AssessAction';
/**
 * AssignAction
 *
 * The act of allocating an action/event/task to some destination (someone or something).
 *
 * http://schema.org/AssignAction
 */
var AssignAction = 'http://schema.org/AssignAction';
/**
 * Atlas
 *
 * A collection or bound volume of maps, charts, plates or tables, physical or in media form illustrating any subject.
 *
 * http://schema.org/Atlas
 */
var Atlas = 'http://schema.org/Atlas';
/**
 * Attorney
 *
 * Professional service: Attorney. \n\nThis type is deprecated - [[LegalService]] is more inclusive and less ambiguous.
 *
 * http://schema.org/Attorney
 */
var Attorney = 'http://schema.org/Attorney';
/**
 * Audience
 *
 * Intended audience for an item, i.e. the group for whom the item was created.
 *
 * http://schema.org/Audience
 */
var Audience = 'http://schema.org/Audience';
/**
 * AudioObject
 *
 * An audio file.
 *
 * http://schema.org/AudioObject
 */
var AudioObject = 'http://schema.org/AudioObject';
/**
 * AudioObjectSnapshot
 *
 * A specific and exact (byte-for-byte) version of an [[AudioObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.
 *
 * http://schema.org/AudioObjectSnapshot
 */
var AudioObjectSnapshot = 'http://schema.org/AudioObjectSnapshot';
/**
 * Audiobook
 *
 * An audiobook.
 *
 * http://schema.org/Audiobook
 */
var Audiobook = 'http://schema.org/Audiobook';
/**
 * AuthorizeAction
 *
 * The act of granting permission to an object.
 *
 * http://schema.org/AuthorizeAction
 */
var AuthorizeAction = 'http://schema.org/AuthorizeAction';
/**
 * AutoBodyShop
 *
 * Auto body shop.
 *
 * http://schema.org/AutoBodyShop
 */
var AutoBodyShop = 'http://schema.org/AutoBodyShop';
/**
 * AutoDealer
 *
 * An car dealership.
 *
 * http://schema.org/AutoDealer
 */
var AutoDealer = 'http://schema.org/AutoDealer';
/**
 * AutoPartsStore
 *
 * An auto parts store.
 *
 * http://schema.org/AutoPartsStore
 */
var AutoPartsStore = 'http://schema.org/AutoPartsStore';
/**
 * AutoRental
 *
 * A car rental business.
 *
 * http://schema.org/AutoRental
 */
var AutoRental = 'http://schema.org/AutoRental';
/**
 * AutoRepair
 *
 * Car repair business.
 *
 * http://schema.org/AutoRepair
 */
var AutoRepair = 'http://schema.org/AutoRepair';
/**
 * AutoWash
 *
 * A car wash business.
 *
 * http://schema.org/AutoWash
 */
var AutoWash = 'http://schema.org/AutoWash';
/**
 * AutomatedTeller
 *
 * ATM/cash machine.
 *
 * http://schema.org/AutomatedTeller
 */
var AutomatedTeller = 'http://schema.org/AutomatedTeller';
/**
 * AutomotiveBusiness
 *
 * Car repair, sales, or parts.
 *
 * http://schema.org/AutomotiveBusiness
 */
var AutomotiveBusiness = 'http://schema.org/AutomotiveBusiness';
/**
 * BackgroundNewsArticle
 *
 * A [[NewsArticle]] providing historical context, definition and detail on a specific topic (aka "explainer" or "backgrounder"). For example, an in-depth article or frequently-asked-questions ([FAQ](https://en.wikipedia.org/wiki/FAQ)) document on topics such as Climate Change or the European Union. Other kinds of background material from a non-news setting are often described using [[Book]] or [[Article]], in particular [[ScholarlyArticle]]. See also [[NewsArticle]] for related vocabulary from a learning/education perspective.
 *
 * http://schema.org/BackgroundNewsArticle
 */
var BackgroundNewsArticle = 'http://schema.org/BackgroundNewsArticle';
/**
 * Bakery
 *
 * A bakery.
 *
 * http://schema.org/Bakery
 */
var Bakery = 'http://schema.org/Bakery';
/**
 * BankAccount
 *
 * A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.
 *
 * http://schema.org/BankAccount
 */
var BankAccount = 'http://schema.org/BankAccount';
/**
 * BankOrCreditUnion
 *
 * Bank or credit union.
 *
 * http://schema.org/BankOrCreditUnion
 */
var BankOrCreditUnion = 'http://schema.org/BankOrCreditUnion';
/**
 * BarOrPub
 *
 * A bar or pub.
 *
 * http://schema.org/BarOrPub
 */
var BarOrPub = 'http://schema.org/BarOrPub';
/**
 * Barcode
 *
 * An image of a visual machine-readable code such as a barcode or QR code.
 *
 * http://schema.org/Barcode
 */
var Barcode = 'http://schema.org/Barcode';
/**
 * Beach
 *
 * Beach.
 *
 * http://schema.org/Beach
 */
var Beach = 'http://schema.org/Beach';
/**
 * BeautySalon
 *
 * Beauty salon.
 *
 * http://schema.org/BeautySalon
 */
var BeautySalon = 'http://schema.org/BeautySalon';
/**
 * BedAndBreakfast
 *
 * Bed and breakfast.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/BedAndBreakfast
 */
var BedAndBreakfast = 'http://schema.org/BedAndBreakfast';
/**
 * BedDetails
 *
 * An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also [[BedType]] (under development).
 *
 * http://schema.org/BedDetails
 */
var BedDetails = 'http://schema.org/BedDetails';
/**
 * BedType
 *
 * A type of bed. This is used for indicating the bed or beds available in an accommodation.
 *
 * http://schema.org/BedType
 */
var BedType = 'http://schema.org/BedType';
/**
 * BefriendAction
 *
 * The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.\n\nRelated actions:\n\n* [[FollowAction]]: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.
 *
 * http://schema.org/BefriendAction
 */
var BefriendAction = 'http://schema.org/BefriendAction';
/**
 * BikeStore
 *
 * A bike store.
 *
 * http://schema.org/BikeStore
 */
var BikeStore = 'http://schema.org/BikeStore';
/**
 * BioChemEntity
 *
 * Any biological, chemical, or biochemical thing. For example: a protein; a gene; a chemical; a synthetic chemical.
 *
 * http://schema.org/BioChemEntity
 */
var BioChemEntity = 'http://schema.org/BioChemEntity';
/**
 * Blog
 *
 * A [blog](https://en.wikipedia.org/wiki/Blog), sometimes known as a "weblog". Note that the individual posts ([[BlogPosting]]s) in a [[Blog]] are often colloquially referred to by the same term.
 *
 * http://schema.org/Blog
 */
var Blog = 'http://schema.org/Blog';
/**
 * BlogPosting
 *
 * A blog post.
 *
 * http://schema.org/BlogPosting
 */
var BlogPosting = 'http://schema.org/BlogPosting';
/**
 * BloodTest
 *
 * A medical test performed on a sample of a patient's blood.
 *
 * http://schema.org/BloodTest
 */
var BloodTest = 'http://schema.org/BloodTest';
/**
 * BoardingPolicyType
 *
 * A type of boarding policy used by an airline.
 *
 * http://schema.org/BoardingPolicyType
 */
var BoardingPolicyType = 'http://schema.org/BoardingPolicyType';
/**
 * BoatReservation
 *
 * A reservation for boat travel.
 *
 * Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].
 *
 * http://schema.org/BoatReservation
 */
var BoatReservation = 'http://schema.org/BoatReservation';
/**
 * BoatTerminal
 *
 * A terminal for boats, ships, and other water vessels.
 *
 * http://schema.org/BoatTerminal
 */
var BoatTerminal = 'http://schema.org/BoatTerminal';
/**
 * BoatTrip
 *
 * A trip on a commercial ferry line.
 *
 * http://schema.org/BoatTrip
 */
var BoatTrip = 'http://schema.org/BoatTrip';
/**
 * BodyMeasurementTypeEnumeration
 *
 * Enumerates types (or dimensions) of a person's body measurements, for example for fitting of clothes.
 *
 * http://schema.org/BodyMeasurementTypeEnumeration
 */
var BodyMeasurementTypeEnumeration = 'http://schema.org/BodyMeasurementTypeEnumeration';
/**
 * BodyOfWater
 *
 * A body of water, such as a sea, ocean, or lake.
 *
 * http://schema.org/BodyOfWater
 */
var BodyOfWater = 'http://schema.org/BodyOfWater';
/**
 * Bone
 *
 * Rigid connective tissue that comprises up the skeletal structure of the human body.
 *
 * http://schema.org/Bone
 */
var Bone = 'http://schema.org/Bone';
/**
 * Book
 *
 * A book.
 *
 * http://schema.org/Book
 */
var Book = 'http://schema.org/Book';
/**
 * BookFormatType
 *
 * The publication format of the book.
 *
 * http://schema.org/BookFormatType
 */
var BookFormatType = 'http://schema.org/BookFormatType';
/**
 * BookSeries
 *
 * A series of books. Included books can be indicated with the hasPart property.
 *
 * http://schema.org/BookSeries
 */
var BookSeries = 'http://schema.org/BookSeries';
/**
 * BookStore
 *
 * A bookstore.
 *
 * http://schema.org/BookStore
 */
var BookStore = 'http://schema.org/BookStore';
/**
 * BookmarkAction
 *
 * An agent bookmarks/flags/labels/tags/marks an object.
 *
 * http://schema.org/BookmarkAction
 */
var BookmarkAction = 'http://schema.org/BookmarkAction';
/**
 * Boolean
 *
 * Boolean: True or False.
 * Note that `Boolean` is a reserved Javascript keyword, and is therefore suffixed by `__workaround`.
 * For a list of reserved keywords, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords.
 *
 * http://schema.org/Boolean
 */
var Boolean__workaround = 'http://schema.org/Boolean';
/**
 * BorrowAction
 *
 * The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.\n\nRelated actions:\n\n* [[LendAction]]: Reciprocal of BorrowAction.
 *
 * http://schema.org/BorrowAction
 */
var BorrowAction = 'http://schema.org/BorrowAction';
/**
 * BowlingAlley
 *
 * A bowling alley.
 *
 * http://schema.org/BowlingAlley
 */
var BowlingAlley = 'http://schema.org/BowlingAlley';
/**
 * BrainStructure
 *
 * Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.
 *
 * http://schema.org/BrainStructure
 */
var BrainStructure = 'http://schema.org/BrainStructure';
/**
 * Brand
 *
 * A brand is a name used by an organization or business person for labeling a product, product group, or similar.
 *
 * http://schema.org/Brand
 */
var Brand = 'http://schema.org/Brand';
/**
 * BreadcrumbList
 *
 * A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.\n\nThe [[position]] property is used to reconstruct the order of the items in a BreadcrumbList. The convention is that a breadcrumb list has an [[itemListOrder]] of [[ItemListOrderAscending]] (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.
 *
 *
 * http://schema.org/BreadcrumbList
 */
var BreadcrumbList = 'http://schema.org/BreadcrumbList';
/**
 * Brewery
 *
 * Brewery.
 *
 * http://schema.org/Brewery
 */
var Brewery = 'http://schema.org/Brewery';
/**
 * Bridge
 *
 * A bridge.
 *
 * http://schema.org/Bridge
 */
var Bridge = 'http://schema.org/Bridge';
/**
 * BroadcastChannel
 *
 * A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
 *
 * http://schema.org/BroadcastChannel
 */
var BroadcastChannel = 'http://schema.org/BroadcastChannel';
/**
 * BroadcastEvent
 *
 * An over the air or online broadcast event.
 *
 * http://schema.org/BroadcastEvent
 */
var BroadcastEvent = 'http://schema.org/BroadcastEvent';
/**
 * BroadcastFrequencySpecification
 *
 * The frequency in MHz and the modulation used for a particular BroadcastService.
 *
 * http://schema.org/BroadcastFrequencySpecification
 */
var BroadcastFrequencySpecification = 'http://schema.org/BroadcastFrequencySpecification';
/**
 * BroadcastService
 *
 * A delivery service through which content is provided via broadcast over the air or online.
 *
 * http://schema.org/BroadcastService
 */
var BroadcastService = 'http://schema.org/BroadcastService';
/**
 * BrokerageAccount
 *
 * An account that allows an investor to deposit funds and place investment orders with a licensed broker or brokerage firm.
 *
 * http://schema.org/BrokerageAccount
 */
var BrokerageAccount = 'http://schema.org/BrokerageAccount';
/**
 * BuddhistTemple
 *
 * A Buddhist temple.
 *
 * http://schema.org/BuddhistTemple
 */
var BuddhistTemple = 'http://schema.org/BuddhistTemple';
/**
 * BusOrCoach
 *
 * A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Coaches are luxury busses, usually in service for long distance travel.
 *
 * http://schema.org/BusOrCoach
 */
var BusOrCoach = 'http://schema.org/BusOrCoach';
/**
 * BusReservation
 *
 * A reservation for bus travel. \n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].
 *
 * http://schema.org/BusReservation
 */
var BusReservation = 'http://schema.org/BusReservation';
/**
 * BusStation
 *
 * A bus station.
 *
 * http://schema.org/BusStation
 */
var BusStation = 'http://schema.org/BusStation';
/**
 * BusStop
 *
 * A bus stop.
 *
 * http://schema.org/BusStop
 */
var BusStop = 'http://schema.org/BusStop';
/**
 * BusTrip
 *
 * A trip on a commercial bus line.
 *
 * http://schema.org/BusTrip
 */
var BusTrip = 'http://schema.org/BusTrip';
/**
 * BusinessAudience
 *
 * A set of characteristics belonging to businesses, e.g. who compose an item's target audience.
 *
 * http://schema.org/BusinessAudience
 */
var BusinessAudience = 'http://schema.org/BusinessAudience';
/**
 * BusinessEntityType
 *
 * A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#Business\n* http://purl.org/goodrelations/v1#Enduser\n* http://purl.org/goodrelations/v1#PublicInstitution\n* http://purl.org/goodrelations/v1#Reseller
 *
 *
 * http://schema.org/BusinessEntityType
 */
var BusinessEntityType = 'http://schema.org/BusinessEntityType';
/**
 * BusinessEvent
 *
 * Event type: Business event.
 *
 * http://schema.org/BusinessEvent
 */
var BusinessEvent = 'http://schema.org/BusinessEvent';
/**
 * BusinessFunction
 *
 * The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#ConstructionInstallation\n* http://purl.org/goodrelations/v1#Dispose\n* http://purl.org/goodrelations/v1#LeaseOut\n* http://purl.org/goodrelations/v1#Maintain\n* http://purl.org/goodrelations/v1#ProvideService\n* http://purl.org/goodrelations/v1#Repair\n* http://purl.org/goodrelations/v1#Sell\n* http://purl.org/goodrelations/v1#Buy
 *
 *
 * http://schema.org/BusinessFunction
 */
var BusinessFunction = 'http://schema.org/BusinessFunction';
/**
 * BuyAction
 *
 * The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.
 *
 * http://schema.org/BuyAction
 */
var BuyAction = 'http://schema.org/BuyAction';
/**
 * CDCPMDRecord
 *
 * A CDCPMDRecord is a data structure representing a record in a CDC tabular data format
 *       used for hospital data reporting. See [documentation](/docs/cdc-covid.html) for details, and the linked CDC materials for authoritative
 *       definitions used as the source here.
 *
 *
 * http://schema.org/CDCPMDRecord
 */
var CDCPMDRecord = 'http://schema.org/CDCPMDRecord';
/**
 * CableOrSatelliteService
 *
 * A service which provides access to media programming like TV or radio. Access may be via cable or satellite.
 *
 * http://schema.org/CableOrSatelliteService
 */
var CableOrSatelliteService = 'http://schema.org/CableOrSatelliteService';
/**
 * CafeOrCoffeeShop
 *
 * A cafe or coffee shop.
 *
 * http://schema.org/CafeOrCoffeeShop
 */
var CafeOrCoffeeShop = 'http://schema.org/CafeOrCoffeeShop';
/**
 * Campground
 *
 * A camping site, campsite, or [[Campground]] is a place used for overnight stay in the outdoors, typically containing individual [[CampingPitch]] locations. \n\n
 * In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite)).\n\n
 *
 * See also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).
 *
 *
 * http://schema.org/Campground
 */
var Campground = 'http://schema.org/Campground';
/**
 * CampingPitch
 *
 * A [[CampingPitch]] is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or [[Campground]].\n\n
 * In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
 * (Source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite).)\n\n
 * See also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).
 *
 *
 * http://schema.org/CampingPitch
 */
var CampingPitch = 'http://schema.org/CampingPitch';
/**
 * Canal
 *
 * A canal, like the Panama Canal.
 *
 * http://schema.org/Canal
 */
var Canal = 'http://schema.org/Canal';
/**
 * CancelAction
 *
 * The act of asserting that a future event/action is no longer going to happen.\n\nRelated actions:\n\n* [[ConfirmAction]]: The antonym of CancelAction.
 *
 * http://schema.org/CancelAction
 */
var CancelAction = 'http://schema.org/CancelAction';
/**
 * Car
 *
 * A car is a wheeled, self-powered motor vehicle used for transportation.
 *
 * http://schema.org/Car
 */
var Car = 'http://schema.org/Car';
/**
 * CarUsageType
 *
 * A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.
 *
 * http://schema.org/CarUsageType
 */
var CarUsageType = 'http://schema.org/CarUsageType';
/**
 * Casino
 *
 * A casino.
 *
 * http://schema.org/Casino
 */
var Casino = 'http://schema.org/Casino';
/**
 * CategoryCode
 *
 * A Category Code.
 *
 * http://schema.org/CategoryCode
 */
var CategoryCode = 'http://schema.org/CategoryCode';
/**
 * CategoryCodeSet
 *
 * A set of Category Code values.
 *
 * http://schema.org/CategoryCodeSet
 */
var CategoryCodeSet = 'http://schema.org/CategoryCodeSet';
/**
 * CatholicChurch
 *
 * A Catholic church.
 *
 * http://schema.org/CatholicChurch
 */
var CatholicChurch = 'http://schema.org/CatholicChurch';
/**
 * Cemetery
 *
 * A graveyard.
 *
 * http://schema.org/Cemetery
 */
var Cemetery = 'http://schema.org/Cemetery';
/**
 * Chapter
 *
 * One of the sections into which a book is divided. A chapter usually has a section number or a name.
 *
 * http://schema.org/Chapter
 */
var Chapter = 'http://schema.org/Chapter';
/**
 * CheckAction
 *
 * An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.
 *
 * http://schema.org/CheckAction
 */
var CheckAction = 'http://schema.org/CheckAction';
/**
 * CheckInAction
 *
 * The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check-in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).\n\nRelated actions:\n\n* [[CheckOutAction]]: The antonym of CheckInAction.\n* [[ArriveAction]]: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.\n* [[ConfirmAction]]: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the *start* of a previously reserved service rather than its validity/existence.
 *
 * http://schema.org/CheckInAction
 */
var CheckInAction = 'http://schema.org/CheckInAction';
/**
 * CheckOutAction
 *
 * The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check-in) or place (e.g. hotel).\n\nRelated actions:\n\n* [[CheckInAction]]: The antonym of CheckOutAction.\n* [[DepartAction]]: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.\n* [[CancelAction]]: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.
 *
 * http://schema.org/CheckOutAction
 */
var CheckOutAction = 'http://schema.org/CheckOutAction';
/**
 * CheckoutPage
 *
 * Web page type: Checkout page.
 *
 * http://schema.org/CheckoutPage
 */
var CheckoutPage = 'http://schema.org/CheckoutPage';
/**
 * ChemicalSubstance
 *
 * A chemical substance is 'a portion of matter of constant composition, composed of molecular entities of the same type or of different types' (source: [ChEBI:59999](https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999)).
 *
 * http://schema.org/ChemicalSubstance
 */
var ChemicalSubstance = 'http://schema.org/ChemicalSubstance';
/**
 * ChildCare
 *
 * A Childcare center.
 *
 * http://schema.org/ChildCare
 */
var ChildCare = 'http://schema.org/ChildCare';
/**
 * ChildrensEvent
 *
 * Event type: Children's event.
 *
 * http://schema.org/ChildrensEvent
 */
var ChildrensEvent = 'http://schema.org/ChildrensEvent';
/**
 * ChooseAction
 *
 * The act of expressing a preference from a set of options or a large or unbounded set of choices/options.
 *
 * http://schema.org/ChooseAction
 */
var ChooseAction = 'http://schema.org/ChooseAction';
/**
 * Church
 *
 * A church.
 *
 * http://schema.org/Church
 */
var Church = 'http://schema.org/Church';
/**
 * City
 *
 * A city or town.
 *
 * http://schema.org/City
 */
var City = 'http://schema.org/City';
/**
 * CityHall
 *
 * A city hall.
 *
 * http://schema.org/CityHall
 */
var CityHall = 'http://schema.org/CityHall';
/**
 * CivicStructure
 *
 * A public structure, such as a town hall or concert hall.
 *
 * http://schema.org/CivicStructure
 */
var CivicStructure = 'http://schema.org/CivicStructure';
/**
 * Claim
 *
 * A [[Claim]] in Schema.org represents a specific, factually-oriented claim that could be the [[itemReviewed]] in a [[ClaimReview]]. The content of a claim can be summarized with the [[text]] property. Variations on well known claims can have their common identity indicated via [[sameAs]] links, and summarized with a [[name]]. Ideally, a [[Claim]] description includes enough contextual information to minimize the risk of ambiguity or inclarity. In practice, many claims are better understood in the context in which they appear or the interpretations provided by claim reviews.
 *
 *   Beyond [[ClaimReview]], the Claim type can be associated with related creative works - for example a [[ScholarlyArticle]] or [[Question]] might be [[about]] some [[Claim]].
 *
 *   At this time, Schema.org does not define any types of relationship between claims. This is a natural area for future exploration.
 *
 *
 * http://schema.org/Claim
 */
var Claim = 'http://schema.org/Claim';
/**
 * ClaimReview
 *
 * A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).
 *
 * http://schema.org/ClaimReview
 */
var ClaimReview = 'http://schema.org/ClaimReview';
/**
 * Class
 *
 * A class, also often called a 'Type'; equivalent to rdfs:Class.
 *
 * http://schema.org/Class
 */
var Class = 'http://schema.org/Class';
/**
 * Clip
 *
 * A short TV or radio program or a segment/part of a program.
 *
 * http://schema.org/Clip
 */
var Clip = 'http://schema.org/Clip';
/**
 * ClothingStore
 *
 * A clothing store.
 *
 * http://schema.org/ClothingStore
 */
var ClothingStore = 'http://schema.org/ClothingStore';
/**
 * Code
 *
 * Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
 *
 * http://schema.org/Code
 */
var Code = 'http://schema.org/Code';
/**
 * Collection
 *
 * A collection of items, e.g. creative works or products.
 *
 * http://schema.org/Collection
 */
var Collection = 'http://schema.org/Collection';
/**
 * CollectionPage
 *
 * Web page type: Collection page.
 *
 * http://schema.org/CollectionPage
 */
var CollectionPage = 'http://schema.org/CollectionPage';
/**
 * CollegeOrUniversity
 *
 * A college, university, or other third-level educational institution.
 *
 * http://schema.org/CollegeOrUniversity
 */
var CollegeOrUniversity = 'http://schema.org/CollegeOrUniversity';
/**
 * ComedyClub
 *
 * A comedy club.
 *
 * http://schema.org/ComedyClub
 */
var ComedyClub = 'http://schema.org/ComedyClub';
/**
 * ComedyEvent
 *
 * Event type: Comedy event.
 *
 * http://schema.org/ComedyEvent
 */
var ComedyEvent = 'http://schema.org/ComedyEvent';
/**
 * ComicCoverArt
 *
 * The artwork on the cover of a comic.
 *
 * http://schema.org/ComicCoverArt
 */
var ComicCoverArt = 'http://schema.org/ComicCoverArt';
/**
 * ComicIssue
 *
 * Individual comic issues are serially published as
 *     	part of a larger series. For the sake of consistency, even one-shot issues
 *     	belong to a series comprised of a single issue. All comic issues can be
 *     	uniquely identified by: the combination of the name and volume number of the
 *     	series to which the issue belongs; the issue number; and the variant
 *     	description of the issue (if any).
 *
 * http://schema.org/ComicIssue
 */
var ComicIssue = 'http://schema.org/ComicIssue';
/**
 * ComicSeries
 *
 * A sequential publication of comic stories under a
 *     	unifying title, for example "The Amazing Spider-Man" or "Groo the
 *     	Wanderer".
 *
 * http://schema.org/ComicSeries
 */
var ComicSeries = 'http://schema.org/ComicSeries';
/**
 * ComicStory
 *
 * The term "story" is any indivisible, re-printable
 *     	unit of a comic, including the interior stories, covers, and backmatter. Most
 *     	comics have at least two stories: a cover (ComicCoverArt) and an interior story.
 *
 * http://schema.org/ComicStory
 */
var ComicStory = 'http://schema.org/ComicStory';
/**
 * Comment
 *
 * A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the [[text]] property, and its topic via [[about]], properties shared with all CreativeWorks.
 *
 * http://schema.org/Comment
 */
var Comment = 'http://schema.org/Comment';
/**
 * CommentAction
 *
 * The act of generating a comment about a subject.
 *
 * http://schema.org/CommentAction
 */
var CommentAction = 'http://schema.org/CommentAction';
/**
 * CommunicateAction
 *
 * The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.
 *
 * http://schema.org/CommunicateAction
 */
var CommunicateAction = 'http://schema.org/CommunicateAction';
/**
 * CompleteDataFeed
 *
 * A [[CompleteDataFeed]] is a [[DataFeed]] whose standard representation includes content for every item currently in the feed.
 *
 * This is the equivalent of Atom's element as defined in Feed Paging and Archiving [RFC 5005](https://tools.ietf.org/html/rfc5005), for example (and as defined for Atom), when using data from a feed that represents a collection of items that varies over time (e.g. "Top Twenty Records") there is no need to have newer entries mixed in alongside older, obsolete entries. By marking this feed as a CompleteDataFeed, old entries can be safely discarded when the feed is refreshed, since we can assume the feed has provided descriptions for all current items.
 *
 * http://schema.org/CompleteDataFeed
 */
var CompleteDataFeed = 'http://schema.org/CompleteDataFeed';
/**
 * CompoundPriceSpecification
 *
 * A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. "electricity" or "final cleaning").
 *
 * http://schema.org/CompoundPriceSpecification
 */
var CompoundPriceSpecification = 'http://schema.org/CompoundPriceSpecification';
/**
 * ComputerLanguage
 *
 * This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the [[Language]] type.
 *
 * http://schema.org/ComputerLanguage
 */
var ComputerLanguage = 'http://schema.org/ComputerLanguage';
/**
 * ComputerStore
 *
 * A computer store.
 *
 * http://schema.org/ComputerStore
 */
var ComputerStore = 'http://schema.org/ComputerStore';
/**
 * ConfirmAction
 *
 * The act of notifying someone that a future event/action is going to happen as expected.\n\nRelated actions:\n\n* [[CancelAction]]: The antonym of ConfirmAction.
 *
 * http://schema.org/ConfirmAction
 */
var ConfirmAction = 'http://schema.org/ConfirmAction';
/**
 * Consortium
 *
 * A Consortium is a membership [[Organization]] whose members are typically Organizations.
 *
 * http://schema.org/Consortium
 */
var Consortium = 'http://schema.org/Consortium';
/**
 * ConstraintNode
 *
 * The ConstraintNode type is provided to support usecases in which a node in a structured data graph is described with properties which appear to describe a single entity, but are being used in a situation where they serve a more abstract purpose. A [[ConstraintNode]] can be described using [[constraintProperty]] and [[numConstraints]]. These constraint properties can serve a
 *     variety of purposes, and their values may sometimes be understood to indicate sets of possible values rather than single, exact and specific values.
 *
 * http://schema.org/ConstraintNode
 */
var ConstraintNode = 'http://schema.org/ConstraintNode';
/**
 * ConsumeAction
 *
 * The act of ingesting information/resources/food.
 *
 * http://schema.org/ConsumeAction
 */
var ConsumeAction = 'http://schema.org/ConsumeAction';
/**
 * ContactPage
 *
 * Web page type: Contact page.
 *
 * http://schema.org/ContactPage
 */
var ContactPage = 'http://schema.org/ContactPage';
/**
 * ContactPoint
 *
 * A contact point&#x2014;for example, a Customer Complaints department.
 *
 * http://schema.org/ContactPoint
 */
var ContactPoint = 'http://schema.org/ContactPoint';
/**
 * ContactPointOption
 *
 * Enumerated options related to a ContactPoint.
 *
 * http://schema.org/ContactPointOption
 */
var ContactPointOption = 'http://schema.org/ContactPointOption';
/**
 * Continent
 *
 * One of the continents (for example, Europe or Africa).
 *
 * http://schema.org/Continent
 */
var Continent = 'http://schema.org/Continent';
/**
 * ControlAction
 *
 * An agent controls a device or application.
 *
 * http://schema.org/ControlAction
 */
var ControlAction = 'http://schema.org/ControlAction';
/**
 * ConvenienceStore
 *
 * A convenience store.
 *
 * http://schema.org/ConvenienceStore
 */
var ConvenienceStore = 'http://schema.org/ConvenienceStore';
/**
 * Conversation
 *
 * One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.
 *
 * http://schema.org/Conversation
 */
var Conversation = 'http://schema.org/Conversation';
/**
 * CookAction
 *
 * The act of producing/preparing food.
 *
 * http://schema.org/CookAction
 */
var CookAction = 'http://schema.org/CookAction';
/**
 * Corporation
 *
 * Organization: A business corporation.
 *
 * http://schema.org/Corporation
 */
var Corporation = 'http://schema.org/Corporation';
/**
 * CorrectionComment
 *
 * A [[comment]] that corrects [[CreativeWork]].
 *
 * http://schema.org/CorrectionComment
 */
var CorrectionComment = 'http://schema.org/CorrectionComment';
/**
 * Country
 *
 * A country.
 *
 * http://schema.org/Country
 */
var Country = 'http://schema.org/Country';
/**
 * Course
 *
 * A description of an educational course which may be offered as distinct instances which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.
 *
 * http://schema.org/Course
 */
var Course = 'http://schema.org/Course';
/**
 * CourseInstance
 *
 * An instance of a [[Course]] which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.
 *
 * http://schema.org/CourseInstance
 */
var CourseInstance = 'http://schema.org/CourseInstance';
/**
 * Courthouse
 *
 * A courthouse.
 *
 * http://schema.org/Courthouse
 */
var Courthouse = 'http://schema.org/Courthouse';
/**
 * CoverArt
 *
 * The artwork on the outer surface of a CreativeWork.
 *
 * http://schema.org/CoverArt
 */
var CoverArt = 'http://schema.org/CoverArt';
/**
 * CovidTestingFacility
 *
 * A CovidTestingFacility is a [[MedicalClinic]] where testing for the COVID-19 Coronavirus
 *       disease is available. If the facility is being made available from an established [[Pharmacy]], [[Hotel]], or other
 *       non-medical organization, multiple types can be listed. This makes it easier to re-use existing schema.org information
 *       about that place, e.g. contact info, address, opening hours. Note that in an emergency, such information may not always be reliable.
 *
 *
 * http://schema.org/CovidTestingFacility
 */
var CovidTestingFacility = 'http://schema.org/CovidTestingFacility';
/**
 * CreateAction
 *
 * The act of deliberately creating/producing/generating/building a result out of the agent.
 *
 * http://schema.org/CreateAction
 */
var CreateAction = 'http://schema.org/CreateAction';
/**
 * CreativeWork
 *
 * The most generic kind of creative work, including books, movies, photographs, software programs, etc.
 *
 * http://schema.org/CreativeWork
 */
var CreativeWork = 'http://schema.org/CreativeWork';
/**
 * CreativeWorkSeason
 *
 * A media season, e.g. TV, radio, video game etc.
 *
 * http://schema.org/CreativeWorkSeason
 */
var CreativeWorkSeason = 'http://schema.org/CreativeWorkSeason';
/**
 * CreativeWorkSeries
 *
 * A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike [[ItemList]] which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as TV, radio and games).\n\nSpecific subtypes are available for describing [[TVSeries]], [[RadioSeries]], [[MovieSeries]], [[BookSeries]], [[Periodical]] and [[VideoGameSeries]]. In each case, the [[hasPart]] / [[isPartOf]] properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.\n\nIt is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.
 *
 *
 * http://schema.org/CreativeWorkSeries
 */
var CreativeWorkSeries = 'http://schema.org/CreativeWorkSeries';
/**
 * CreditCard
 *
 * A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#AmericanExpress\n* http://purl.org/goodrelations/v1#DinersClub\n* http://purl.org/goodrelations/v1#Discover\n* http://purl.org/goodrelations/v1#JCB\n* http://purl.org/goodrelations/v1#MasterCard\n* http://purl.org/goodrelations/v1#VISA
 *
 *
 * http://schema.org/CreditCard
 */
var CreditCard = 'http://schema.org/CreditCard';
/**
 * Crematorium
 *
 * A crematorium.
 *
 * http://schema.org/Crematorium
 */
var Crematorium = 'http://schema.org/Crematorium';
/**
 * CriticReview
 *
 * A [[CriticReview]] is a more specialized form of Review written or published by a source that is recognized for its reviewing activities. These can include online columns, travel and food guides, TV and radio shows, blogs and other independent Web sites. [[CriticReview]]s are typically more in-depth and professionally written. For simpler, casually written user/visitor/viewer/customer reviews, it is more appropriate to use the [[UserReview]] type. Review aggregator sites such as Metacritic already separate out the site's user reviews from selected critic reviews that originate from third-party sources.
 *
 * http://schema.org/CriticReview
 */
var CriticReview = 'http://schema.org/CriticReview';
/**
 * CssSelectorType
 *
 * Text representing a CSS selector.
 *
 * http://schema.org/CssSelectorType
 */
var CssSelectorType = 'http://schema.org/CssSelectorType';
/**
 * CurrencyConversionService
 *
 * A service to convert funds from one currency to another currency.
 *
 * http://schema.org/CurrencyConversionService
 */
var CurrencyConversionService = 'http://schema.org/CurrencyConversionService';
/**
 * DDxElement
 *
 * An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.
 *
 * http://schema.org/DDxElement
 */
var DDxElement = 'http://schema.org/DDxElement';
/**
 * DanceEvent
 *
 * Event type: A social dance.
 *
 * http://schema.org/DanceEvent
 */
var DanceEvent = 'http://schema.org/DanceEvent';
/**
 * DanceGroup
 *
 * A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.
 *
 * http://schema.org/DanceGroup
 */
var DanceGroup = 'http://schema.org/DanceGroup';
/**
 * DataCatalog
 *
 * A collection of datasets.
 *
 * http://schema.org/DataCatalog
 */
var DataCatalog = 'http://schema.org/DataCatalog';
/**
 * DataDownload
 *
 * All or part of a [[Dataset]] in downloadable form.
 *
 * http://schema.org/DataDownload
 */
var DataDownload = 'http://schema.org/DataDownload';
/**
 * DataFeed
 *
 * A single feed providing structured information about one or more entities or topics.
 *
 * http://schema.org/DataFeed
 */
var DataFeed = 'http://schema.org/DataFeed';
/**
 * DataFeedItem
 *
 * A single item within a larger data feed.
 *
 * http://schema.org/DataFeedItem
 */
var DataFeedItem = 'http://schema.org/DataFeedItem';
/**
 * DataType
 *
 * The basic data types such as Integers, Strings, etc.
 *
 * http://schema.org/DataType
 */
var DataType = 'http://schema.org/DataType';
/**
 * Dataset
 *
 * A body of structured information describing some topic(s) of interest.
 *
 * http://schema.org/Dataset
 */
var Dataset = 'http://schema.org/Dataset';
/**
 * Date
 *
 * A date value in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).
 * Note that `Date` is a reserved Javascript keyword, and is therefore suffixed by `__workaround`.
 * For a list of reserved keywords, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords.
 *
 * http://schema.org/Date
 */
var Date__workaround = 'http://schema.org/Date';
/**
 * DateTime
 *
 * A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).
 *
 * http://schema.org/DateTime
 */
var DateTime = 'http://schema.org/DateTime';
/**
 * DatedMoneySpecification
 *
 * A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. __Note:__ This type has been superseded by [[MonetaryAmount]], use of that type is recommended.
 *
 * http://schema.org/DatedMoneySpecification
 */
var DatedMoneySpecification = 'http://schema.org/DatedMoneySpecification';
/**
 * DayOfWeek
 *
 * The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.
 *
 * Originally, URLs from [GoodRelations](http://purl.org/goodrelations/v1) were used (for [[Monday]], [[Tuesday]], [[Wednesday]], [[Thursday]], [[Friday]], [[Saturday]], [[Sunday]] plus a special entry for [[PublicHolidays]]); these have now been integrated directly into schema.org.
 *
 *
 * http://schema.org/DayOfWeek
 */
var DayOfWeek = 'http://schema.org/DayOfWeek';
/**
 * DaySpa
 *
 * A day spa.
 *
 * http://schema.org/DaySpa
 */
var DaySpa = 'http://schema.org/DaySpa';
/**
 * DeactivateAction
 *
 * The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).
 *
 * http://schema.org/DeactivateAction
 */
var DeactivateAction = 'http://schema.org/DeactivateAction';
/**
 * DefenceEstablishment
 *
 * A defence establishment, such as an army or navy base.
 *
 * http://schema.org/DefenceEstablishment
 */
var DefenceEstablishment = 'http://schema.org/DefenceEstablishment';
/**
 * DefinedRegion
 *
 * A DefinedRegion is a geographic area defined by potentially arbitrary (rather than political, administrative or natural geographical) criteria. Properties are provided for defining a region by reference to sets of postal codes.
 *
 * Examples: a delivery destination when shopping. Region where regional pricing is configured.
 *
 * Requirement 1:
 * Country: US
 * States: "NY", "CA"
 *
 * Requirement 2:
 * Country: US
 * PostalCode Set: { [94000-94585], [97000, 97999], [13000, 13599]}
 * { [12345, 12345], [78945, 78945], }
 * Region = state, canton, prefecture, autonomous community...
 *
 *
 * http://schema.org/DefinedRegion
 */
var DefinedRegion = 'http://schema.org/DefinedRegion';
/**
 * DefinedTerm
 *
 * A word, name, acronym, phrase, etc. with a formal definition. Often used in the context of category or subject classification, glossaries or dictionaries, product or creative work types, etc. Use the name property for the term being defined, use termCode if the term has an alpha-numeric code allocated, use description to provide the definition of the term.
 *
 * http://schema.org/DefinedTerm
 */
var DefinedTerm = 'http://schema.org/DefinedTerm';
/**
 * DefinedTermSet
 *
 * A set of defined terms, for example a set of categories or a classification scheme, a glossary, dictionary or enumeration.
 *
 * http://schema.org/DefinedTermSet
 */
var DefinedTermSet = 'http://schema.org/DefinedTermSet';
/**
 * DeleteAction
 *
 * The act of editing a recipient by removing one of its objects.
 *
 * http://schema.org/DeleteAction
 */
var DeleteAction = 'http://schema.org/DeleteAction';
/**
 * DeliveryChargeSpecification
 *
 * The price for the delivery of an offer using a particular delivery method.
 *
 * http://schema.org/DeliveryChargeSpecification
 */
var DeliveryChargeSpecification = 'http://schema.org/DeliveryChargeSpecification';
/**
 * DeliveryEvent
 *
 * An event involving the delivery of an item.
 *
 * http://schema.org/DeliveryEvent
 */
var DeliveryEvent = 'http://schema.org/DeliveryEvent';
/**
 * DeliveryMethod
 *
 * A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#DeliveryModeDirectDownload\n* http://purl.org/goodrelations/v1#DeliveryModeFreight\n* http://purl.org/goodrelations/v1#DeliveryModeMail\n* http://purl.org/goodrelations/v1#DeliveryModeOwnFleet\n* http://purl.org/goodrelations/v1#DeliveryModePickUp\n* http://purl.org/goodrelations/v1#DHL\n* http://purl.org/goodrelations/v1#FederalExpress\n* http://purl.org/goodrelations/v1#UPS
 *
 *
 * http://schema.org/DeliveryMethod
 */
var DeliveryMethod = 'http://schema.org/DeliveryMethod';
/**
 * DeliveryTimeSettings
 *
 * A DeliveryTimeSettings represents re-usable pieces of shipping information, relating to timing. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of an [[OfferShippingDetails]]. Several occurrences can be published, distinguished (and identified/referenced) by their different values for [[transitTimeLabel]].
 *
 * http://schema.org/DeliveryTimeSettings
 */
var DeliveryTimeSettings = 'http://schema.org/DeliveryTimeSettings';
/**
 * Demand
 *
 * A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.
 *
 * http://schema.org/Demand
 */
var Demand = 'http://schema.org/Demand';
/**
 * Dentist
 *
 * A dentist.
 *
 * http://schema.org/Dentist
 */
var Dentist = 'http://schema.org/Dentist';
/**
 * DepartAction
 *
 * The act of  departing from a place. An agent departs from a fromLocation for a destination, optionally with participants.
 *
 * http://schema.org/DepartAction
 */
var DepartAction = 'http://schema.org/DepartAction';
/**
 * DepartmentStore
 *
 * A department store.
 *
 * http://schema.org/DepartmentStore
 */
var DepartmentStore = 'http://schema.org/DepartmentStore';
/**
 * DepositAccount
 *
 * A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.
 *
 * http://schema.org/DepositAccount
 */
var DepositAccount = 'http://schema.org/DepositAccount';
/**
 * DiagnosticLab
 *
 * A medical laboratory that offers on-site or off-site diagnostic services.
 *
 * http://schema.org/DiagnosticLab
 */
var DiagnosticLab = 'http://schema.org/DiagnosticLab';
/**
 * DiagnosticProcedure
 *
 * A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.
 *
 * http://schema.org/DiagnosticProcedure
 */
var DiagnosticProcedure = 'http://schema.org/DiagnosticProcedure';
/**
 * Diet
 *
 * A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.
 *
 * http://schema.org/Diet
 */
var Diet = 'http://schema.org/Diet';
/**
 * DietarySupplement
 *
 * A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.
 *
 * http://schema.org/DietarySupplement
 */
var DietarySupplement = 'http://schema.org/DietarySupplement';
/**
 * DigitalDocument
 *
 * An electronic file or document.
 *
 * http://schema.org/DigitalDocument
 */
var DigitalDocument = 'http://schema.org/DigitalDocument';
/**
 * DigitalDocumentPermission
 *
 * A permission for a particular person or group to access a particular file.
 *
 * http://schema.org/DigitalDocumentPermission
 */
var DigitalDocumentPermission = 'http://schema.org/DigitalDocumentPermission';
/**
 * DigitalDocumentPermissionType
 *
 * A type of permission which can be granted for accessing a digital document.
 *
 * http://schema.org/DigitalDocumentPermissionType
 */
var DigitalDocumentPermissionType = 'http://schema.org/DigitalDocumentPermissionType';
/**
 * DigitalPlatformEnumeration
 *
 * Enumerates some common technology platforms, for use with properties such as [[actionPlatform]]. It is not supposed to be comprehensive - when a suitable code is not enumerated here, textual or URL values can be used instead. These codes are at a fairly high level and do not deal with versioning and other nuance. Additional codes can be suggested [in github](https://github.com/schemaorg/schemaorg/issues/3057).
 *
 * http://schema.org/DigitalPlatformEnumeration
 */
var DigitalPlatformEnumeration = 'http://schema.org/DigitalPlatformEnumeration';
/**
 * DisagreeAction
 *
 * The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/DisagreeAction
 */
var DisagreeAction = 'http://schema.org/DisagreeAction';
/**
 * DiscoverAction
 *
 * The act of discovering/finding an object.
 *
 * http://schema.org/DiscoverAction
 */
var DiscoverAction = 'http://schema.org/DiscoverAction';
/**
 * DiscussionForumPosting
 *
 * A posting to a discussion forum.
 *
 * http://schema.org/DiscussionForumPosting
 */
var DiscussionForumPosting = 'http://schema.org/DiscussionForumPosting';
/**
 * DislikeAction
 *
 * The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/DislikeAction
 */
var DislikeAction = 'http://schema.org/DislikeAction';
/**
 * Distance
 *
 * Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.
 *
 * http://schema.org/Distance
 */
var Distance = 'http://schema.org/Distance';
/**
 * Distillery
 *
 * A distillery.
 *
 * http://schema.org/Distillery
 */
var Distillery = 'http://schema.org/Distillery';
/**
 * DonateAction
 *
 * The act of providing goods, services, or money without compensation, often for philanthropic reasons.
 *
 * http://schema.org/DonateAction
 */
var DonateAction = 'http://schema.org/DonateAction';
/**
 * DoseSchedule
 *
 * A specific dosing schedule for a drug or supplement.
 *
 * http://schema.org/DoseSchedule
 */
var DoseSchedule = 'http://schema.org/DoseSchedule';
/**
 * DownloadAction
 *
 * The act of downloading an object.
 *
 * http://schema.org/DownloadAction
 */
var DownloadAction = 'http://schema.org/DownloadAction';
/**
 * DrawAction
 *
 * The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.
 *
 * http://schema.org/DrawAction
 */
var DrawAction = 'http://schema.org/DrawAction';
/**
 * Drawing
 *
 * A picture or diagram made with a pencil, pen, or crayon rather than paint.
 *
 * http://schema.org/Drawing
 */
var Drawing = 'http://schema.org/Drawing';
/**
 * DrinkAction
 *
 * The act of swallowing liquids.
 *
 * http://schema.org/DrinkAction
 */
var DrinkAction = 'http://schema.org/DrinkAction';
/**
 * DriveWheelConfigurationValue
 *
 * A value indicating which roadwheels will receive torque.
 *
 * http://schema.org/DriveWheelConfigurationValue
 */
var DriveWheelConfigurationValue = 'http://schema.org/DriveWheelConfigurationValue';
/**
 * Drug
 *
 * A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism. Here the term drug is used interchangeably with the term medicine although clinical knowledge makes a clear difference between them.
 *
 * http://schema.org/Drug
 */
var Drug = 'http://schema.org/Drug';
/**
 * DrugClass
 *
 * A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.
 *
 * http://schema.org/DrugClass
 */
var DrugClass = 'http://schema.org/DrugClass';
/**
 * DrugCost
 *
 * The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.
 *
 * http://schema.org/DrugCost
 */
var DrugCost = 'http://schema.org/DrugCost';
/**
 * DrugCostCategory
 *
 * Enumerated categories of medical drug costs.
 *
 * http://schema.org/DrugCostCategory
 */
var DrugCostCategory = 'http://schema.org/DrugCostCategory';
/**
 * DrugLegalStatus
 *
 * The legal availability status of a medical drug.
 *
 * http://schema.org/DrugLegalStatus
 */
var DrugLegalStatus = 'http://schema.org/DrugLegalStatus';
/**
 * DrugPregnancyCategory
 *
 * Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.
 *
 * http://schema.org/DrugPregnancyCategory
 */
var DrugPregnancyCategory = 'http://schema.org/DrugPregnancyCategory';
/**
 * DrugPrescriptionStatus
 *
 * Indicates whether this drug is available by prescription or over-the-counter.
 *
 * http://schema.org/DrugPrescriptionStatus
 */
var DrugPrescriptionStatus = 'http://schema.org/DrugPrescriptionStatus';
/**
 * DrugStrength
 *
 * A specific strength in which a medical drug is available in a specific country.
 *
 * http://schema.org/DrugStrength
 */
var DrugStrength = 'http://schema.org/DrugStrength';
/**
 * DryCleaningOrLaundry
 *
 * A dry-cleaning business.
 *
 * http://schema.org/DryCleaningOrLaundry
 */
var DryCleaningOrLaundry = 'http://schema.org/DryCleaningOrLaundry';
/**
 * Duration
 *
 * Quantity: Duration (use [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601)).
 *
 * http://schema.org/Duration
 */
var Duration = 'http://schema.org/Duration';
/**
 * EUEnergyEfficiencyEnumeration
 *
 * Enumerates the EU energy efficiency classes A-G as well as A+, A++, and A+++ as defined in EU directive 2017/1369.
 *
 * http://schema.org/EUEnergyEfficiencyEnumeration
 */
var EUEnergyEfficiencyEnumeration = 'http://schema.org/EUEnergyEfficiencyEnumeration';
/**
 * EatAction
 *
 * The act of swallowing solid objects.
 *
 * http://schema.org/EatAction
 */
var EatAction = 'http://schema.org/EatAction';
/**
 * EducationEvent
 *
 * Event type: Education event.
 *
 * http://schema.org/EducationEvent
 */
var EducationEvent = 'http://schema.org/EducationEvent';
/**
 * EducationalAudience
 *
 * An EducationalAudience.
 *
 * http://schema.org/EducationalAudience
 */
var EducationalAudience = 'http://schema.org/EducationalAudience';
/**
 * EducationalOccupationalCredential
 *
 * An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.
 *
 * http://schema.org/EducationalOccupationalCredential
 */
var EducationalOccupationalCredential = 'http://schema.org/EducationalOccupationalCredential';
/**
 * EducationalOccupationalProgram
 *
 * A program offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. This would define a discrete set of opportunities (e.g., job, courses) that together constitute a program with a clear start, end, set of requirements, and transition to a new occupational opportunity (e.g., a job), or sometimes a higher educational opportunity (e.g., an advanced degree).
 *
 * http://schema.org/EducationalOccupationalProgram
 */
var EducationalOccupationalProgram = 'http://schema.org/EducationalOccupationalProgram';
/**
 * EducationalOrganization
 *
 * An educational organization.
 *
 * http://schema.org/EducationalOrganization
 */
var EducationalOrganization = 'http://schema.org/EducationalOrganization';
/**
 * Electrician
 *
 * An electrician.
 *
 * http://schema.org/Electrician
 */
var Electrician = 'http://schema.org/Electrician';
/**
 * ElectronicsStore
 *
 * An electronics store.
 *
 * http://schema.org/ElectronicsStore
 */
var ElectronicsStore = 'http://schema.org/ElectronicsStore';
/**
 * ElementarySchool
 *
 * An elementary school.
 *
 * http://schema.org/ElementarySchool
 */
var ElementarySchool = 'http://schema.org/ElementarySchool';
/**
 * EmailMessage
 *
 * An email message.
 *
 * http://schema.org/EmailMessage
 */
var EmailMessage = 'http://schema.org/EmailMessage';
/**
 * Embassy
 *
 * An embassy.
 *
 * http://schema.org/Embassy
 */
var Embassy = 'http://schema.org/Embassy';
/**
 * EmergencyService
 *
 * An emergency service, such as a fire station or ER.
 *
 * http://schema.org/EmergencyService
 */
var EmergencyService = 'http://schema.org/EmergencyService';
/**
 * EmployeeRole
 *
 * A subclass of OrganizationRole used to describe employee relationships.
 *
 * http://schema.org/EmployeeRole
 */
var EmployeeRole = 'http://schema.org/EmployeeRole';
/**
 * EmployerAggregateRating
 *
 * An aggregate rating of an Organization related to its role as an employer.
 *
 * http://schema.org/EmployerAggregateRating
 */
var EmployerAggregateRating = 'http://schema.org/EmployerAggregateRating';
/**
 * EmployerReview
 *
 * An [[EmployerReview]] is a review of an [[Organization]] regarding its role as an employer, written by a current or former employee of that organization.
 *
 * http://schema.org/EmployerReview
 */
var EmployerReview = 'http://schema.org/EmployerReview';
/**
 * EmploymentAgency
 *
 * An employment agency.
 *
 * http://schema.org/EmploymentAgency
 */
var EmploymentAgency = 'http://schema.org/EmploymentAgency';
/**
 * EndorseAction
 *
 * An agent approves/certifies/likes/supports/sanctions an object.
 *
 * http://schema.org/EndorseAction
 */
var EndorseAction = 'http://schema.org/EndorseAction';
/**
 * EndorsementRating
 *
 * An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a "critic's pick" blog, a
 * "Like" or "+1" on a social network. It can be considered the [[result]] of an [[EndorseAction]] in which the [[object]] of the action is rated positively by
 * some [[agent]]. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the [[Action]].
 *
 * An [[EndorsementRating]] may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
 * endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.
 *
 *
 * http://schema.org/EndorsementRating
 */
var EndorsementRating = 'http://schema.org/EndorsementRating';
/**
 * Energy
 *
 * Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.
 *
 * http://schema.org/Energy
 */
var Energy = 'http://schema.org/Energy';
/**
 * EnergyConsumptionDetails
 *
 * EnergyConsumptionDetails represents information related to the energy efficiency of a product that consumes energy. The information that can be provided is based on international regulations such as for example [EU directive 2017/1369](https://eur-lex.europa.eu/eli/reg/2017/1369/oj) for energy labeling and the [Energy labeling rule](https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/energy-water-use-labeling-consumer) under the Energy Policy and Conservation Act (EPCA) in the US.
 *
 * http://schema.org/EnergyConsumptionDetails
 */
var EnergyConsumptionDetails = 'http://schema.org/EnergyConsumptionDetails';
/**
 * EnergyEfficiencyEnumeration
 *
 * Enumerates energy efficiency levels (also known as "classes" or "ratings") and certifications that are part of several international energy efficiency standards.
 *
 * http://schema.org/EnergyEfficiencyEnumeration
 */
var EnergyEfficiencyEnumeration = 'http://schema.org/EnergyEfficiencyEnumeration';
/**
 * EnergyStarEnergyEfficiencyEnumeration
 *
 * Used to indicate whether a product is EnergyStar certified.
 *
 * http://schema.org/EnergyStarEnergyEfficiencyEnumeration
 */
var EnergyStarEnergyEfficiencyEnumeration = 'http://schema.org/EnergyStarEnergyEfficiencyEnumeration';
/**
 * EngineSpecification
 *
 * Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.
 *
 * http://schema.org/EngineSpecification
 */
var EngineSpecification = 'http://schema.org/EngineSpecification';
/**
 * EntertainmentBusiness
 *
 * A business providing entertainment.
 *
 * http://schema.org/EntertainmentBusiness
 */
var EntertainmentBusiness = 'http://schema.org/EntertainmentBusiness';
/**
 * EntryPoint
 *
 * An entry point, within some Web-based protocol.
 *
 * http://schema.org/EntryPoint
 */
var EntryPoint = 'http://schema.org/EntryPoint';
/**
 * Enumeration
 *
 * Lists or enumerations—for example, a list of cuisines or music genres, etc.
 *
 * http://schema.org/Enumeration
 */
var Enumeration = 'http://schema.org/Enumeration';
/**
 * Episode
 *
 * A media episode (e.g. TV, radio, video game) which can be part of a series or season.
 *
 * http://schema.org/Episode
 */
var Episode = 'http://schema.org/Episode';
/**
 * Event
 *
 * An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the [[offers]] property. Repeated events may be structured as separate Event objects.
 *
 * http://schema.org/Event
 */
var Event = 'http://schema.org/Event';
/**
 * EventAttendanceModeEnumeration
 *
 * An EventAttendanceModeEnumeration value is one of potentially several modes of organising an event, relating to whether it is online or offline.
 *
 * http://schema.org/EventAttendanceModeEnumeration
 */
var EventAttendanceModeEnumeration = 'http://schema.org/EventAttendanceModeEnumeration';
/**
 * EventReservation
 *
 * A reservation for an event like a concert, sporting event, or lecture.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].
 *
 * http://schema.org/EventReservation
 */
var EventReservation = 'http://schema.org/EventReservation';
/**
 * EventSeries
 *
 * A series of [[Event]]s. Included events can relate with the series using the [[superEvent]] property.
 *
 * An EventSeries is a collection of events that share some unifying characteristic. For example, "The Olympic Games" is a series, which
 * is repeated regularly. The "2012 London Olympics" can be presented both as an [[Event]] in the series "Olympic Games", and as an
 * [[EventSeries]] that included a number of sporting competitions as Events.
 *
 * The nature of the association between the events in an [[EventSeries]] can vary, but typical examples could
 * include a thematic event series (e.g. topical meetups or classes), or a series of regular events that share a location, attendee group and/or organizers.
 *
 * EventSeries has been defined as a kind of Event to make it easy for publishers to use it in an Event context without
 * worrying about which kinds of series are really event-like enough to call an Event. In general an EventSeries
 * may seem more Event-like when the period of time is compact and when aspects such as location are fixed, but
 * it may also sometimes prove useful to describe a longer-term series as an Event.
 *
 *
 * http://schema.org/EventSeries
 */
var EventSeries = 'http://schema.org/EventSeries';
/**
 * EventStatusType
 *
 * EventStatusType is an enumeration type whose instances represent several states that an Event may be in.
 *
 * http://schema.org/EventStatusType
 */
var EventStatusType = 'http://schema.org/EventStatusType';
/**
 * EventVenue
 *
 * An event venue.
 *
 * http://schema.org/EventVenue
 */
var EventVenue = 'http://schema.org/EventVenue';
/**
 * ExchangeRateSpecification
 *
 * A structured value representing exchange rate.
 *
 * http://schema.org/ExchangeRateSpecification
 */
var ExchangeRateSpecification = 'http://schema.org/ExchangeRateSpecification';
/**
 * ExerciseAction
 *
 * The act of participating in exertive activity for the purposes of improving health and fitness.
 *
 * http://schema.org/ExerciseAction
 */
var ExerciseAction = 'http://schema.org/ExerciseAction';
/**
 * ExerciseGym
 *
 * A gym.
 *
 * http://schema.org/ExerciseGym
 */
var ExerciseGym = 'http://schema.org/ExerciseGym';
/**
 * ExercisePlan
 *
 * Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.
 *
 * http://schema.org/ExercisePlan
 */
var ExercisePlan = 'http://schema.org/ExercisePlan';
/**
 * ExhibitionEvent
 *
 * Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...
 *
 * http://schema.org/ExhibitionEvent
 */
var ExhibitionEvent = 'http://schema.org/ExhibitionEvent';
/**
 * FAQPage
 *
 * A [[FAQPage]] is a [[WebPage]] presenting one or more "[Frequently asked questions](https://en.wikipedia.org/wiki/FAQ)" (see also [[QAPage]]).
 *
 * http://schema.org/FAQPage
 */
var FAQPage = 'http://schema.org/FAQPage';
/**
 * FMRadioChannel
 *
 * A radio channel that uses FM.
 *
 * http://schema.org/FMRadioChannel
 */
var FMRadioChannel = 'http://schema.org/FMRadioChannel';
/**
 * FastFoodRestaurant
 *
 * A fast-food restaurant.
 *
 * http://schema.org/FastFoodRestaurant
 */
var FastFoodRestaurant = 'http://schema.org/FastFoodRestaurant';
/**
 * Festival
 *
 * Event type: Festival.
 *
 * http://schema.org/Festival
 */
var Festival = 'http://schema.org/Festival';
/**
 * FilmAction
 *
 * The act of capturing sound and moving images on film, video, or digitally.
 *
 * http://schema.org/FilmAction
 */
var FilmAction = 'http://schema.org/FilmAction';
/**
 * FinancialProduct
 *
 * A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.
 *
 * http://schema.org/FinancialProduct
 */
var FinancialProduct = 'http://schema.org/FinancialProduct';
/**
 * FinancialService
 *
 * Financial services business.
 *
 * http://schema.org/FinancialService
 */
var FinancialService = 'http://schema.org/FinancialService';
/**
 * FindAction
 *
 * The act of finding an object.\n\nRelated actions:\n\n* [[SearchAction]]: FindAction is generally lead by a SearchAction, but not necessarily.
 *
 * http://schema.org/FindAction
 */
var FindAction = 'http://schema.org/FindAction';
/**
 * FireStation
 *
 * A fire station. With firemen.
 *
 * http://schema.org/FireStation
 */
var FireStation = 'http://schema.org/FireStation';
/**
 * Flight
 *
 * An airline flight.
 *
 * http://schema.org/Flight
 */
var Flight = 'http://schema.org/Flight';
/**
 * FlightReservation
 *
 * A reservation for air travel.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].
 *
 * http://schema.org/FlightReservation
 */
var FlightReservation = 'http://schema.org/FlightReservation';
/**
 * Float
 *
 * Data type: Floating number.
 *
 * http://schema.org/Float
 */
var Float = 'http://schema.org/Float';
/**
 * FloorPlan
 *
 * A FloorPlan is an explicit representation of a collection of similar accommodations, allowing the provision of common information (room counts, sizes, layout diagrams) and offers for rental or sale. In typical use, some [[ApartmentComplex]] has an [[accommodationFloorPlan]] which is a [[FloorPlan]].  A FloorPlan is always in the context of a particular place, either a larger [[ApartmentComplex]] or a single [[Apartment]]. The visual/spatial aspects of a floor plan (i.e. room layout, [see wikipedia](https://en.wikipedia.org/wiki/Floor_plan)) can be indicated using [[image]].
 *
 * http://schema.org/FloorPlan
 */
var FloorPlan = 'http://schema.org/FloorPlan';
/**
 * Florist
 *
 * A florist.
 *
 * http://schema.org/Florist
 */
var Florist = 'http://schema.org/Florist';
/**
 * FollowAction
 *
 * The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.\n\nRelated actions:\n\n* [[BefriendAction]]: Unlike BefriendAction, FollowAction implies that the connection is *not* necessarily reciprocal.\n* [[SubscribeAction]]: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.\n* [[RegisterAction]]: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.\n* [[JoinAction]]: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.\n* [[TrackAction]]: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).
 *
 * http://schema.org/FollowAction
 */
var FollowAction = 'http://schema.org/FollowAction';
/**
 * FoodEstablishment
 *
 * A food-related business.
 *
 * http://schema.org/FoodEstablishment
 */
var FoodEstablishment = 'http://schema.org/FoodEstablishment';
/**
 * FoodEstablishmentReservation
 *
 * A reservation to dine at a food-related business.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
 *
 * http://schema.org/FoodEstablishmentReservation
 */
var FoodEstablishmentReservation = 'http://schema.org/FoodEstablishmentReservation';
/**
 * FoodEvent
 *
 * Event type: Food event.
 *
 * http://schema.org/FoodEvent
 */
var FoodEvent = 'http://schema.org/FoodEvent';
/**
 * FoodService
 *
 * A food service, like breakfast, lunch, or dinner.
 *
 * http://schema.org/FoodService
 */
var FoodService = 'http://schema.org/FoodService';
/**
 * FundingAgency
 *
 * A FundingAgency is an organization that implements one or more [[FundingScheme]]s and manages
 *     the granting process (via [[Grant]]s, typically [[MonetaryGrant]]s).
 *     A funding agency is not always required for grant funding, e.g. philanthropic giving, corporate sponsorship etc.
 *
 * Examples of funding agencies include ERC, REA, NIH, Bill and Melinda Gates Foundation, ...
 *
 *
 * http://schema.org/FundingAgency
 */
var FundingAgency = 'http://schema.org/FundingAgency';
/**
 * FundingScheme
 *
 * A FundingScheme combines organizational, project and policy aspects of grant-based funding
 *     that sets guidelines, principles and mechanisms to support other kinds of projects and activities.
 *     Funding is typically organized via [[Grant]] funding. Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic support fund. For large scale public sector funding, the management and administration of grant awards is often handled by other, dedicated, organizations - [[FundingAgency]]s such as ERC, REA, ...
 *
 * http://schema.org/FundingScheme
 */
var FundingScheme = 'http://schema.org/FundingScheme';
/**
 * FurnitureStore
 *
 * A furniture store.
 *
 * http://schema.org/FurnitureStore
 */
var FurnitureStore = 'http://schema.org/FurnitureStore';
/**
 * Game
 *
 * The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.
 *
 * http://schema.org/Game
 */
var Game = 'http://schema.org/Game';
/**
 * GameAvailabilityEnumeration
 *
 * For a [[VideoGame]], such as used with a [[PlayGameAction]], an enumeration of the kind of game availability offered.
 *
 * http://schema.org/GameAvailabilityEnumeration
 */
var GameAvailabilityEnumeration = 'http://schema.org/GameAvailabilityEnumeration';
/**
 * GamePlayMode
 *
 * Indicates whether this game is multi-player, co-op or single-player.
 *
 * http://schema.org/GamePlayMode
 */
var GamePlayMode = 'http://schema.org/GamePlayMode';
/**
 * GameServer
 *
 * Server that provides game interaction in a multiplayer game.
 *
 * http://schema.org/GameServer
 */
var GameServer = 'http://schema.org/GameServer';
/**
 * GameServerStatus
 *
 * Status of a game server.
 *
 * http://schema.org/GameServerStatus
 */
var GameServerStatus = 'http://schema.org/GameServerStatus';
/**
 * GardenStore
 *
 * A garden store.
 *
 * http://schema.org/GardenStore
 */
var GardenStore = 'http://schema.org/GardenStore';
/**
 * GasStation
 *
 * A gas station.
 *
 * http://schema.org/GasStation
 */
var GasStation = 'http://schema.org/GasStation';
/**
 * GatedResidenceCommunity
 *
 * Residence type: Gated community.
 *
 * http://schema.org/GatedResidenceCommunity
 */
var GatedResidenceCommunity = 'http://schema.org/GatedResidenceCommunity';
/**
 * GenderType
 *
 * An enumeration of genders.
 *
 * http://schema.org/GenderType
 */
var GenderType = 'http://schema.org/GenderType';
/**
 * Gene
 *
 * A discrete unit of inheritance which affects one or more biological traits (Source: [https://en.wikipedia.org/wiki/Gene](https://en.wikipedia.org/wiki/Gene)). Examples include FOXP2 (Forkhead box protein P2), SCARNA21 (small Cajal body-specific RNA 21), A- (agouti genotype).
 *
 * http://schema.org/Gene
 */
var Gene = 'http://schema.org/Gene';
/**
 * GeneralContractor
 *
 * A general contractor.
 *
 * http://schema.org/GeneralContractor
 */
var GeneralContractor = 'http://schema.org/GeneralContractor';
/**
 * GeoCircle
 *
 * A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
 *           it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
 *           The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
 *
 *
 * http://schema.org/GeoCircle
 */
var GeoCircle = 'http://schema.org/GeoCircle';
/**
 * GeoCoordinates
 *
 * The geographic coordinates of a place or event.
 *
 * http://schema.org/GeoCoordinates
 */
var GeoCoordinates = 'http://schema.org/GeoCoordinates';
/**
 * GeoShape
 *
 * The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.
 *
 * http://schema.org/GeoShape
 */
var GeoShape = 'http://schema.org/GeoShape';
/**
 * GeospatialGeometry
 *
 * (Eventually to be defined as) a supertype of GeoShape designed to accommodate definitions from Geo-Spatial best practices.
 *
 * http://schema.org/GeospatialGeometry
 */
var GeospatialGeometry = 'http://schema.org/GeospatialGeometry';
/**
 * GiveAction
 *
 * The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.\n\nRelated actions:\n\n* [[TakeAction]]: Reciprocal of GiveAction.\n* [[SendAction]]: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).
 *
 * http://schema.org/GiveAction
 */
var GiveAction = 'http://schema.org/GiveAction';
/**
 * GolfCourse
 *
 * A golf course.
 *
 * http://schema.org/GolfCourse
 */
var GolfCourse = 'http://schema.org/GolfCourse';
/**
 * GovernmentBenefitsType
 *
 * GovernmentBenefitsType enumerates several kinds of government benefits to support the COVID-19 situation. Note that this structure may not capture all benefits offered.
 *
 * http://schema.org/GovernmentBenefitsType
 */
var GovernmentBenefitsType = 'http://schema.org/GovernmentBenefitsType';
/**
 * GovernmentBuilding
 *
 * A government building.
 *
 * http://schema.org/GovernmentBuilding
 */
var GovernmentBuilding = 'http://schema.org/GovernmentBuilding';
/**
 * GovernmentOffice
 *
 * A government office&#x2014;for example, an IRS or DMV office.
 *
 * http://schema.org/GovernmentOffice
 */
var GovernmentOffice = 'http://schema.org/GovernmentOffice';
/**
 * GovernmentOrganization
 *
 * A governmental organization or agency.
 *
 * http://schema.org/GovernmentOrganization
 */
var GovernmentOrganization = 'http://schema.org/GovernmentOrganization';
/**
 * GovernmentPermit
 *
 * A permit issued by a government agency.
 *
 * http://schema.org/GovernmentPermit
 */
var GovernmentPermit = 'http://schema.org/GovernmentPermit';
/**
 * GovernmentService
 *
 * A service provided by a government organization, e.g. food stamps, veterans benefits, etc.
 *
 * http://schema.org/GovernmentService
 */
var GovernmentService = 'http://schema.org/GovernmentService';
/**
 * Grant
 *
 * A grant, typically financial or otherwise quantifiable, of resources. Typically a [[funder]] sponsors some [[MonetaryAmount]] to an [[Organization]] or [[Person]],
 *     sometimes not necessarily via a dedicated or long-lived [[Project]], resulting in one or more outputs, or [[fundedItem]]s. For financial sponsorship, indicate the [[funder]] of a [[MonetaryGrant]]. For non-financial support, indicate [[sponsor]] of [[Grant]]s of resources (e.g. office space).
 *
 * Grants support  activities directed towards some agreed collective goals, often but not always organized as [[Project]]s. Long-lived projects are sometimes sponsored by a variety of grants over time, but it is also common for a project to be associated with a single grant.
 *
 * The amount of a [[Grant]] is represented using [[amount]] as a [[MonetaryAmount]].
 *
 *
 * http://schema.org/Grant
 */
var Grant = 'http://schema.org/Grant';
/**
 * GroceryStore
 *
 * A grocery store.
 *
 * http://schema.org/GroceryStore
 */
var GroceryStore = 'http://schema.org/GroceryStore';
/**
 * Guide
 *
 * [[Guide]] is a page or article that recommends specific products or services, or aspects of a thing for a user to consider. A [[Guide]] may represent a Buying Guide and detail aspects of products or services for a user to consider. A [[Guide]] may represent a Product Guide and recommend specific products or services. A [[Guide]] may represent a Ranked List and recommend specific products or services with ranking.
 *
 * http://schema.org/Guide
 */
var Guide = 'http://schema.org/Guide';
/**
 * HVACBusiness
 *
 * A business that provides Heating, Ventilation and Air Conditioning services.
 *
 * http://schema.org/HVACBusiness
 */
var HVACBusiness = 'http://schema.org/HVACBusiness';
/**
 * Hackathon
 *
 * A [hackathon](https://en.wikipedia.org/wiki/Hackathon) event.
 *
 * http://schema.org/Hackathon
 */
var Hackathon = 'http://schema.org/Hackathon';
/**
 * HairSalon
 *
 * A hair salon.
 *
 * http://schema.org/HairSalon
 */
var HairSalon = 'http://schema.org/HairSalon';
/**
 * HardwareStore
 *
 * A hardware store.
 *
 * http://schema.org/HardwareStore
 */
var HardwareStore = 'http://schema.org/HardwareStore';
/**
 * HealthAndBeautyBusiness
 *
 * Health and beauty.
 *
 * http://schema.org/HealthAndBeautyBusiness
 */
var HealthAndBeautyBusiness = 'http://schema.org/HealthAndBeautyBusiness';
/**
 * HealthAspectEnumeration
 *
 * HealthAspectEnumeration enumerates several aspects of health content online, each of which might be described using [[hasHealthAspect]] and [[HealthTopicContent]].
 *
 * http://schema.org/HealthAspectEnumeration
 */
var HealthAspectEnumeration = 'http://schema.org/HealthAspectEnumeration';
/**
 * HealthClub
 *
 * A health club.
 *
 * http://schema.org/HealthClub
 */
var HealthClub = 'http://schema.org/HealthClub';
/**
 * HealthInsurancePlan
 *
 * A US-style health insurance plan, including PPOs, EPOs, and HMOs.
 *
 * http://schema.org/HealthInsurancePlan
 */
var HealthInsurancePlan = 'http://schema.org/HealthInsurancePlan';
/**
 * HealthPlanCostSharingSpecification
 *
 * A description of costs to the patient under a given network or formulary.
 *
 * http://schema.org/HealthPlanCostSharingSpecification
 */
var HealthPlanCostSharingSpecification = 'http://schema.org/HealthPlanCostSharingSpecification';
/**
 * HealthPlanFormulary
 *
 * For a given health insurance plan, the specification for costs and coverage of prescription drugs.
 *
 * http://schema.org/HealthPlanFormulary
 */
var HealthPlanFormulary = 'http://schema.org/HealthPlanFormulary';
/**
 * HealthPlanNetwork
 *
 * A US-style health insurance plan network.
 *
 * http://schema.org/HealthPlanNetwork
 */
var HealthPlanNetwork = 'http://schema.org/HealthPlanNetwork';
/**
 * HealthTopicContent
 *
 * [[HealthTopicContent]] is [[WebContent]] that is about some aspect of a health topic, e.g. a condition, its symptoms or treatments. Such content may be comprised of several parts or sections and use different types of media. Multiple instances of [[WebContent]] (and hence [[HealthTopicContent]]) can be related using [[hasPart]] / [[isPartOf]] where there is some kind of content hierarchy, and their content described with [[about]] and [[mentions]] e.g. building upon the existing [[MedicalCondition]] vocabulary.
 *
 *
 * http://schema.org/HealthTopicContent
 */
var HealthTopicContent = 'http://schema.org/HealthTopicContent';
/**
 * HighSchool
 *
 * A high school.
 *
 * http://schema.org/HighSchool
 */
var HighSchool = 'http://schema.org/HighSchool';
/**
 * HinduTemple
 *
 * A Hindu temple.
 *
 * http://schema.org/HinduTemple
 */
var HinduTemple = 'http://schema.org/HinduTemple';
/**
 * HobbyShop
 *
 * A store that sells materials useful or necessary for various hobbies.
 *
 * http://schema.org/HobbyShop
 */
var HobbyShop = 'http://schema.org/HobbyShop';
/**
 * HomeAndConstructionBusiness
 *
 * A construction business.\n\nA HomeAndConstructionBusiness is a [[LocalBusiness]] that provides services around homes and buildings.\n\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\(s).
 *
 * http://schema.org/HomeAndConstructionBusiness
 */
var HomeAndConstructionBusiness = 'http://schema.org/HomeAndConstructionBusiness';
/**
 * HomeGoodsStore
 *
 * A home goods store.
 *
 * http://schema.org/HomeGoodsStore
 */
var HomeGoodsStore = 'http://schema.org/HomeGoodsStore';
/**
 * Hospital
 *
 * A hospital.
 *
 * http://schema.org/Hospital
 */
var Hospital = 'http://schema.org/Hospital';
/**
 * Hostel
 *
 * A hostel - cheap accommodation, often in shared dormitories.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/Hostel
 */
var Hostel = 'http://schema.org/Hostel';
/**
 * Hotel
 *
 * A hotel is an establishment that provides lodging paid on a short-term basis (source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/Hotel
 */
var Hotel = 'http://schema.org/Hotel';
/**
 * HotelRoom
 *
 * A hotel room is a single room in a hotel.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/HotelRoom
 */
var HotelRoom = 'http://schema.org/HotelRoom';
/**
 * House
 *
 * A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>).
 *
 * http://schema.org/House
 */
var House = 'http://schema.org/House';
/**
 * HousePainter
 *
 * A house painting service.
 *
 * http://schema.org/HousePainter
 */
var HousePainter = 'http://schema.org/HousePainter';
/**
 * HowTo
 *
 * Instructions that explain how to achieve a result by performing a sequence of steps.
 *
 * http://schema.org/HowTo
 */
var HowTo = 'http://schema.org/HowTo';
/**
 * HowToDirection
 *
 * A direction indicating a single action to do in the instructions for how to achieve a result.
 *
 * http://schema.org/HowToDirection
 */
var HowToDirection = 'http://schema.org/HowToDirection';
/**
 * HowToItem
 *
 * An item used as either a tool or supply when performing the instructions for how to achieve a result.
 *
 * http://schema.org/HowToItem
 */
var HowToItem = 'http://schema.org/HowToItem';
/**
 * HowToSection
 *
 * A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).
 *
 * http://schema.org/HowToSection
 */
var HowToSection = 'http://schema.org/HowToSection';
/**
 * HowToStep
 *
 * A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.
 *
 * http://schema.org/HowToStep
 */
var HowToStep = 'http://schema.org/HowToStep';
/**
 * HowToSupply
 *
 * A supply consumed when performing the instructions for how to achieve a result.
 *
 * http://schema.org/HowToSupply
 */
var HowToSupply = 'http://schema.org/HowToSupply';
/**
 * HowToTip
 *
 * An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).
 *
 * http://schema.org/HowToTip
 */
var HowToTip = 'http://schema.org/HowToTip';
/**
 * HowToTool
 *
 * A tool used (but not consumed) when performing instructions for how to achieve a result.
 *
 * http://schema.org/HowToTool
 */
var HowToTool = 'http://schema.org/HowToTool';
/**
 * HyperToc
 *
 * A HyperToc represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. Items in the table of contents are indicated using the [[tocEntry]] property, and typed [[HyperTocEntry]]. For cases where the same larger work is split into multiple files, [[associatedMedia]] can be used on individual [[HyperTocEntry]] items.
 *
 * http://schema.org/HyperToc
 */
var HyperToc = 'http://schema.org/HyperToc';
/**
 * HyperTocEntry
 *
 * A HyperToEntry is an item within a [[HyperToc]], which represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. The media object itself is indicated using [[associatedMedia]]. Each section of interest within that content can be described with a [[HyperTocEntry]], with associated [[startOffset]] and [[endOffset]]. When several entries are all from the same file, [[associatedMedia]] is used on the overarching [[HyperTocEntry]]; if the content has been split into multiple files, they can be referenced using [[associatedMedia]] on each [[HyperTocEntry]].
 *
 * http://schema.org/HyperTocEntry
 */
var HyperTocEntry = 'http://schema.org/HyperTocEntry';
/**
 * IceCreamShop
 *
 * An ice cream shop.
 *
 * http://schema.org/IceCreamShop
 */
var IceCreamShop = 'http://schema.org/IceCreamShop';
/**
 * IgnoreAction
 *
 * The act of intentionally disregarding the object. An agent ignores an object.
 *
 * http://schema.org/IgnoreAction
 */
var IgnoreAction = 'http://schema.org/IgnoreAction';
/**
 * ImageGallery
 *
 * Web page type: Image gallery page.
 *
 * http://schema.org/ImageGallery
 */
var ImageGallery = 'http://schema.org/ImageGallery';
/**
 * ImageObject
 *
 * An image file.
 *
 * http://schema.org/ImageObject
 */
var ImageObject = 'http://schema.org/ImageObject';
/**
 * ImageObjectSnapshot
 *
 * A specific and exact (byte-for-byte) version of an [[ImageObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata (e.g. XMP, EXIF) the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.
 *
 * http://schema.org/ImageObjectSnapshot
 */
var ImageObjectSnapshot = 'http://schema.org/ImageObjectSnapshot';
/**
 * ImagingTest
 *
 * Any medical imaging modality typically used for diagnostic purposes.
 *
 * http://schema.org/ImagingTest
 */
var ImagingTest = 'http://schema.org/ImagingTest';
/**
 * IndividualProduct
 *
 * A single, identifiable product instance (e.g. a laptop with a particular serial number).
 *
 * http://schema.org/IndividualProduct
 */
var IndividualProduct = 'http://schema.org/IndividualProduct';
/**
 * InfectiousAgentClass
 *
 * Classes of agents or pathogens that transmit infectious diseases. Enumerated type.
 *
 * http://schema.org/InfectiousAgentClass
 */
var InfectiousAgentClass = 'http://schema.org/InfectiousAgentClass';
/**
 * InfectiousDisease
 *
 * An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.
 *
 * http://schema.org/InfectiousDisease
 */
var InfectiousDisease = 'http://schema.org/InfectiousDisease';
/**
 * InformAction
 *
 * The act of notifying someone of information pertinent to them, with no expectation of a response.
 *
 * http://schema.org/InformAction
 */
var InformAction = 'http://schema.org/InformAction';
/**
 * InsertAction
 *
 * The act of adding at a specific location in an ordered collection.
 *
 * http://schema.org/InsertAction
 */
var InsertAction = 'http://schema.org/InsertAction';
/**
 * InstallAction
 *
 * The act of installing an application.
 *
 * http://schema.org/InstallAction
 */
var InstallAction = 'http://schema.org/InstallAction';
/**
 * InsuranceAgency
 *
 * An Insurance agency.
 *
 * http://schema.org/InsuranceAgency
 */
var InsuranceAgency = 'http://schema.org/InsuranceAgency';
/**
 * Intangible
 *
 * A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
 *
 * http://schema.org/Intangible
 */
var Intangible = 'http://schema.org/Intangible';
/**
 * Integer
 *
 * Data type: Integer.
 *
 * http://schema.org/Integer
 */
var Integer = 'http://schema.org/Integer';
/**
 * InteractAction
 *
 * The act of interacting with another person or organization.
 *
 * http://schema.org/InteractAction
 */
var InteractAction = 'http://schema.org/InteractAction';
/**
 * InteractionCounter
 *
 * A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.
 *
 * http://schema.org/InteractionCounter
 */
var InteractionCounter = 'http://schema.org/InteractionCounter';
/**
 * InternetCafe
 *
 * An internet cafe.
 *
 * http://schema.org/InternetCafe
 */
var InternetCafe = 'http://schema.org/InternetCafe';
/**
 * InvestmentFund
 *
 * A company or fund that gathers capital from a number of investors to create a pool of money that is then re-invested into stocks, bonds and other assets.
 *
 * http://schema.org/InvestmentFund
 */
var InvestmentFund = 'http://schema.org/InvestmentFund';
/**
 * InvestmentOrDeposit
 *
 * A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.
 *
 * http://schema.org/InvestmentOrDeposit
 */
var InvestmentOrDeposit = 'http://schema.org/InvestmentOrDeposit';
/**
 * InviteAction
 *
 * The act of asking someone to attend an event. Reciprocal of RsvpAction.
 *
 * http://schema.org/InviteAction
 */
var InviteAction = 'http://schema.org/InviteAction';
/**
 * Invoice
 *
 * A statement of the money due for goods or services; a bill.
 *
 * http://schema.org/Invoice
 */
var Invoice = 'http://schema.org/Invoice';
/**
 * ItemAvailability
 *
 * A list of possible product availability options.
 *
 * http://schema.org/ItemAvailability
 */
var ItemAvailability = 'http://schema.org/ItemAvailability';
/**
 * ItemList
 *
 * A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.
 *
 * http://schema.org/ItemList
 */
var ItemList = 'http://schema.org/ItemList';
/**
 * ItemListOrderType
 *
 * Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.
 *
 * http://schema.org/ItemListOrderType
 */
var ItemListOrderType = 'http://schema.org/ItemListOrderType';
/**
 * ItemPage
 *
 * A page devoted to a single item, such as a particular product or hotel.
 *
 * http://schema.org/ItemPage
 */
var ItemPage = 'http://schema.org/ItemPage';
/**
 * JewelryStore
 *
 * A jewelry store.
 *
 * http://schema.org/JewelryStore
 */
var JewelryStore = 'http://schema.org/JewelryStore';
/**
 * JobPosting
 *
 * A listing that describes a job opening in a certain organization.
 *
 * http://schema.org/JobPosting
 */
var JobPosting = 'http://schema.org/JobPosting';
/**
 * JoinAction
 *
 * An agent joins an event/group with participants/friends at a location.\n\nRelated actions:\n\n* [[RegisterAction]]: Unlike RegisterAction, JoinAction refers to joining a group/team of people.\n* [[SubscribeAction]]: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.\n* [[FollowAction]]: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.
 *
 * http://schema.org/JoinAction
 */
var JoinAction = 'http://schema.org/JoinAction';
/**
 * Joint
 *
 * The anatomical location at which two or more bones make contact.
 *
 * http://schema.org/Joint
 */
var Joint = 'http://schema.org/Joint';
/**
 * LakeBodyOfWater
 *
 * A lake (for example, Lake Pontrachain).
 *
 * http://schema.org/LakeBodyOfWater
 */
var LakeBodyOfWater = 'http://schema.org/LakeBodyOfWater';
/**
 * Landform
 *
 * A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.
 *
 * http://schema.org/Landform
 */
var Landform = 'http://schema.org/Landform';
/**
 * LandmarksOrHistoricalBuildings
 *
 * An historical landmark or building.
 *
 * http://schema.org/LandmarksOrHistoricalBuildings
 */
var LandmarksOrHistoricalBuildings = 'http://schema.org/LandmarksOrHistoricalBuildings';
/**
 * Language
 *
 * Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) can be used via the [[alternateName]] property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using [[ComputerLanguage]].
 *
 * http://schema.org/Language
 */
var Language = 'http://schema.org/Language';
/**
 * LearningResource
 *
 * The LearningResource type can be used to indicate [[CreativeWork]]s (whether physical or digital) that have a particular and explicit orientation towards learning, education, skill acquisition, and other educational purposes.
 *
 * [[LearningResource]] is expected to be used as an addition to a primary type such as [[Book]], [[VideoObject]], [[Product]] etc.
 *
 * [[EducationEvent]] serves a similar purpose for event-like things (e.g. a [[Trip]]). A [[LearningResource]] may be created as a result of an [[EducationEvent]], for example by recording one.
 *
 * http://schema.org/LearningResource
 */
var LearningResource = 'http://schema.org/LearningResource';
/**
 * LeaveAction
 *
 * An agent leaves an event / group with participants/friends at a location.\n\nRelated actions:\n\n* [[JoinAction]]: The antonym of LeaveAction.\n* [[UnRegisterAction]]: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.
 *
 * http://schema.org/LeaveAction
 */
var LeaveAction = 'http://schema.org/LeaveAction';
/**
 * LegalForceStatus
 *
 * A list of possible statuses for the legal force of a legislation.
 *
 * http://schema.org/LegalForceStatus
 */
var LegalForceStatus = 'http://schema.org/LegalForceStatus';
/**
 * LegalService
 *
 * A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.\n\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\(s).
 *
 * http://schema.org/LegalService
 */
var LegalService = 'http://schema.org/LegalService';
/**
 * LegalValueLevel
 *
 * A list of possible levels for the legal validity of a legislation.
 *
 * http://schema.org/LegalValueLevel
 */
var LegalValueLevel = 'http://schema.org/LegalValueLevel';
/**
 * Legislation
 *
 * A legal document such as an act, decree, bill, etc. (enforceable or not) or a component of a legal act (like an article).
 *
 * http://schema.org/Legislation
 */
var Legislation = 'http://schema.org/Legislation';
/**
 * LegislationObject
 *
 * A specific object or file containing a Legislation. Note that the same Legislation can be published in multiple files. For example, a digitally signed PDF, a plain PDF and an HTML version.
 *
 * http://schema.org/LegislationObject
 */
var LegislationObject = 'http://schema.org/LegislationObject';
/**
 * LegislativeBuilding
 *
 * A legislative building&#x2014;for example, the state capitol.
 *
 * http://schema.org/LegislativeBuilding
 */
var LegislativeBuilding = 'http://schema.org/LegislativeBuilding';
/**
 * LendAction
 *
 * The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.\n\nRelated actions:\n\n* [[BorrowAction]]: Reciprocal of LendAction.
 *
 * http://schema.org/LendAction
 */
var LendAction = 'http://schema.org/LendAction';
/**
 * Library
 *
 * A library.
 *
 * http://schema.org/Library
 */
var Library = 'http://schema.org/Library';
/**
 * LibrarySystem
 *
 * A [[LibrarySystem]] is a collaborative system amongst several libraries.
 *
 * http://schema.org/LibrarySystem
 */
var LibrarySystem = 'http://schema.org/LibrarySystem';
/**
 * LifestyleModification
 *
 * A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.
 *
 * http://schema.org/LifestyleModification
 */
var LifestyleModification = 'http://schema.org/LifestyleModification';
/**
 * Ligament
 *
 * A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.
 *
 * http://schema.org/Ligament
 */
var Ligament = 'http://schema.org/Ligament';
/**
 * LikeAction
 *
 * The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.
 *
 * http://schema.org/LikeAction
 */
var LikeAction = 'http://schema.org/LikeAction';
/**
 * LinkRole
 *
 * A Role that represents a Web link, e.g. as expressed via the 'url' property. Its linkRelationship property can indicate URL-based and plain textual link types, e.g. those in IANA link registry or others such as 'amphtml'. This structure provides a placeholder where details from HTML's link element can be represented outside of HTML, e.g. in JSON-LD feeds.
 *
 * http://schema.org/LinkRole
 */
var LinkRole = 'http://schema.org/LinkRole';
/**
 * LiquorStore
 *
 * A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.
 *
 * http://schema.org/LiquorStore
 */
var LiquorStore = 'http://schema.org/LiquorStore';
/**
 * ListItem
 *
 * An list item, e.g. a step in a checklist or how-to description.
 *
 * http://schema.org/ListItem
 */
var ListItem = 'http://schema.org/ListItem';
/**
 * ListenAction
 *
 * The act of consuming audio content.
 *
 * http://schema.org/ListenAction
 */
var ListenAction = 'http://schema.org/ListenAction';
/**
 * LiteraryEvent
 *
 * Event type: Literary event.
 *
 * http://schema.org/LiteraryEvent
 */
var LiteraryEvent = 'http://schema.org/LiteraryEvent';
/**
 * LiveBlogPosting
 *
 * A [[LiveBlogPosting]] is a [[BlogPosting]] intended to provide a rolling textual coverage of an ongoing event through continuous updates.
 *
 * http://schema.org/LiveBlogPosting
 */
var LiveBlogPosting = 'http://schema.org/LiveBlogPosting';
/**
 * LoanOrCredit
 *
 * A financial product for the loaning of an amount of money, or line of credit, under agreed terms and charges.
 *
 * http://schema.org/LoanOrCredit
 */
var LoanOrCredit = 'http://schema.org/LoanOrCredit';
/**
 * LocalBusiness
 *
 * A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.
 *
 * http://schema.org/LocalBusiness
 */
var LocalBusiness = 'http://schema.org/LocalBusiness';
/**
 * LocationFeatureSpecification
 *
 * Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.
 *
 * http://schema.org/LocationFeatureSpecification
 */
var LocationFeatureSpecification = 'http://schema.org/LocationFeatureSpecification';
/**
 * Locksmith
 *
 * A locksmith.
 *
 * http://schema.org/Locksmith
 */
var Locksmith = 'http://schema.org/Locksmith';
/**
 * LodgingBusiness
 *
 * A lodging business, such as a motel, hotel, or inn.
 *
 * http://schema.org/LodgingBusiness
 */
var LodgingBusiness = 'http://schema.org/LodgingBusiness';
/**
 * LodgingReservation
 *
 * A reservation for lodging at a hotel, motel, inn, etc.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
 *
 * http://schema.org/LodgingReservation
 */
var LodgingReservation = 'http://schema.org/LodgingReservation';
/**
 * LoseAction
 *
 * The act of being defeated in a competitive activity.
 *
 * http://schema.org/LoseAction
 */
var LoseAction = 'http://schema.org/LoseAction';
/**
 * LymphaticVessel
 *
 * A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.
 *
 * http://schema.org/LymphaticVessel
 */
var LymphaticVessel = 'http://schema.org/LymphaticVessel';
/**
 * Manuscript
 *
 * A book, document, or piece of music written by hand rather than typed or printed.
 *
 * http://schema.org/Manuscript
 */
var Manuscript = 'http://schema.org/Manuscript';
/**
 * Map
 *
 * A map.
 * Note that `Map` is a reserved Javascript keyword, and is therefore suffixed by `__workaround`.
 * For a list of reserved keywords, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords.
 *
 * http://schema.org/Map
 */
var Map__workaround = 'http://schema.org/Map';
/**
 * MapCategoryType
 *
 * An enumeration of several kinds of Map.
 *
 * http://schema.org/MapCategoryType
 */
var MapCategoryType = 'http://schema.org/MapCategoryType';
/**
 * MarryAction
 *
 * The act of marrying a person.
 *
 * http://schema.org/MarryAction
 */
var MarryAction = 'http://schema.org/MarryAction';
/**
 * Mass
 *
 * Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.
 *
 * http://schema.org/Mass
 */
var Mass = 'http://schema.org/Mass';
/**
 * MathSolver
 *
 * A math solver which is capable of solving a subset of mathematical problems.
 *
 * http://schema.org/MathSolver
 */
var MathSolver = 'http://schema.org/MathSolver';
/**
 * MaximumDoseSchedule
 *
 * The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
 *
 * http://schema.org/MaximumDoseSchedule
 */
var MaximumDoseSchedule = 'http://schema.org/MaximumDoseSchedule';
/**
 * MeasurementMethodEnum
 *
 * Enumeration(s) for use with [[measurementMethod]].
 *
 * http://schema.org/MeasurementMethodEnum
 */
var MeasurementMethodEnum = 'http://schema.org/MeasurementMethodEnum';
/**
 * MeasurementTypeEnumeration
 *
 * Enumeration of common measurement types (or dimensions), for example "chest" for a person, "inseam" for pants, "gauge" for screws, or "wheel" for bicycles.
 *
 * http://schema.org/MeasurementTypeEnumeration
 */
var MeasurementTypeEnumeration = 'http://schema.org/MeasurementTypeEnumeration';
/**
 * MediaGallery
 *
 * Web page type: Media gallery page. A mixed-media page that can contain media such as images, videos, and other multimedia.
 *
 * http://schema.org/MediaGallery
 */
var MediaGallery = 'http://schema.org/MediaGallery';
/**
 * MediaManipulationRatingEnumeration
 *
 *  Codes for use with the [[mediaAuthenticityCategory]] property, indicating the authenticity of a media object (in the context of how it was published or shared). In general these codes are not mutually exclusive, although some combinations (such as 'original' versus 'transformed', 'edited' and 'staged') would be contradictory if applied in the same [[MediaReview]]. Note that the application of these codes is with regard to a piece of media shared or published in a particular context.
 *
 * http://schema.org/MediaManipulationRatingEnumeration
 */
var MediaManipulationRatingEnumeration = 'http://schema.org/MediaManipulationRatingEnumeration';
/**
 * MediaObject
 *
 * A media object, such as an image, video, audio, or text object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
 *
 * http://schema.org/MediaObject
 */
var MediaObject = 'http://schema.org/MediaObject';
/**
 * MediaReview
 *
 * A [[MediaReview]] is a more specialized form of Review dedicated to the evaluation of media content online, typically in the context of fact-checking and misinformation.
 *     For more general reviews of media in the broader sense, use [[UserReview]], [[CriticReview]] or other [[Review]] types. This definition is
 *     a work in progress. While the [[MediaManipulationRatingEnumeration]] list reflects significant community review amongst fact-checkers and others working
 *     to combat misinformation, the specific structures for representing media objects, their versions and publication context, are still evolving. Similarly, best practices for the relationship between [[MediaReview]] and [[ClaimReview]] markup have not yet been finalized.
 *
 * http://schema.org/MediaReview
 */
var MediaReview = 'http://schema.org/MediaReview';
/**
 * MediaReviewItem
 *
 * Represents an item or group of closely related items treated as a unit for the sake of evaluation in a [[MediaReview]]. Authorship etc. apply to the items rather than to the curation/grouping or reviewing party.
 *
 * http://schema.org/MediaReviewItem
 */
var MediaReviewItem = 'http://schema.org/MediaReviewItem';
/**
 * MediaSubscription
 *
 * A subscription which allows a user to access media including audio, video, books, etc.
 *
 * http://schema.org/MediaSubscription
 */
var MediaSubscription = 'http://schema.org/MediaSubscription';
/**
 * MedicalAudience
 *
 * Target audiences for medical web pages.
 *
 * http://schema.org/MedicalAudience
 */
var MedicalAudience = 'http://schema.org/MedicalAudience';
/**
 * MedicalAudienceType
 *
 * Target audiences types for medical web pages. Enumerated type.
 *
 * http://schema.org/MedicalAudienceType
 */
var MedicalAudienceType = 'http://schema.org/MedicalAudienceType';
/**
 * MedicalBusiness
 *
 * A particular physical or virtual business of an organization for medical purposes. Examples of MedicalBusiness include different businesses run by health professionals.
 *
 * http://schema.org/MedicalBusiness
 */
var MedicalBusiness = 'http://schema.org/MedicalBusiness';
/**
 * MedicalCause
 *
 * The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.
 *
 * http://schema.org/MedicalCause
 */
var MedicalCause = 'http://schema.org/MedicalCause';
/**
 * MedicalClinic
 *
 * A facility, often associated with a hospital or medical school, that is devoted to the specific diagnosis and/or healthcare. Previously limited to outpatients but with evolution it may be open to inpatients as well.
 *
 * http://schema.org/MedicalClinic
 */
var MedicalClinic = 'http://schema.org/MedicalClinic';
/**
 * MedicalCode
 *
 * A code for a medical entity.
 *
 * http://schema.org/MedicalCode
 */
var MedicalCode = 'http://schema.org/MedicalCode';
/**
 * MedicalCondition
 *
 * Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.
 *
 * http://schema.org/MedicalCondition
 */
var MedicalCondition = 'http://schema.org/MedicalCondition';
/**
 * MedicalConditionStage
 *
 * A stage of a medical condition, such as 'Stage IIIa'.
 *
 * http://schema.org/MedicalConditionStage
 */
var MedicalConditionStage = 'http://schema.org/MedicalConditionStage';
/**
 * MedicalContraindication
 *
 * A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but these risks may be outweighed by other considerations or mitigated by other measures).
 *
 * http://schema.org/MedicalContraindication
 */
var MedicalContraindication = 'http://schema.org/MedicalContraindication';
/**
 * MedicalDevice
 *
 * Any object used in a medical capacity, such as to diagnose or treat a patient.
 *
 * http://schema.org/MedicalDevice
 */
var MedicalDevice = 'http://schema.org/MedicalDevice';
/**
 * MedicalDevicePurpose
 *
 * Categories of medical devices, organized by the purpose or intended use of the device.
 *
 * http://schema.org/MedicalDevicePurpose
 */
var MedicalDevicePurpose = 'http://schema.org/MedicalDevicePurpose';
/**
 * MedicalEntity
 *
 * The most generic type of entity related to health and the practice of medicine.
 *
 * http://schema.org/MedicalEntity
 */
var MedicalEntity = 'http://schema.org/MedicalEntity';
/**
 * MedicalEnumeration
 *
 * Enumerations related to health and the practice of medicine: A concept that is used to attribute a quality to another concept, as a qualifier, a collection of items or a listing of all of the elements of a set in medicine practice.
 *
 * http://schema.org/MedicalEnumeration
 */
var MedicalEnumeration = 'http://schema.org/MedicalEnumeration';
/**
 * MedicalEvidenceLevel
 *
 * Level of evidence for a medical guideline. Enumerated type.
 *
 * http://schema.org/MedicalEvidenceLevel
 */
var MedicalEvidenceLevel = 'http://schema.org/MedicalEvidenceLevel';
/**
 * MedicalGuideline
 *
 * Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.
 *
 * http://schema.org/MedicalGuideline
 */
var MedicalGuideline = 'http://schema.org/MedicalGuideline';
/**
 * MedicalGuidelineContraindication
 *
 * A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.
 *
 * http://schema.org/MedicalGuidelineContraindication
 */
var MedicalGuidelineContraindication = 'http://schema.org/MedicalGuidelineContraindication';
/**
 * MedicalGuidelineRecommendation
 *
 * A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.
 *
 * http://schema.org/MedicalGuidelineRecommendation
 */
var MedicalGuidelineRecommendation = 'http://schema.org/MedicalGuidelineRecommendation';
/**
 * MedicalImagingTechnique
 *
 * Any medical imaging modality typically used for diagnostic purposes. Enumerated type.
 *
 * http://schema.org/MedicalImagingTechnique
 */
var MedicalImagingTechnique = 'http://schema.org/MedicalImagingTechnique';
/**
 * MedicalIndication
 *
 * A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.
 *
 * http://schema.org/MedicalIndication
 */
var MedicalIndication = 'http://schema.org/MedicalIndication';
/**
 * MedicalIntangible
 *
 * A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.
 *
 * http://schema.org/MedicalIntangible
 */
var MedicalIntangible = 'http://schema.org/MedicalIntangible';
/**
 * MedicalObservationalStudy
 *
 * An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.
 *
 * http://schema.org/MedicalObservationalStudy
 */
var MedicalObservationalStudy = 'http://schema.org/MedicalObservationalStudy';
/**
 * MedicalObservationalStudyDesign
 *
 * Design models for observational medical studies. Enumerated type.
 *
 * http://schema.org/MedicalObservationalStudyDesign
 */
var MedicalObservationalStudyDesign = 'http://schema.org/MedicalObservationalStudyDesign';
/**
 * MedicalOrganization
 *
 * A medical organization (physical or not), such as hospital, institution or clinic.
 *
 * http://schema.org/MedicalOrganization
 */
var MedicalOrganization = 'http://schema.org/MedicalOrganization';
/**
 * MedicalProcedure
 *
 * A process of care used in either a diagnostic, therapeutic, preventive or palliative capacity that relies on invasive (surgical), non-invasive, or other techniques.
 *
 * http://schema.org/MedicalProcedure
 */
var MedicalProcedure = 'http://schema.org/MedicalProcedure';
/**
 * MedicalProcedureType
 *
 * An enumeration that describes different types of medical procedures.
 *
 * http://schema.org/MedicalProcedureType
 */
var MedicalProcedureType = 'http://schema.org/MedicalProcedureType';
/**
 * MedicalRiskCalculator
 *
 * A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.
 *
 * http://schema.org/MedicalRiskCalculator
 */
var MedicalRiskCalculator = 'http://schema.org/MedicalRiskCalculator';
/**
 * MedicalRiskEstimator
 *
 * Any rule set or interactive tool for estimating the risk of developing a complication or condition.
 *
 * http://schema.org/MedicalRiskEstimator
 */
var MedicalRiskEstimator = 'http://schema.org/MedicalRiskEstimator';
/**
 * MedicalRiskFactor
 *
 * A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.
 *
 * http://schema.org/MedicalRiskFactor
 */
var MedicalRiskFactor = 'http://schema.org/MedicalRiskFactor';
/**
 * MedicalRiskScore
 *
 * A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.
 *
 * http://schema.org/MedicalRiskScore
 */
var MedicalRiskScore = 'http://schema.org/MedicalRiskScore';
/**
 * MedicalScholarlyArticle
 *
 * A scholarly article in the medical domain.
 *
 * http://schema.org/MedicalScholarlyArticle
 */
var MedicalScholarlyArticle = 'http://schema.org/MedicalScholarlyArticle';
/**
 * MedicalSign
 *
 * Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.
 *
 * http://schema.org/MedicalSign
 */
var MedicalSign = 'http://schema.org/MedicalSign';
/**
 * MedicalSignOrSymptom
 *
 * Any feature associated or not with a medical condition. In medicine a symptom is generally subjective while a sign is objective.
 *
 * http://schema.org/MedicalSignOrSymptom
 */
var MedicalSignOrSymptom = 'http://schema.org/MedicalSignOrSymptom';
/**
 * MedicalSpecialty
 *
 * Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.
 *
 * http://schema.org/MedicalSpecialty
 */
var MedicalSpecialty = 'http://schema.org/MedicalSpecialty';
/**
 * MedicalStudy
 *
 * A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.
 *
 * http://schema.org/MedicalStudy
 */
var MedicalStudy = 'http://schema.org/MedicalStudy';
/**
 * MedicalStudyStatus
 *
 * The status of a medical study. Enumerated type.
 *
 * http://schema.org/MedicalStudyStatus
 */
var MedicalStudyStatus = 'http://schema.org/MedicalStudyStatus';
/**
 * MedicalSymptom
 *
 * Any complaint sensed and expressed by the patient (therefore defined as subjective)  like stomachache, lower-back pain, or fatigue.
 *
 * http://schema.org/MedicalSymptom
 */
var MedicalSymptom = 'http://schema.org/MedicalSymptom';
/**
 * MedicalTest
 *
 * Any medical test, typically performed for diagnostic purposes.
 *
 * http://schema.org/MedicalTest
 */
var MedicalTest = 'http://schema.org/MedicalTest';
/**
 * MedicalTestPanel
 *
 * Any collection of tests commonly ordered together.
 *
 * http://schema.org/MedicalTestPanel
 */
var MedicalTestPanel = 'http://schema.org/MedicalTestPanel';
/**
 * MedicalTherapy
 *
 * Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.
 *
 * http://schema.org/MedicalTherapy
 */
var MedicalTherapy = 'http://schema.org/MedicalTherapy';
/**
 * MedicalTrial
 *
 * A medical trial is a type of medical study that uses a scientific process to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.
 *
 * http://schema.org/MedicalTrial
 */
var MedicalTrial = 'http://schema.org/MedicalTrial';
/**
 * MedicalTrialDesign
 *
 * Design models for medical trials. Enumerated type.
 *
 * http://schema.org/MedicalTrialDesign
 */
var MedicalTrialDesign = 'http://schema.org/MedicalTrialDesign';
/**
 * MedicalWebPage
 *
 * A web page that provides medical information.
 *
 * http://schema.org/MedicalWebPage
 */
var MedicalWebPage = 'http://schema.org/MedicalWebPage';
/**
 * MedicineSystem
 *
 * Systems of medical practice.
 *
 * http://schema.org/MedicineSystem
 */
var MedicineSystem = 'http://schema.org/MedicineSystem';
/**
 * MeetingRoom
 *
 * A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/MeetingRoom
 */
var MeetingRoom = 'http://schema.org/MeetingRoom';
/**
 * MensClothingStore
 *
 * A men's clothing store.
 *
 * http://schema.org/MensClothingStore
 */
var MensClothingStore = 'http://schema.org/MensClothingStore';
/**
 * Menu
 *
 * A structured representation of food or drink items available from a FoodEstablishment.
 *
 * http://schema.org/Menu
 */
var Menu = 'http://schema.org/Menu';
/**
 * MenuItem
 *
 * A food or drink item listed in a menu or menu section.
 *
 * http://schema.org/MenuItem
 */
var MenuItem = 'http://schema.org/MenuItem';
/**
 * MenuSection
 *
 * A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.
 *
 * http://schema.org/MenuSection
 */
var MenuSection = 'http://schema.org/MenuSection';
/**
 * MerchantReturnEnumeration
 *
 * Enumerates several kinds of product return policies.
 *
 * http://schema.org/MerchantReturnEnumeration
 */
var MerchantReturnEnumeration = 'http://schema.org/MerchantReturnEnumeration';
/**
 * MerchantReturnPolicy
 *
 * A MerchantReturnPolicy provides information about product return policies associated with an [[Organization]], [[Product]], or [[Offer]].
 *
 * http://schema.org/MerchantReturnPolicy
 */
var MerchantReturnPolicy = 'http://schema.org/MerchantReturnPolicy';
/**
 * MerchantReturnPolicySeasonalOverride
 *
 * A seasonal override of a return policy, for example used for holidays.
 *
 * http://schema.org/MerchantReturnPolicySeasonalOverride
 */
var MerchantReturnPolicySeasonalOverride = 'http://schema.org/MerchantReturnPolicySeasonalOverride';
/**
 * Message
 *
 * A single message from a sender to one or more organizations or people.
 *
 * http://schema.org/Message
 */
var Message = 'http://schema.org/Message';
/**
 * MiddleSchool
 *
 * A middle school (typically for children aged around 11-14, although this varies somewhat).
 *
 * http://schema.org/MiddleSchool
 */
var MiddleSchool = 'http://schema.org/MiddleSchool';
/**
 * MobileApplication
 *
 * A software application designed specifically to work well on a mobile device such as a telephone.
 *
 * http://schema.org/MobileApplication
 */
var MobileApplication = 'http://schema.org/MobileApplication';
/**
 * MobilePhoneStore
 *
 * A store that sells mobile phones and related accessories.
 *
 * http://schema.org/MobilePhoneStore
 */
var MobilePhoneStore = 'http://schema.org/MobilePhoneStore';
/**
 * MolecularEntity
 *
 * Any constitutionally or isotopically distinct atom, molecule, ion, ion pair, radical, radical ion, complex, conformer etc., identifiable as a separately distinguishable entity.
 *
 * http://schema.org/MolecularEntity
 */
var MolecularEntity = 'http://schema.org/MolecularEntity';
/**
 * MonetaryAmount
 *
 * A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use [[PriceSpecification]] Types to describe the price of an Offer, Invoice, etc.
 *
 * http://schema.org/MonetaryAmount
 */
var MonetaryAmount = 'http://schema.org/MonetaryAmount';
/**
 * MonetaryAmountDistribution
 *
 * A statistical distribution of monetary amounts.
 *
 * http://schema.org/MonetaryAmountDistribution
 */
var MonetaryAmountDistribution = 'http://schema.org/MonetaryAmountDistribution';
/**
 * MonetaryGrant
 *
 * A monetary grant.
 *
 * http://schema.org/MonetaryGrant
 */
var MonetaryGrant = 'http://schema.org/MonetaryGrant';
/**
 * MoneyTransfer
 *
 * The act of transferring money from one place to another place. This may occur electronically or physically.
 *
 * http://schema.org/MoneyTransfer
 */
var MoneyTransfer = 'http://schema.org/MoneyTransfer';
/**
 * MortgageLoan
 *
 * A loan in which property or real estate is used as collateral. (A loan securitized against some real estate.)
 *
 * http://schema.org/MortgageLoan
 */
var MortgageLoan = 'http://schema.org/MortgageLoan';
/**
 * Mosque
 *
 * A mosque.
 *
 * http://schema.org/Mosque
 */
var Mosque = 'http://schema.org/Mosque';
/**
 * Motel
 *
 * A motel.
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/Motel
 */
var Motel = 'http://schema.org/Motel';
/**
 * Motorcycle
 *
 * A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.
 *
 * http://schema.org/Motorcycle
 */
var Motorcycle = 'http://schema.org/Motorcycle';
/**
 * MotorcycleDealer
 *
 * A motorcycle dealer.
 *
 * http://schema.org/MotorcycleDealer
 */
var MotorcycleDealer = 'http://schema.org/MotorcycleDealer';
/**
 * MotorcycleRepair
 *
 * A motorcycle repair shop.
 *
 * http://schema.org/MotorcycleRepair
 */
var MotorcycleRepair = 'http://schema.org/MotorcycleRepair';
/**
 * MotorizedBicycle
 *
 * A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.
 *
 * http://schema.org/MotorizedBicycle
 */
var MotorizedBicycle = 'http://schema.org/MotorizedBicycle';
/**
 * Mountain
 *
 * A mountain, like Mount Whitney or Mount Everest.
 *
 * http://schema.org/Mountain
 */
var Mountain = 'http://schema.org/Mountain';
/**
 * MoveAction
 *
 * The act of an agent relocating to a place.\n\nRelated actions:\n\n* [[TransferAction]]: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.
 *
 * http://schema.org/MoveAction
 */
var MoveAction = 'http://schema.org/MoveAction';
/**
 * Movie
 *
 * A movie.
 *
 * http://schema.org/Movie
 */
var Movie = 'http://schema.org/Movie';
/**
 * MovieClip
 *
 * A short segment/part of a movie.
 *
 * http://schema.org/MovieClip
 */
var MovieClip = 'http://schema.org/MovieClip';
/**
 * MovieRentalStore
 *
 * A movie rental store.
 *
 * http://schema.org/MovieRentalStore
 */
var MovieRentalStore = 'http://schema.org/MovieRentalStore';
/**
 * MovieSeries
 *
 * A series of movies. Included movies can be indicated with the hasPart property.
 *
 * http://schema.org/MovieSeries
 */
var MovieSeries = 'http://schema.org/MovieSeries';
/**
 * MovieTheater
 *
 * A movie theater.
 *
 * http://schema.org/MovieTheater
 */
var MovieTheater = 'http://schema.org/MovieTheater';
/**
 * MovingCompany
 *
 * A moving company.
 *
 * http://schema.org/MovingCompany
 */
var MovingCompany = 'http://schema.org/MovingCompany';
/**
 * Muscle
 *
 * A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.
 *
 * http://schema.org/Muscle
 */
var Muscle = 'http://schema.org/Muscle';
/**
 * Museum
 *
 * A museum.
 *
 * http://schema.org/Museum
 */
var Museum = 'http://schema.org/Museum';
/**
 * MusicAlbum
 *
 * A collection of music tracks.
 *
 * http://schema.org/MusicAlbum
 */
var MusicAlbum = 'http://schema.org/MusicAlbum';
/**
 * MusicAlbumProductionType
 *
 * Classification of the album by its type of content: soundtrack, live album, studio album, etc.
 *
 * http://schema.org/MusicAlbumProductionType
 */
var MusicAlbumProductionType = 'http://schema.org/MusicAlbumProductionType';
/**
 * MusicAlbumReleaseType
 *
 * The kind of release which this album is: single, EP or album.
 *
 * http://schema.org/MusicAlbumReleaseType
 */
var MusicAlbumReleaseType = 'http://schema.org/MusicAlbumReleaseType';
/**
 * MusicComposition
 *
 * A musical composition.
 *
 * http://schema.org/MusicComposition
 */
var MusicComposition = 'http://schema.org/MusicComposition';
/**
 * MusicEvent
 *
 * Event type: Music event.
 *
 * http://schema.org/MusicEvent
 */
var MusicEvent = 'http://schema.org/MusicEvent';
/**
 * MusicGroup
 *
 * A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.
 *
 * http://schema.org/MusicGroup
 */
var MusicGroup = 'http://schema.org/MusicGroup';
/**
 * MusicPlaylist
 *
 * A collection of music tracks in playlist form.
 *
 * http://schema.org/MusicPlaylist
 */
var MusicPlaylist = 'http://schema.org/MusicPlaylist';
/**
 * MusicRecording
 *
 * A music recording (track), usually a single song.
 *
 * http://schema.org/MusicRecording
 */
var MusicRecording = 'http://schema.org/MusicRecording';
/**
 * MusicRelease
 *
 * A MusicRelease is a specific release of a music album.
 *
 * http://schema.org/MusicRelease
 */
var MusicRelease = 'http://schema.org/MusicRelease';
/**
 * MusicReleaseFormatType
 *
 * Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).
 *
 * http://schema.org/MusicReleaseFormatType
 */
var MusicReleaseFormatType = 'http://schema.org/MusicReleaseFormatType';
/**
 * MusicStore
 *
 * A music store.
 *
 * http://schema.org/MusicStore
 */
var MusicStore = 'http://schema.org/MusicStore';
/**
 * MusicVenue
 *
 * A music venue.
 *
 * http://schema.org/MusicVenue
 */
var MusicVenue = 'http://schema.org/MusicVenue';
/**
 * MusicVideoObject
 *
 * A music video file.
 *
 * http://schema.org/MusicVideoObject
 */
var MusicVideoObject = 'http://schema.org/MusicVideoObject';
/**
 * NGO
 *
 * Organization: Non-governmental Organization.
 *
 * http://schema.org/NGO
 */
var NGO = 'http://schema.org/NGO';
/**
 * NLNonprofitType
 *
 * NLNonprofitType: Non-profit organization type originating from the Netherlands.
 *
 * http://schema.org/NLNonprofitType
 */
var NLNonprofitType = 'http://schema.org/NLNonprofitType';
/**
 * NailSalon
 *
 * A nail salon.
 *
 * http://schema.org/NailSalon
 */
var NailSalon = 'http://schema.org/NailSalon';
/**
 * Nerve
 *
 * A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.
 *
 * http://schema.org/Nerve
 */
var Nerve = 'http://schema.org/Nerve';
/**
 * NewsArticle
 *
 * A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.
 *
 * A more detailed overview of [schema.org News markup](/docs/news.html) is also available.
 *
 *
 * http://schema.org/NewsArticle
 */
var NewsArticle = 'http://schema.org/NewsArticle';
/**
 * NewsMediaOrganization
 *
 * A News/Media organization such as a newspaper or TV station.
 *
 * http://schema.org/NewsMediaOrganization
 */
var NewsMediaOrganization = 'http://schema.org/NewsMediaOrganization';
/**
 * Newspaper
 *
 * A publication containing information about varied topics that are pertinent to general information, a geographic area, or a specific subject matter (i.e. business, culture, education). Often published daily.
 *
 * http://schema.org/Newspaper
 */
var Newspaper = 'http://schema.org/Newspaper';
/**
 * NightClub
 *
 * A nightclub or discotheque.
 *
 * http://schema.org/NightClub
 */
var NightClub = 'http://schema.org/NightClub';
/**
 * NonprofitType
 *
 * NonprofitType enumerates several kinds of official non-profit types of which a non-profit organization can be.
 *
 * http://schema.org/NonprofitType
 */
var NonprofitType = 'http://schema.org/NonprofitType';
/**
 * Notary
 *
 * A notary.
 *
 * http://schema.org/Notary
 */
var Notary = 'http://schema.org/Notary';
/**
 * NoteDigitalDocument
 *
 * A file containing a note, primarily for the author.
 *
 * http://schema.org/NoteDigitalDocument
 */
var NoteDigitalDocument = 'http://schema.org/NoteDigitalDocument';
/**
 * Number
 *
 * Data type: Number.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
 * Note that `Number` is a reserved Javascript keyword, and is therefore suffixed by `__workaround`.
 * For a list of reserved keywords, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords.
 *
 * http://schema.org/Number
 */
var Number__workaround = 'http://schema.org/Number';
/**
 * NutritionInformation
 *
 * Nutritional information about the recipe.
 *
 * http://schema.org/NutritionInformation
 */
var NutritionInformation = 'http://schema.org/NutritionInformation';
/**
 * Observation
 *
 * Instances of the class [[Observation]] are used to specify observations about an entity at a particular time. The principal properties of an [[Observation]] are [[observationAbout]], [[measuredProperty]], [[statType]], [[value] and [[observationDate]]  and [[measuredProperty]]. Some but not all Observations represent a [[QuantitativeValue]]. Quantitative observations can be about a [[StatisticalVariable]], which is an abstract specification about which we can make observations that are grounded at a particular location and time.
 *
 * Observations can also encode a subset of simple RDF-like statements (its observationAbout, a StatisticalVariable, defining the measuredPoperty; its observationAbout property indicating the entity the statement is about, and [[value]] )
 *
 * In the context of a quantitative knowledge graph, typical properties could include [[measuredProperty]], [[observationAbout]], [[observationDate]], [[value]], [[unitCode]], [[unitText]], [[measurementMethod]].
 *
 *
 * http://schema.org/Observation
 */
var Observation = 'http://schema.org/Observation';
/**
 * Occupation
 *
 * A profession, may involve prolonged training and/or a formal qualification.
 *
 * http://schema.org/Occupation
 */
var Occupation = 'http://schema.org/Occupation';
/**
 * OccupationalExperienceRequirements
 *
 * Indicates employment-related experience requirements, e.g. [[monthsOfExperience]].
 *
 * http://schema.org/OccupationalExperienceRequirements
 */
var OccupationalExperienceRequirements = 'http://schema.org/OccupationalExperienceRequirements';
/**
 * OccupationalTherapy
 *
 * A treatment of people with physical, emotional, or social problems, using purposeful activity to help them overcome or learn to deal with their problems.
 *
 * http://schema.org/OccupationalTherapy
 */
var OccupationalTherapy = 'http://schema.org/OccupationalTherapy';
/**
 * OceanBodyOfWater
 *
 * An ocean (for example, the Pacific).
 *
 * http://schema.org/OceanBodyOfWater
 */
var OceanBodyOfWater = 'http://schema.org/OceanBodyOfWater';
/**
 * Offer
 *
 * An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\n\nNote: As the [[businessFunction]] property, which identifies the form of offer (e.g. sell, lease, repair, dispose), defaults to http://purl.org/goodrelations/v1#Sell; an Offer without a defined businessFunction value can be assumed to be an offer to sell.\n\nFor [GTIN](http://www.gs1.org/barcodes/technical/idkeys/gtin)-related fields, see [Check Digit calculator](http://www.gs1.org/barcodes/support/check_digit_calculator) and [validation guide](http://www.gs1us.org/resources/standards/gtin-validation-guide) from [GS1](http://www.gs1.org/).
 *
 * http://schema.org/Offer
 */
var Offer = 'http://schema.org/Offer';
/**
 * OfferCatalog
 *
 * An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.
 *
 * http://schema.org/OfferCatalog
 */
var OfferCatalog = 'http://schema.org/OfferCatalog';
/**
 * OfferForLease
 *
 * An [[OfferForLease]] in Schema.org represents an [[Offer]] to lease out something, i.e. an [[Offer]] whose
 *   [[businessFunction]] is [lease out](http://purl.org/goodrelations/v1#LeaseOut.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for
 *   background on the underlying concepts.
 *
 *
 * http://schema.org/OfferForLease
 */
var OfferForLease = 'http://schema.org/OfferForLease';
/**
 * OfferForPurchase
 *
 * An [[OfferForPurchase]] in Schema.org represents an [[Offer]] to sell something, i.e. an [[Offer]] whose
 *   [[businessFunction]] is [sell](http://purl.org/goodrelations/v1#Sell.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for
 *   background on the underlying concepts.
 *
 *
 * http://schema.org/OfferForPurchase
 */
var OfferForPurchase = 'http://schema.org/OfferForPurchase';
/**
 * OfferItemCondition
 *
 * A list of possible conditions for the item.
 *
 * http://schema.org/OfferItemCondition
 */
var OfferItemCondition = 'http://schema.org/OfferItemCondition';
/**
 * OfferShippingDetails
 *
 * OfferShippingDetails represents information about shipping destinations.
 *
 * Multiple of these entities can be used to represent different shipping rates for different destinations:
 *
 * One entity for Alaska/Hawaii. A different one for continental US. A different one for all France.
 *
 * Multiple of these entities can be used to represent different shipping costs and delivery times.
 *
 * Two entities that are identical but differ in rate and time:
 *
 * E.g. Cheaper and slower: $5 in 5-7 days
 * or Fast and expensive: $15 in 1-2 days.
 *
 * http://schema.org/OfferShippingDetails
 */
var OfferShippingDetails = 'http://schema.org/OfferShippingDetails';
/**
 * OfficeEquipmentStore
 *
 * An office equipment store.
 *
 * http://schema.org/OfficeEquipmentStore
 */
var OfficeEquipmentStore = 'http://schema.org/OfficeEquipmentStore';
/**
 * OnDemandEvent
 *
 * A publication event, e.g. catch-up TV or radio podcast, during which a program is available on-demand.
 *
 * http://schema.org/OnDemandEvent
 */
var OnDemandEvent = 'http://schema.org/OnDemandEvent';
/**
 * OnlineBusiness
 *
 * A particular online business, either standalone or the online part of a broader organization. Examples include an eCommerce site, an online travel booking site, an online learning site, an online logistics and shipping provider, an online (virtual) doctor, etc.
 *
 * http://schema.org/OnlineBusiness
 */
var OnlineBusiness = 'http://schema.org/OnlineBusiness';
/**
 * OnlineStore
 *
 * An eCommerce site.
 *
 * http://schema.org/OnlineStore
 */
var OnlineStore = 'http://schema.org/OnlineStore';
/**
 * OpeningHoursSpecification
 *
 * A structured value providing information about the opening hours of a place or a certain service inside a place.\n\n
 * The place is __open__ if the [[opens]] property is specified, and __closed__ otherwise.\n\nIf the value for the [[closes]] property is less than the value for the [[opens]] property then the hour range is assumed to span over the next day.
 *
 *
 * http://schema.org/OpeningHoursSpecification
 */
var OpeningHoursSpecification = 'http://schema.org/OpeningHoursSpecification';
/**
 * OpinionNewsArticle
 *
 * An [[OpinionNewsArticle]] is a [[NewsArticle]] that primarily expresses opinions rather than journalistic reporting of news and events. For example, a [[NewsArticle]] consisting of a column or [[Blog]]/[[BlogPosting]] entry in the Opinions section of a news publication.
 *
 * http://schema.org/OpinionNewsArticle
 */
var OpinionNewsArticle = 'http://schema.org/OpinionNewsArticle';
/**
 * Optician
 *
 * A store that sells reading glasses and similar devices for improving vision.
 *
 * http://schema.org/Optician
 */
var Optician = 'http://schema.org/Optician';
/**
 * Order
 *
 * An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
 *
 * http://schema.org/Order
 */
var Order = 'http://schema.org/Order';
/**
 * OrderAction
 *
 * An agent orders an object/product/service to be delivered/sent.
 *
 * http://schema.org/OrderAction
 */
var OrderAction = 'http://schema.org/OrderAction';
/**
 * OrderItem
 *
 * An order item is a line of an order. It includes the quantity and shipping details of a bought offer.
 *
 * http://schema.org/OrderItem
 */
var OrderItem = 'http://schema.org/OrderItem';
/**
 * OrderStatus
 *
 * Enumerated status values for Order.
 *
 * http://schema.org/OrderStatus
 */
var OrderStatus = 'http://schema.org/OrderStatus';
/**
 * Organization
 *
 * An organization such as a school, NGO, corporation, club, etc.
 *
 * http://schema.org/Organization
 */
var Organization = 'http://schema.org/Organization';
/**
 * OrganizationRole
 *
 * A subclass of Role used to describe roles within organizations.
 *
 * http://schema.org/OrganizationRole
 */
var OrganizationRole = 'http://schema.org/OrganizationRole';
/**
 * OrganizeAction
 *
 * The act of manipulating/administering/supervising/controlling one or more objects.
 *
 * http://schema.org/OrganizeAction
 */
var OrganizeAction = 'http://schema.org/OrganizeAction';
/**
 * OutletStore
 *
 * An outlet store.
 *
 * http://schema.org/OutletStore
 */
var OutletStore = 'http://schema.org/OutletStore';
/**
 * OwnershipInfo
 *
 * A structured value providing information about when a certain organization or person owned a certain product.
 *
 * http://schema.org/OwnershipInfo
 */
var OwnershipInfo = 'http://schema.org/OwnershipInfo';
/**
 * PaintAction
 *
 * The act of producing a painting, typically with paint and canvas as instruments.
 *
 * http://schema.org/PaintAction
 */
var PaintAction = 'http://schema.org/PaintAction';
/**
 * Painting
 *
 * A painting.
 *
 * http://schema.org/Painting
 */
var Painting = 'http://schema.org/Painting';
/**
 * PalliativeProcedure
 *
 * A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.
 *
 * http://schema.org/PalliativeProcedure
 */
var PalliativeProcedure = 'http://schema.org/PalliativeProcedure';
/**
 * ParcelDelivery
 *
 * The delivery of a parcel either via the postal service or a commercial service.
 *
 * http://schema.org/ParcelDelivery
 */
var ParcelDelivery = 'http://schema.org/ParcelDelivery';
/**
 * ParentAudience
 *
 * A set of characteristics describing parents, who can be interested in viewing some content.
 *
 * http://schema.org/ParentAudience
 */
var ParentAudience = 'http://schema.org/ParentAudience';
/**
 * Park
 *
 * A park.
 *
 * http://schema.org/Park
 */
var Park = 'http://schema.org/Park';
/**
 * ParkingFacility
 *
 * A parking lot or other parking facility.
 *
 * http://schema.org/ParkingFacility
 */
var ParkingFacility = 'http://schema.org/ParkingFacility';
/**
 * PathologyTest
 *
 * A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.
 *
 * http://schema.org/PathologyTest
 */
var PathologyTest = 'http://schema.org/PathologyTest';
/**
 * Patient
 *
 * A patient is any person recipient of health care services.
 *
 * http://schema.org/Patient
 */
var Patient = 'http://schema.org/Patient';
/**
 * PawnShop
 *
 * A shop that will buy, or lend money against the security of, personal possessions.
 *
 * http://schema.org/PawnShop
 */
var PawnShop = 'http://schema.org/PawnShop';
/**
 * PayAction
 *
 * An agent pays a price to a participant.
 *
 * http://schema.org/PayAction
 */
var PayAction = 'http://schema.org/PayAction';
/**
 * PaymentCard
 *
 * A payment method using a credit, debit, store or other card to associate the payment with an account.
 *
 * http://schema.org/PaymentCard
 */
var PaymentCard = 'http://schema.org/PaymentCard';
/**
 * PaymentChargeSpecification
 *
 * The costs of settling the payment using a particular payment method.
 *
 * http://schema.org/PaymentChargeSpecification
 */
var PaymentChargeSpecification = 'http://schema.org/PaymentChargeSpecification';
/**
 * PaymentMethod
 *
 * A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#ByBankTransferInAdvance\n* http://purl.org/goodrelations/v1#ByInvoice\n* http://purl.org/goodrelations/v1#Cash\n* http://purl.org/goodrelations/v1#CheckInAdvance\n* http://purl.org/goodrelations/v1#COD\n* http://purl.org/goodrelations/v1#DirectDebit\n* http://purl.org/goodrelations/v1#GoogleCheckout\n* http://purl.org/goodrelations/v1#PayPal\n* http://purl.org/goodrelations/v1#PaySwarm
 *
 *
 * http://schema.org/PaymentMethod
 */
var PaymentMethod = 'http://schema.org/PaymentMethod';
/**
 * PaymentService
 *
 * A Service to transfer funds from a person or organization to a beneficiary person or organization.
 *
 * http://schema.org/PaymentService
 */
var PaymentService = 'http://schema.org/PaymentService';
/**
 * PaymentStatusType
 *
 * A specific payment status. For example, PaymentDue, PaymentComplete, etc.
 *
 * http://schema.org/PaymentStatusType
 */
var PaymentStatusType = 'http://schema.org/PaymentStatusType';
/**
 * PeopleAudience
 *
 * A set of characteristics belonging to people, e.g. who compose an item's target audience.
 *
 * http://schema.org/PeopleAudience
 */
var PeopleAudience = 'http://schema.org/PeopleAudience';
/**
 * PerformAction
 *
 * The act of participating in performance arts.
 *
 * http://schema.org/PerformAction
 */
var PerformAction = 'http://schema.org/PerformAction';
/**
 * PerformanceRole
 *
 * A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.
 *
 * http://schema.org/PerformanceRole
 */
var PerformanceRole = 'http://schema.org/PerformanceRole';
/**
 * PerformingArtsTheater
 *
 * A theater or other performing art center.
 *
 * http://schema.org/PerformingArtsTheater
 */
var PerformingArtsTheater = 'http://schema.org/PerformingArtsTheater';
/**
 * PerformingGroup
 *
 * A performance group, such as a band, an orchestra, or a circus.
 *
 * http://schema.org/PerformingGroup
 */
var PerformingGroup = 'http://schema.org/PerformingGroup';
/**
 * Periodical
 *
 * A publication in any medium issued in successive parts bearing numerical or chronological designations and intended to continue indefinitely, such as a magazine, scholarly journal, or newspaper.\n\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).
 *
 * http://schema.org/Periodical
 */
var Periodical = 'http://schema.org/Periodical';
/**
 * Permit
 *
 * A permit issued by an organization, e.g. a parking pass.
 *
 * http://schema.org/Permit
 */
var Permit = 'http://schema.org/Permit';
/**
 * Person
 *
 * A person (alive, dead, undead, or fictional).
 *
 * http://schema.org/Person
 */
var Person = 'http://schema.org/Person';
/**
 * PetStore
 *
 * A pet store.
 *
 * http://schema.org/PetStore
 */
var PetStore = 'http://schema.org/PetStore';
/**
 * Pharmacy
 *
 * A pharmacy or drugstore.
 *
 * http://schema.org/Pharmacy
 */
var Pharmacy = 'http://schema.org/Pharmacy';
/**
 * Photograph
 *
 * A photograph.
 *
 * http://schema.org/Photograph
 */
var Photograph = 'http://schema.org/Photograph';
/**
 * PhotographAction
 *
 * The act of capturing still images of objects using a camera.
 *
 * http://schema.org/PhotographAction
 */
var PhotographAction = 'http://schema.org/PhotographAction';
/**
 * PhysicalActivity
 *
 * Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.
 *
 * http://schema.org/PhysicalActivity
 */
var PhysicalActivity = 'http://schema.org/PhysicalActivity';
/**
 * PhysicalActivityCategory
 *
 * Categories of physical activity, organized by physiologic classification.
 *
 * http://schema.org/PhysicalActivityCategory
 */
var PhysicalActivityCategory = 'http://schema.org/PhysicalActivityCategory';
/**
 * PhysicalExam
 *
 * A type of physical examination of a patient performed by a physician.
 *
 * http://schema.org/PhysicalExam
 */
var PhysicalExam = 'http://schema.org/PhysicalExam';
/**
 * PhysicalTherapy
 *
 * A process of progressive physical care and rehabilitation aimed at improving a health condition.
 *
 * http://schema.org/PhysicalTherapy
 */
var PhysicalTherapy = 'http://schema.org/PhysicalTherapy';
/**
 * Physician
 *
 * A doctor's office.
 *
 * http://schema.org/Physician
 */
var Physician = 'http://schema.org/Physician';
/**
 * Place
 *
 * Entities that have a somewhat fixed, physical extension.
 *
 * http://schema.org/Place
 */
var Place = 'http://schema.org/Place';
/**
 * PlaceOfWorship
 *
 * Place of worship, such as a church, synagogue, or mosque.
 *
 * http://schema.org/PlaceOfWorship
 */
var PlaceOfWorship = 'http://schema.org/PlaceOfWorship';
/**
 * PlanAction
 *
 * The act of planning the execution of an event/task/action/reservation/plan to a future date.
 *
 * http://schema.org/PlanAction
 */
var PlanAction = 'http://schema.org/PlanAction';
/**
 * Play
 *
 * A play is a form of literature, usually consisting of dialogue between characters, intended for theatrical performance rather than just reading. Note: A performance of a Play would be a [[TheaterEvent]] or [[BroadcastEvent]] - the *Play* being the [[workPerformed]].
 *
 * http://schema.org/Play
 */
var Play = 'http://schema.org/Play';
/**
 * PlayAction
 *
 * The act of playing/exercising/training/performing for enjoyment, leisure, recreation, competition or exercise.\n\nRelated actions:\n\n* [[ListenAction]]: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.\n* [[WatchAction]]: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.
 *
 * http://schema.org/PlayAction
 */
var PlayAction = 'http://schema.org/PlayAction';
/**
 * PlayGameAction
 *
 * The act of playing a video game.
 *
 * http://schema.org/PlayGameAction
 */
var PlayGameAction = 'http://schema.org/PlayGameAction';
/**
 * Playground
 *
 * A playground.
 *
 * http://schema.org/Playground
 */
var Playground = 'http://schema.org/Playground';
/**
 * Plumber
 *
 * A plumbing service.
 *
 * http://schema.org/Plumber
 */
var Plumber = 'http://schema.org/Plumber';
/**
 * PodcastEpisode
 *
 * A single episode of a podcast series.
 *
 * http://schema.org/PodcastEpisode
 */
var PodcastEpisode = 'http://schema.org/PodcastEpisode';
/**
 * PodcastSeason
 *
 * A single season of a podcast. Many podcasts do not break down into separate seasons. In that case, PodcastSeries should be used.
 *
 * http://schema.org/PodcastSeason
 */
var PodcastSeason = 'http://schema.org/PodcastSeason';
/**
 * PodcastSeries
 *
 * A podcast is an episodic series of digital audio or video files which a user can download and listen to.
 *
 * http://schema.org/PodcastSeries
 */
var PodcastSeries = 'http://schema.org/PodcastSeries';
/**
 * PoliceStation
 *
 * A police station.
 *
 * http://schema.org/PoliceStation
 */
var PoliceStation = 'http://schema.org/PoliceStation';
/**
 * PoliticalParty
 *
 * Organization: Political Party.
 *
 * http://schema.org/PoliticalParty
 */
var PoliticalParty = 'http://schema.org/PoliticalParty';
/**
 * Pond
 *
 * A pond.
 *
 * http://schema.org/Pond
 */
var Pond = 'http://schema.org/Pond';
/**
 * PostOffice
 *
 * A post office.
 *
 * http://schema.org/PostOffice
 */
var PostOffice = 'http://schema.org/PostOffice';
/**
 * PostalAddress
 *
 * The mailing address.
 *
 * http://schema.org/PostalAddress
 */
var PostalAddress = 'http://schema.org/PostalAddress';
/**
 * PostalCodeRangeSpecification
 *
 * Indicates a range of postal codes, usually defined as the set of valid codes between [[postalCodeBegin]] and [[postalCodeEnd]], inclusively.
 *
 * http://schema.org/PostalCodeRangeSpecification
 */
var PostalCodeRangeSpecification = 'http://schema.org/PostalCodeRangeSpecification';
/**
 * Poster
 *
 * A large, usually printed placard, bill, or announcement, often illustrated, that is posted to advertise or publicize something.
 *
 * http://schema.org/Poster
 */
var Poster = 'http://schema.org/Poster';
/**
 * PreOrderAction
 *
 * An agent orders a (not yet released) object/product/service to be delivered/sent.
 *
 * http://schema.org/PreOrderAction
 */
var PreOrderAction = 'http://schema.org/PreOrderAction';
/**
 * PrependAction
 *
 * The act of inserting at the beginning if an ordered collection.
 *
 * http://schema.org/PrependAction
 */
var PrependAction = 'http://schema.org/PrependAction';
/**
 * Preschool
 *
 * A preschool.
 *
 * http://schema.org/Preschool
 */
var Preschool = 'http://schema.org/Preschool';
/**
 * PresentationDigitalDocument
 *
 * A file containing slides or used for a presentation.
 *
 * http://schema.org/PresentationDigitalDocument
 */
var PresentationDigitalDocument = 'http://schema.org/PresentationDigitalDocument';
/**
 * PreventionIndication
 *
 * An indication for preventing an underlying condition, symptom, etc.
 *
 * http://schema.org/PreventionIndication
 */
var PreventionIndication = 'http://schema.org/PreventionIndication';
/**
 * PriceComponentTypeEnumeration
 *
 * Enumerates different price components that together make up the total price for an offered product.
 *
 * http://schema.org/PriceComponentTypeEnumeration
 */
var PriceComponentTypeEnumeration = 'http://schema.org/PriceComponentTypeEnumeration';
/**
 * PriceSpecification
 *
 * A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use [[MonetaryAmount]] to describe independent amounts of money such as a salary, credit card limits, etc.
 *
 * http://schema.org/PriceSpecification
 */
var PriceSpecification = 'http://schema.org/PriceSpecification';
/**
 * PriceTypeEnumeration
 *
 * Enumerates different price types, for example list price, invoice price, and sale price.
 *
 * http://schema.org/PriceTypeEnumeration
 */
var PriceTypeEnumeration = 'http://schema.org/PriceTypeEnumeration';
/**
 * Product
 *
 * Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.
 *
 * http://schema.org/Product
 */
var Product = 'http://schema.org/Product';
/**
 * ProductCollection
 *
 * A set of products (either [[ProductGroup]]s or specific variants) that are listed together e.g. in an [[Offer]].
 *
 * http://schema.org/ProductCollection
 */
var ProductCollection = 'http://schema.org/ProductCollection';
/**
 * ProductGroup
 *
 * A ProductGroup represents a group of [[Product]]s that vary only in certain well-described ways, such as by [[size]], [[color]], [[material]] etc.
 *
 * While a ProductGroup itself is not directly offered for sale, the various varying products that it represents can be. The ProductGroup serves as a prototype or template, standing in for all of the products who have an [[isVariantOf]] relationship to it. As such, properties (including additional types) can be applied to the ProductGroup to represent characteristics shared by each of the (possibly very many) variants. Properties that reference a ProductGroup are not included in this mechanism; neither are the following specific properties [[variesBy]], [[hasVariant]], [[url]].
 *
 * http://schema.org/ProductGroup
 */
var ProductGroup = 'http://schema.org/ProductGroup';
/**
 * ProductModel
 *
 * A datasheet or vendor specification of a product (in the sense of a prototypical description).
 *
 * http://schema.org/ProductModel
 */
var ProductModel = 'http://schema.org/ProductModel';
/**
 * ProductReturnEnumeration
 *
 * ProductReturnEnumeration enumerates several kinds of product return policy. Note that this structure may not capture all aspects of the policy.
 *
 * http://schema.org/ProductReturnEnumeration
 */
var ProductReturnEnumeration = 'http://schema.org/ProductReturnEnumeration';
/**
 * ProductReturnPolicy
 *
 * A ProductReturnPolicy provides information about product return policies associated with an [[Organization]] or [[Product]].
 *
 * http://schema.org/ProductReturnPolicy
 */
var ProductReturnPolicy = 'http://schema.org/ProductReturnPolicy';
/**
 * ProfessionalService
 *
 * Original definition: "provider of professional services."\n\nThe general [[ProfessionalService]] type for local businesses was deprecated due to confusion with [[Service]]. For reference, the types that it included were: [[Dentist]],
 *         [[AccountingService]], [[Attorney]], [[Notary]], as well as types for several kinds of [[HomeAndConstructionBusiness]]: [[Electrician]], [[GeneralContractor]],
 *         [[HousePainter]], [[Locksmith]], [[Plumber]], [[RoofingContractor]]. [[LegalService]] was introduced as a more inclusive supertype of [[Attorney]].
 *
 * http://schema.org/ProfessionalService
 */
var ProfessionalService = 'http://schema.org/ProfessionalService';
/**
 * ProfilePage
 *
 * Web page type: Profile page.
 *
 * http://schema.org/ProfilePage
 */
var ProfilePage = 'http://schema.org/ProfilePage';
/**
 * ProgramMembership
 *
 * Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
 *
 * http://schema.org/ProgramMembership
 */
var ProgramMembership = 'http://schema.org/ProgramMembership';
/**
 * Project
 *
 * An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim.
 * Use properties from [[Organization]], [[subOrganization]]/[[parentOrganization]] to indicate project sub-structures.
 *
 *
 * http://schema.org/Project
 */
var Project = 'http://schema.org/Project';
/**
 * PronounceableText
 *
 * Data type: PronounceableText.
 *
 * http://schema.org/PronounceableText
 */
var PronounceableText = 'http://schema.org/PronounceableText';
/**
 * Property
 *
 * A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.
 *
 * http://schema.org/Property
 */
var Property = 'http://schema.org/Property';
/**
 * PropertyValue
 *
 * A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.\n\n Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.
 *
 *
 * http://schema.org/PropertyValue
 */
var PropertyValue = 'http://schema.org/PropertyValue';
/**
 * PropertyValueSpecification
 *
 * A Property value specification.
 *
 * http://schema.org/PropertyValueSpecification
 */
var PropertyValueSpecification = 'http://schema.org/PropertyValueSpecification';
/**
 * Protein
 *
 * Protein is here used in its widest possible definition, as classes of amino acid based molecules. Amyloid-beta Protein in human (UniProt P05067), eukaryota (e.g. an OrthoDB group) or even a single molecule that one can point to are all of type :Protein. A protein can thus be a subclass of another protein, e.g. :Protein as a UniProt record can have multiple isoforms inside it which would also be :Protein. They can be imagined, synthetic, hypothetical or naturally occurring.
 *
 * http://schema.org/Protein
 */
var Protein = 'http://schema.org/Protein';
/**
 * PsychologicalTreatment
 *
 * A process of care relying upon counseling, dialogue and communication  aimed at improving a mental health condition without use of drugs.
 *
 * http://schema.org/PsychologicalTreatment
 */
var PsychologicalTreatment = 'http://schema.org/PsychologicalTreatment';
/**
 * PublicSwimmingPool
 *
 * A public swimming pool.
 *
 * http://schema.org/PublicSwimmingPool
 */
var PublicSwimmingPool = 'http://schema.org/PublicSwimmingPool';
/**
 * PublicToilet
 *
 * A public toilet is a room or small building containing one or more toilets (and possibly also urinals) which is available for use by the general public, or by customers or employees of certain businesses.
 *
 * http://schema.org/PublicToilet
 */
var PublicToilet = 'http://schema.org/PublicToilet';
/**
 * PublicationEvent
 *
 * A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type, e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.
 *
 * http://schema.org/PublicationEvent
 */
var PublicationEvent = 'http://schema.org/PublicationEvent';
/**
 * PublicationIssue
 *
 * A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.\n\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).
 *
 * http://schema.org/PublicationIssue
 */
var PublicationIssue = 'http://schema.org/PublicationIssue';
/**
 * PublicationVolume
 *
 * A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.\n\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).
 *
 * http://schema.org/PublicationVolume
 */
var PublicationVolume = 'http://schema.org/PublicationVolume';
/**
 * QAPage
 *
 * A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).
 *
 * http://schema.org/QAPage
 */
var QAPage = 'http://schema.org/QAPage';
/**
 * QualitativeValue
 *
 * A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
 *
 * http://schema.org/QualitativeValue
 */
var QualitativeValue = 'http://schema.org/QualitativeValue';
/**
 * QuantitativeValue
 *
 *  A point value or interval for product characteristics and other purposes.
 *
 * http://schema.org/QuantitativeValue
 */
var QuantitativeValue = 'http://schema.org/QuantitativeValue';
/**
 * QuantitativeValueDistribution
 *
 * A statistical distribution of values.
 *
 * http://schema.org/QuantitativeValueDistribution
 */
var QuantitativeValueDistribution = 'http://schema.org/QuantitativeValueDistribution';
/**
 * Quantity
 *
 * Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 kg' or '4 milligrams'.
 *
 * http://schema.org/Quantity
 */
var Quantity = 'http://schema.org/Quantity';
/**
 * Question
 *
 * A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.
 *
 * http://schema.org/Question
 */
var Question = 'http://schema.org/Question';
/**
 * Quiz
 *
 * Quiz: A test of knowledge, skills and abilities.
 *
 * http://schema.org/Quiz
 */
var Quiz = 'http://schema.org/Quiz';
/**
 * Quotation
 *
 * A quotation. Often but not necessarily from some written work, attributable to a real world author and - if associated with a fictional character - to any fictional Person. Use [[isBasedOn]] to link to source/origin. The [[recordedIn]] property can be used to reference a Quotation from an [[Event]].
 *
 * http://schema.org/Quotation
 */
var Quotation = 'http://schema.org/Quotation';
/**
 * QuoteAction
 *
 * An agent quotes/estimates/appraises an object/product/service with a price at a location/store.
 *
 * http://schema.org/QuoteAction
 */
var QuoteAction = 'http://schema.org/QuoteAction';
/**
 * RVPark
 *
 * A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like.
 *
 * http://schema.org/RVPark
 */
var RVPark = 'http://schema.org/RVPark';
/**
 * RadiationTherapy
 *
 * A process of care using radiation aimed at improving a health condition.
 *
 * http://schema.org/RadiationTherapy
 */
var RadiationTherapy = 'http://schema.org/RadiationTherapy';
/**
 * RadioBroadcastService
 *
 * A delivery service through which radio content is provided via broadcast over the air or online.
 *
 * http://schema.org/RadioBroadcastService
 */
var RadioBroadcastService = 'http://schema.org/RadioBroadcastService';
/**
 * RadioChannel
 *
 * A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.
 *
 * http://schema.org/RadioChannel
 */
var RadioChannel = 'http://schema.org/RadioChannel';
/**
 * RadioClip
 *
 * A short radio program or a segment/part of a radio program.
 *
 * http://schema.org/RadioClip
 */
var RadioClip = 'http://schema.org/RadioClip';
/**
 * RadioEpisode
 *
 * A radio episode which can be part of a series or season.
 *
 * http://schema.org/RadioEpisode
 */
var RadioEpisode = 'http://schema.org/RadioEpisode';
/**
 * RadioSeason
 *
 * Season dedicated to radio broadcast and associated online delivery.
 *
 * http://schema.org/RadioSeason
 */
var RadioSeason = 'http://schema.org/RadioSeason';
/**
 * RadioSeries
 *
 * CreativeWorkSeries dedicated to radio broadcast and associated online delivery.
 *
 * http://schema.org/RadioSeries
 */
var RadioSeries = 'http://schema.org/RadioSeries';
/**
 * RadioStation
 *
 * A radio station.
 *
 * http://schema.org/RadioStation
 */
var RadioStation = 'http://schema.org/RadioStation';
/**
 * Rating
 *
 * A rating is an evaluation on a numeric scale, such as 1 to 5 stars.
 *
 * http://schema.org/Rating
 */
var Rating = 'http://schema.org/Rating';
/**
 * ReactAction
 *
 * The act of responding instinctively and emotionally to an object, expressing a sentiment.
 *
 * http://schema.org/ReactAction
 */
var ReactAction = 'http://schema.org/ReactAction';
/**
 * ReadAction
 *
 * The act of consuming written content.
 *
 * http://schema.org/ReadAction
 */
var ReadAction = 'http://schema.org/ReadAction';
/**
 * RealEstateAgent
 *
 * A real-estate agent.
 *
 * http://schema.org/RealEstateAgent
 */
var RealEstateAgent = 'http://schema.org/RealEstateAgent';
/**
 * RealEstateListing
 *
 * A [[RealEstateListing]] is a listing that describes one or more real-estate [[Offer]]s (whose [[businessFunction]] is typically to lease out, or to sell).
 *   The [[RealEstateListing]] type itself represents the overall listing, as manifested in some [[WebPage]].
 *
 *
 * http://schema.org/RealEstateListing
 */
var RealEstateListing = 'http://schema.org/RealEstateListing';
/**
 * ReceiveAction
 *
 * The act of physically/electronically taking delivery of an object that has been transferred from an origin to a destination. Reciprocal of SendAction.\n\nRelated actions:\n\n* [[SendAction]]: The reciprocal of ReceiveAction.\n* [[TakeAction]]: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transferred (e.g. I can receive a package, but it does not mean the package is now mine).
 *
 * http://schema.org/ReceiveAction
 */
var ReceiveAction = 'http://schema.org/ReceiveAction';
/**
 * Recipe
 *
 * A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via [[suitableForDiet]]. The [[keywords]] property can also be used to add more detail.
 *
 * http://schema.org/Recipe
 */
var Recipe = 'http://schema.org/Recipe';
/**
 * Recommendation
 *
 * [[Recommendation]] is a type of [[Review]] that suggests or proposes something as the best option or best course of action. Recommendations may be for products or services, or other concrete things, as in the case of a ranked list or product guide. A [[Guide]] may list multiple recommendations for different categories. For example, in a [[Guide]] about which TVs to buy, the author may have several [[Recommendation]]s.
 *
 * http://schema.org/Recommendation
 */
var Recommendation = 'http://schema.org/Recommendation';
/**
 * RecommendedDoseSchedule
 *
 * A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
 *
 * http://schema.org/RecommendedDoseSchedule
 */
var RecommendedDoseSchedule = 'http://schema.org/RecommendedDoseSchedule';
/**
 * RecyclingCenter
 *
 * A recycling center.
 *
 * http://schema.org/RecyclingCenter
 */
var RecyclingCenter = 'http://schema.org/RecyclingCenter';
/**
 * RefundTypeEnumeration
 *
 * Enumerates several kinds of product return refund types.
 *
 * http://schema.org/RefundTypeEnumeration
 */
var RefundTypeEnumeration = 'http://schema.org/RefundTypeEnumeration';
/**
 * RegisterAction
 *
 * The act of registering to be a user of a service, product or web page.\n\nRelated actions:\n\n* [[JoinAction]]: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, *not* a group/team of people.\n* [[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.\n* [[SubscribeAction]]: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.
 *
 * http://schema.org/RegisterAction
 */
var RegisterAction = 'http://schema.org/RegisterAction';
/**
 * RejectAction
 *
 * The act of rejecting to/adopting an object.\n\nRelated actions:\n\n* [[AcceptAction]]: The antonym of RejectAction.
 *
 * http://schema.org/RejectAction
 */
var RejectAction = 'http://schema.org/RejectAction';
/**
 * RentAction
 *
 * The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.
 *
 * http://schema.org/RentAction
 */
var RentAction = 'http://schema.org/RentAction';
/**
 * RentalCarReservation
 *
 * A reservation for a rental car.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
 *
 * http://schema.org/RentalCarReservation
 */
var RentalCarReservation = 'http://schema.org/RentalCarReservation';
/**
 * RepaymentSpecification
 *
 * A structured value representing repayment.
 *
 * http://schema.org/RepaymentSpecification
 */
var RepaymentSpecification = 'http://schema.org/RepaymentSpecification';
/**
 * ReplaceAction
 *
 * The act of editing a recipient by replacing an old object with a new object.
 *
 * http://schema.org/ReplaceAction
 */
var ReplaceAction = 'http://schema.org/ReplaceAction';
/**
 * ReplyAction
 *
 * The act of responding to a question/message asked/sent by the object. Related to [[AskAction]].\n\nRelated actions:\n\n* [[AskAction]]: Appears generally as an origin of a ReplyAction.
 *
 * http://schema.org/ReplyAction
 */
var ReplyAction = 'http://schema.org/ReplyAction';
/**
 * Report
 *
 * A Report generated by governmental or non-governmental organization.
 *
 * http://schema.org/Report
 */
var Report = 'http://schema.org/Report';
/**
 * ReportageNewsArticle
 *
 * The [[ReportageNewsArticle]] type is a subtype of [[NewsArticle]] representing
 *  news articles which are the result of journalistic news reporting conventions.
 *
 * In practice many news publishers produce a wide variety of article types, many of which might be considered a [[NewsArticle]] but not a [[ReportageNewsArticle]]. For example, opinion pieces, reviews, analysis, sponsored or satirical articles, or articles that combine several of these elements.
 *
 * The [[ReportageNewsArticle]] type is based on a stricter ideal for "news" as a work of journalism, with articles based on factual information either observed or verified by the author, or reported and verified from knowledgeable sources.  This often includes perspectives from multiple viewpoints on a particular issue (distinguishing news reports from public relations or propaganda).  News reports in the [[ReportageNewsArticle]] sense de-emphasize the opinion of the author, with commentary and value judgements typically expressed elsewhere.
 *
 * A [[ReportageNewsArticle]] which goes deeper into analysis can also be marked with an additional type of [[AnalysisNewsArticle]].
 *
 *
 * http://schema.org/ReportageNewsArticle
 */
var ReportageNewsArticle = 'http://schema.org/ReportageNewsArticle';
/**
 * ReportedDoseSchedule
 *
 * A patient-reported or observed dosing schedule for a drug or supplement.
 *
 * http://schema.org/ReportedDoseSchedule
 */
var ReportedDoseSchedule = 'http://schema.org/ReportedDoseSchedule';
/**
 * ResearchOrganization
 *
 * A Research Organization (e.g. scientific institute, research company).
 *
 * http://schema.org/ResearchOrganization
 */
var ResearchOrganization = 'http://schema.org/ResearchOrganization';
/**
 * ResearchProject
 *
 * A Research project.
 *
 * http://schema.org/ResearchProject
 */
var ResearchProject = 'http://schema.org/ResearchProject';
/**
 * Researcher
 *
 * Researchers.
 *
 * http://schema.org/Researcher
 */
var Researcher = 'http://schema.org/Researcher';
/**
 * Reservation
 *
 * Describes a reservation for travel, dining or an event. Some reservations require tickets. \n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use [[Offer]].
 *
 * http://schema.org/Reservation
 */
var Reservation = 'http://schema.org/Reservation';
/**
 * ReservationPackage
 *
 * A group of multiple reservations with common values for all sub-reservations.
 *
 * http://schema.org/ReservationPackage
 */
var ReservationPackage = 'http://schema.org/ReservationPackage';
/**
 * ReservationStatusType
 *
 * Enumerated status values for Reservation.
 *
 * http://schema.org/ReservationStatusType
 */
var ReservationStatusType = 'http://schema.org/ReservationStatusType';
/**
 * ReserveAction
 *
 * Reserving a concrete object.\n\nRelated actions:\n\n* [[ScheduleAction]]: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.
 *
 * http://schema.org/ReserveAction
 */
var ReserveAction = 'http://schema.org/ReserveAction';
/**
 * Reservoir
 *
 * A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.
 *
 * http://schema.org/Reservoir
 */
var Reservoir = 'http://schema.org/Reservoir';
/**
 * Residence
 *
 * The place where a person lives.
 *
 * http://schema.org/Residence
 */
var Residence = 'http://schema.org/Residence';
/**
 * Resort
 *
 * A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishments operated by a single company (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/Resort
 */
var Resort = 'http://schema.org/Resort';
/**
 * Restaurant
 *
 * A restaurant.
 *
 * http://schema.org/Restaurant
 */
var Restaurant = 'http://schema.org/Restaurant';
/**
 * RestrictedDiet
 *
 * A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons.
 *
 * http://schema.org/RestrictedDiet
 */
var RestrictedDiet = 'http://schema.org/RestrictedDiet';
/**
 * ResumeAction
 *
 * The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).
 *
 * http://schema.org/ResumeAction
 */
var ResumeAction = 'http://schema.org/ResumeAction';
/**
 * ReturnAction
 *
 * The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).
 *
 * http://schema.org/ReturnAction
 */
var ReturnAction = 'http://schema.org/ReturnAction';
/**
 * ReturnFeesEnumeration
 *
 * Enumerates several kinds of policies for product return fees.
 *
 * http://schema.org/ReturnFeesEnumeration
 */
var ReturnFeesEnumeration = 'http://schema.org/ReturnFeesEnumeration';
/**
 * ReturnLabelSourceEnumeration
 *
 * Enumerates several types of return labels for product returns.
 *
 * http://schema.org/ReturnLabelSourceEnumeration
 */
var ReturnLabelSourceEnumeration = 'http://schema.org/ReturnLabelSourceEnumeration';
/**
 * ReturnMethodEnumeration
 *
 * Enumerates several types of product return methods.
 *
 * http://schema.org/ReturnMethodEnumeration
 */
var ReturnMethodEnumeration = 'http://schema.org/ReturnMethodEnumeration';
/**
 * Review
 *
 * A review of an item - for example, of a restaurant, movie, or store.
 *
 * http://schema.org/Review
 */
var Review = 'http://schema.org/Review';
/**
 * ReviewAction
 *
 * The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.
 *
 * http://schema.org/ReviewAction
 */
var ReviewAction = 'http://schema.org/ReviewAction';
/**
 * ReviewNewsArticle
 *
 * A [[NewsArticle]] and [[CriticReview]] providing a professional critic's assessment of a service, product, performance, or artistic or literary work.
 *
 * http://schema.org/ReviewNewsArticle
 */
var ReviewNewsArticle = 'http://schema.org/ReviewNewsArticle';
/**
 * RiverBodyOfWater
 *
 * A river (for example, the broad majestic Shannon).
 *
 * http://schema.org/RiverBodyOfWater
 */
var RiverBodyOfWater = 'http://schema.org/RiverBodyOfWater';
/**
 * Role
 *
 * Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.\n\nSee also [blog post](http://blog.schema.org/2014/06/introducing-role.html).
 *
 * http://schema.org/Role
 */
var Role = 'http://schema.org/Role';
/**
 * RoofingContractor
 *
 * A roofing contractor.
 *
 * http://schema.org/RoofingContractor
 */
var RoofingContractor = 'http://schema.org/RoofingContractor';
/**
 * Room
 *
 * A room is a distinguishable space within a structure, usually separated from other spaces by interior walls (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/Room
 */
var Room = 'http://schema.org/Room';
/**
 * RsvpAction
 *
 * The act of notifying an event organizer as to whether you expect to attend the event.
 *
 * http://schema.org/RsvpAction
 */
var RsvpAction = 'http://schema.org/RsvpAction';
/**
 * RsvpResponseType
 *
 * RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.
 *
 * http://schema.org/RsvpResponseType
 */
var RsvpResponseType = 'http://schema.org/RsvpResponseType';
/**
 * SaleEvent
 *
 * Event type: Sales event.
 *
 * http://schema.org/SaleEvent
 */
var SaleEvent = 'http://schema.org/SaleEvent';
/**
 * SatiricalArticle
 *
 * An [[Article]] whose content is primarily [[satirical]](https://en.wikipedia.org/wiki/Satire) in nature, i.e. unlikely to be literally true. A satirical article is sometimes but not necessarily also a [[NewsArticle]]. [[ScholarlyArticle]]s are also sometimes satirized.
 *
 * http://schema.org/SatiricalArticle
 */
var SatiricalArticle = 'http://schema.org/SatiricalArticle';
/**
 * Schedule
 *
 * A schedule defines a repeating time period used to describe a regularly occurring [[Event]]. At a minimum a schedule will specify [[repeatFrequency]] which describes the interval between occurrences of the event. Additional information can be provided to specify the schedule more precisely.
 *       This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also
 *       have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.
 *
 * http://schema.org/Schedule
 */
var Schedule = 'http://schema.org/Schedule';
/**
 * ScheduleAction
 *
 * Scheduling future actions, events, or tasks.\n\nRelated actions:\n\n* [[ReserveAction]]: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.
 *
 * http://schema.org/ScheduleAction
 */
var ScheduleAction = 'http://schema.org/ScheduleAction';
/**
 * ScholarlyArticle
 *
 * A scholarly article.
 *
 * http://schema.org/ScholarlyArticle
 */
var ScholarlyArticle = 'http://schema.org/ScholarlyArticle';
/**
 * School
 *
 * A school.
 *
 * http://schema.org/School
 */
var School = 'http://schema.org/School';
/**
 * SchoolDistrict
 *
 * A School District is an administrative area for the administration of schools.
 *
 * http://schema.org/SchoolDistrict
 */
var SchoolDistrict = 'http://schema.org/SchoolDistrict';
/**
 * ScreeningEvent
 *
 * A screening of a movie or other video.
 *
 * http://schema.org/ScreeningEvent
 */
var ScreeningEvent = 'http://schema.org/ScreeningEvent';
/**
 * Sculpture
 *
 * A piece of sculpture.
 *
 * http://schema.org/Sculpture
 */
var Sculpture = 'http://schema.org/Sculpture';
/**
 * SeaBodyOfWater
 *
 * A sea (for example, the Caspian sea).
 *
 * http://schema.org/SeaBodyOfWater
 */
var SeaBodyOfWater = 'http://schema.org/SeaBodyOfWater';
/**
 * SearchAction
 *
 * The act of searching for an object.\n\nRelated actions:\n\n* [[FindAction]]: SearchAction generally leads to a FindAction, but not necessarily.
 *
 * http://schema.org/SearchAction
 */
var SearchAction = 'http://schema.org/SearchAction';
/**
 * SearchRescueOrganization
 *
 * A Search and Rescue organization of some kind.
 *
 * http://schema.org/SearchRescueOrganization
 */
var SearchRescueOrganization = 'http://schema.org/SearchRescueOrganization';
/**
 * SearchResultsPage
 *
 * Web page type: Search results page.
 *
 * http://schema.org/SearchResultsPage
 */
var SearchResultsPage = 'http://schema.org/SearchResultsPage';
/**
 * Season
 *
 * A media season, e.g. TV, radio, video game etc.
 *
 * http://schema.org/Season
 */
var Season = 'http://schema.org/Season';
/**
 * Seat
 *
 * Used to describe a seat, such as a reserved seat in an event reservation.
 *
 * http://schema.org/Seat
 */
var Seat = 'http://schema.org/Seat';
/**
 * SeekToAction
 *
 * This is the [[Action]] of navigating to a specific [[startOffset]] timestamp within a [[VideoObject]], typically represented with a URL template structure.
 *
 * http://schema.org/SeekToAction
 */
var SeekToAction = 'http://schema.org/SeekToAction';
/**
 * SelfStorage
 *
 * A self-storage facility.
 *
 * http://schema.org/SelfStorage
 */
var SelfStorage = 'http://schema.org/SelfStorage';
/**
 * SellAction
 *
 * The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.
 *
 * http://schema.org/SellAction
 */
var SellAction = 'http://schema.org/SellAction';
/**
 * SendAction
 *
 * The act of physically/electronically dispatching an object for transfer from an origin to a destination. Related actions:\n\n* [[ReceiveAction]]: The reciprocal of SendAction.\n* [[GiveAction]]: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).
 *
 * http://schema.org/SendAction
 */
var SendAction = 'http://schema.org/SendAction';
/**
 * Series
 *
 * A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also [[CreativeWorkSeries]], [[EventSeries]].
 *
 * http://schema.org/Series
 */
var Series = 'http://schema.org/Series';
/**
 * Service
 *
 * A service provided by an organization, e.g. delivery service, print services, etc.
 *
 * http://schema.org/Service
 */
var Service = 'http://schema.org/Service';
/**
 * ServiceChannel
 *
 * A means for accessing a service, e.g. a government office location, web site, or phone number.
 *
 * http://schema.org/ServiceChannel
 */
var ServiceChannel = 'http://schema.org/ServiceChannel';
/**
 * ShareAction
 *
 * The act of distributing content to people for their amusement or edification.
 *
 * http://schema.org/ShareAction
 */
var ShareAction = 'http://schema.org/ShareAction';
/**
 * SheetMusic
 *
 * Printed music, as opposed to performed or recorded music.
 *
 * http://schema.org/SheetMusic
 */
var SheetMusic = 'http://schema.org/SheetMusic';
/**
 * ShippingDeliveryTime
 *
 * ShippingDeliveryTime provides various pieces of information about delivery times for shipping.
 *
 * http://schema.org/ShippingDeliveryTime
 */
var ShippingDeliveryTime = 'http://schema.org/ShippingDeliveryTime';
/**
 * ShippingRateSettings
 *
 * A ShippingRateSettings represents re-usable pieces of shipping information. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of an [[OfferShippingDetails]]. Several occurrences can be published, distinguished and matched (i.e. identified/referenced) by their different values for [[shippingLabel]].
 *
 * http://schema.org/ShippingRateSettings
 */
var ShippingRateSettings = 'http://schema.org/ShippingRateSettings';
/**
 * ShoeStore
 *
 * A shoe store.
 *
 * http://schema.org/ShoeStore
 */
var ShoeStore = 'http://schema.org/ShoeStore';
/**
 * ShoppingCenter
 *
 * A shopping center or mall.
 *
 * http://schema.org/ShoppingCenter
 */
var ShoppingCenter = 'http://schema.org/ShoppingCenter';
/**
 * ShortStory
 *
 * Short story or tale. A brief work of literature, usually written in narrative prose.
 *
 * http://schema.org/ShortStory
 */
var ShortStory = 'http://schema.org/ShortStory';
/**
 * SingleFamilyResidence
 *
 * Residence type: Single-family home.
 *
 * http://schema.org/SingleFamilyResidence
 */
var SingleFamilyResidence = 'http://schema.org/SingleFamilyResidence';
/**
 * SiteNavigationElement
 *
 * A navigation element of the page.
 *
 * http://schema.org/SiteNavigationElement
 */
var SiteNavigationElement = 'http://schema.org/SiteNavigationElement';
/**
 * SizeGroupEnumeration
 *
 * Enumerates common size groups for various product categories.
 *
 * http://schema.org/SizeGroupEnumeration
 */
var SizeGroupEnumeration = 'http://schema.org/SizeGroupEnumeration';
/**
 * SizeSpecification
 *
 * Size related properties of a product, typically a size code ([[name]]) and optionally a [[sizeSystem]], [[sizeGroup]], and product measurements ([[hasMeasurement]]). In addition, the intended audience can be defined through [[suggestedAge]], [[suggestedGender]], and suggested body measurements ([[suggestedMeasurement]]).
 *
 * http://schema.org/SizeSpecification
 */
var SizeSpecification = 'http://schema.org/SizeSpecification';
/**
 * SizeSystemEnumeration
 *
 * Enumerates common size systems for different categories of products, for example "EN-13402" or "UK" for wearables or "Imperial" for screws.
 *
 * http://schema.org/SizeSystemEnumeration
 */
var SizeSystemEnumeration = 'http://schema.org/SizeSystemEnumeration';
/**
 * SkiResort
 *
 * A ski resort.
 *
 * http://schema.org/SkiResort
 */
var SkiResort = 'http://schema.org/SkiResort';
/**
 * SocialEvent
 *
 * Event type: Social event.
 *
 * http://schema.org/SocialEvent
 */
var SocialEvent = 'http://schema.org/SocialEvent';
/**
 * SocialMediaPosting
 *
 * A post to a social media platform, including blog posts, tweets, Facebook posts, etc.
 *
 * http://schema.org/SocialMediaPosting
 */
var SocialMediaPosting = 'http://schema.org/SocialMediaPosting';
/**
 * SoftwareApplication
 *
 * A software application.
 *
 * http://schema.org/SoftwareApplication
 */
var SoftwareApplication = 'http://schema.org/SoftwareApplication';
/**
 * SoftwareSourceCode
 *
 * Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
 *
 * http://schema.org/SoftwareSourceCode
 */
var SoftwareSourceCode = 'http://schema.org/SoftwareSourceCode';
/**
 * SolveMathAction
 *
 * The action that takes in a math expression and directs users to a page potentially capable of solving/simplifying that expression.
 *
 * http://schema.org/SolveMathAction
 */
var SolveMathAction = 'http://schema.org/SolveMathAction';
/**
 * SomeProducts
 *
 * A placeholder for multiple similar products of the same kind.
 *
 * http://schema.org/SomeProducts
 */
var SomeProducts = 'http://schema.org/SomeProducts';
/**
 * SpeakableSpecification
 *
 * A SpeakableSpecification indicates (typically via [[xpath]] or [[cssSelector]]) sections of a document that are highlighted as particularly [[speakable]]. Instances of this type are expected to be used primarily as values of the [[speakable]] property.
 *
 * http://schema.org/SpeakableSpecification
 */
var SpeakableSpecification = 'http://schema.org/SpeakableSpecification';
/**
 * SpecialAnnouncement
 *
 * A SpecialAnnouncement combines a simple date-stamped textual information update
 *       with contextualized Web links and other structured data.  It represents an information update made by a
 *       locally-oriented organization, for example schools, pharmacies, healthcare providers,  community groups, police,
 *       local government.
 *
 * For work in progress guidelines on Coronavirus-related markup see [this doc](https://docs.google.com/document/d/14ikaGCKxo50rRM7nvKSlbUpjyIk2WMQd3IkB1lItlrM/edit#).
 *
 * The motivating scenario for SpecialAnnouncement is the [Coronavirus pandemic](https://en.wikipedia.org/wiki/2019%E2%80%9320_coronavirus_pandemic), and the initial vocabulary is oriented to this urgent situation. Schema.org
 * expect to improve the markup iteratively as it is deployed and as feedback emerges from use. In addition to our
 * usual [Github entry](https://github.com/schemaorg/schemaorg/issues/2490), feedback comments can also be provided in [this document](https://docs.google.com/document/d/1fpdFFxk8s87CWwACs53SGkYv3aafSxz_DTtOQxMrBJQ/edit#).
 *
 *
 * While this schema is designed to communicate urgent crisis-related information, it is not the same as an emergency warning technology like [CAP](https://en.wikipedia.org/wiki/Common_Alerting_Protocol), although there may be overlaps. The intent is to cover
 * the kinds of everyday practical information being posted to existing websites during an emergency situation.
 *
 * Several kinds of information can be provided:
 *
 * We encourage the provision of "name", "text", "datePosted", "expires" (if appropriate), "category" and
 * "url" as a simple baseline. It is important to provide a value for "category" where possible, most ideally as a well known
 * URL from Wikipedia or Wikidata. In the case of the 2019-2020 Coronavirus pandemic, this should be "https://en.wikipedia.org/w/index.php?title=2019-20\_coronavirus\_pandemic" or "https://www.wikidata.org/wiki/Q81068910".
 *
 * For many of the possible properties, values can either be simple links or an inline description, depending on whether a summary is available. For a link, provide just the URL of the appropriate page as the property's value. For an inline description, use a [[WebContent]] type, and provide the url as a property of that, alongside at least a simple "[[text]]" summary of the page. It is
 * unlikely that a single SpecialAnnouncement will need all of the possible properties simultaneously.
 *
 * We expect that in many cases the page referenced might contain more specialized structured data, e.g. contact info, [[openingHours]], [[Event]], [[FAQPage]] etc. By linking to those pages from a [[SpecialAnnouncement]] you can help make it clearer that the events are related to the situation (e.g. Coronavirus) indicated by the [[category]] property of the [[SpecialAnnouncement]].
 *
 * Many [[SpecialAnnouncement]]s will relate to particular regions and to identifiable local organizations. Use [[spatialCoverage]] for the region, and [[announcementLocation]] to indicate specific [[LocalBusiness]]es and [[CivicStructure]]s. If the announcement affects both a particular region and a specific location (for example, a library closure that serves an entire region), use both [[spatialCoverage]] and [[announcementLocation]].
 *
 * The [[about]] property can be used to indicate entities that are the focus of the announcement. We now recommend using [[about]] only
 * for representing non-location entities (e.g. a [[Course]] or a [[RadioStation]]). For places, use [[announcementLocation]] and [[spatialCoverage]]. Consumers of this markup should be aware that the initial design encouraged the use of [[about]] for locations too.
 *
 * The basic content of [[SpecialAnnouncement]] is similar to that of an [RSS](https://en.wikipedia.org/wiki/RSS) or [Atom](https://en.wikipedia.org/wiki/Atom_(Web_standard)) feed. For publishers without such feeds, basic feed-like information can be shared by posting
 * [[SpecialAnnouncement]] updates in a page, e.g. using JSON-LD. For sites with Atom/RSS functionality, you can point to a feed
 * with the [[webFeed]] property. This can be a simple URL, or an inline [[DataFeed]] object, with [[encodingFormat]] providing
 * media type information, e.g. "application/rss+xml" or "application/atom+xml".
 *
 *
 * http://schema.org/SpecialAnnouncement
 */
var SpecialAnnouncement = 'http://schema.org/SpecialAnnouncement';
/**
 * Specialty
 *
 * Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.
 *
 * http://schema.org/Specialty
 */
var Specialty = 'http://schema.org/Specialty';
/**
 * SportingGoodsStore
 *
 * A sporting goods store.
 *
 * http://schema.org/SportingGoodsStore
 */
var SportingGoodsStore = 'http://schema.org/SportingGoodsStore';
/**
 * SportsActivityLocation
 *
 * A sports location, such as a playing field.
 *
 * http://schema.org/SportsActivityLocation
 */
var SportsActivityLocation = 'http://schema.org/SportsActivityLocation';
/**
 * SportsClub
 *
 * A sports club.
 *
 * http://schema.org/SportsClub
 */
var SportsClub = 'http://schema.org/SportsClub';
/**
 * SportsEvent
 *
 * Event type: Sports event.
 *
 * http://schema.org/SportsEvent
 */
var SportsEvent = 'http://schema.org/SportsEvent';
/**
 * SportsOrganization
 *
 * Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.
 *
 * http://schema.org/SportsOrganization
 */
var SportsOrganization = 'http://schema.org/SportsOrganization';
/**
 * SportsTeam
 *
 * Organization: Sports team.
 *
 * http://schema.org/SportsTeam
 */
var SportsTeam = 'http://schema.org/SportsTeam';
/**
 * SpreadsheetDigitalDocument
 *
 * A spreadsheet file.
 *
 * http://schema.org/SpreadsheetDigitalDocument
 */
var SpreadsheetDigitalDocument = 'http://schema.org/SpreadsheetDigitalDocument';
/**
 * StadiumOrArena
 *
 * A stadium.
 *
 * http://schema.org/StadiumOrArena
 */
var StadiumOrArena = 'http://schema.org/StadiumOrArena';
/**
 * State
 *
 * A state or province of a country.
 *
 * http://schema.org/State
 */
var State = 'http://schema.org/State';
/**
 * Statement
 *
 * A statement about something, for example a fun or interesting fact. If known, the main entity this statement is about can be indicated using mainEntity. For more formal claims (e.g. in Fact Checking), consider using [[Claim]] instead. Use the [[text]] property to capture the text of the statement.
 *
 * http://schema.org/Statement
 */
var Statement = 'http://schema.org/Statement';
/**
 * StatisticalPopulation
 *
 * A StatisticalPopulation is a set of instances of a certain given type that satisfy some set of constraints. The property [[populationType]] is used to specify the type. Any property that can be used on instances of that type can appear on the statistical population. For example, a [[StatisticalPopulation]] representing all [[Person]]s with a [[homeLocation]] of East Podunk California would be described by applying the appropriate [[homeLocation]] and [[populationType]] properties to a [[StatisticalPopulation]] item that stands for that set of people.
 * The properties [[numConstraints]] and [[constraintProperty]] are used to specify which of the populations properties are used to specify the population. Note that the sense of "population" used here is the general sense of a statistical
 * population, and does not imply that the population consists of people. For example, a [[populationType]] of [[Event]] or [[NewsArticle]] could be used. See also [[Observation]], where a [[populationType]] such as [[Person]] or [[Event]] can be indicated directly. In most cases it may be better to use [[StatisticalVariable]] instead of [[StatisticalPopulation]].
 *
 * http://schema.org/StatisticalPopulation
 */
var StatisticalPopulation = 'http://schema.org/StatisticalPopulation';
/**
 * StatisticalVariable
 *
 * [[StatisticalVariable]] represents any type of statistical metric that can be measured at a place and time. The usage pattern for [[StatisticalVariable]] is typically expressed using [[Observation]] with an explicit [[populationType]], which is a type, typically drawn from Schema.org. Each [[StatisticalVariable]] is marked as a [[ConstraintNode]], meaning that some properties (those listed using [[constraintProperty]]) serve in this setting solely to define the statistical variable rather than literally describe a specific person, place or thing. For example, a [[StatisticalVariable]] Median_Height_Person_Female representing the median height of women, could be written as follows: the population type is [[Person]]; the measuredProperty [[height]]; the [[statType]] [[median]]; the [[gender]] [[Female]]. It is important to note that there are many kinds of scientific quantitative observation which are not fully, perfectly or unambiguously described following this pattern, or with solely Schema.org terminology. The approach taken here is designed to allow partial, incremental or minimal description of [[StatisticalVariable]]s, and the use of detailed sets of entity and property IDs from external repositories. The [[measurementMethod]], [[unitCode]] and [[unitText]] properties can also be used to clarify the specific nature and notation of an observed measurement.
 *
 * http://schema.org/StatisticalVariable
 */
var StatisticalVariable = 'http://schema.org/StatisticalVariable';
/**
 * StatusEnumeration
 *
 * Lists or enumerations dealing with status types.
 *
 * http://schema.org/StatusEnumeration
 */
var StatusEnumeration = 'http://schema.org/StatusEnumeration';
/**
 * SteeringPositionValue
 *
 * A value indicating a steering position.
 *
 * http://schema.org/SteeringPositionValue
 */
var SteeringPositionValue = 'http://schema.org/SteeringPositionValue';
/**
 * Store
 *
 * A retail good store.
 *
 * http://schema.org/Store
 */
var Store = 'http://schema.org/Store';
/**
 * StructuredValue
 *
 * Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.
 *
 * http://schema.org/StructuredValue
 */
var StructuredValue = 'http://schema.org/StructuredValue';
/**
 * StupidType
 *
 * A StupidType for testing.
 *
 * http://schema.org/StupidType
 */
var StupidType = 'http://schema.org/StupidType';
/**
 * SubscribeAction
 *
 * The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.\n\nRelated actions:\n\n* [[FollowAction]]: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.\n* [[RegisterAction]]: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.\n* [[JoinAction]]: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.
 *
 * http://schema.org/SubscribeAction
 */
var SubscribeAction = 'http://schema.org/SubscribeAction';
/**
 * Substance
 *
 * Any matter of defined composition that has discrete existence, whose origin may be biological, mineral or chemical.
 *
 * http://schema.org/Substance
 */
var Substance = 'http://schema.org/Substance';
/**
 * SubwayStation
 *
 * A subway station.
 *
 * http://schema.org/SubwayStation
 */
var SubwayStation = 'http://schema.org/SubwayStation';
/**
 * Suite
 *
 * A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
 * <br /><br />
 * See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
 *
 *
 * http://schema.org/Suite
 */
var Suite = 'http://schema.org/Suite';
/**
 * SuperficialAnatomy
 *
 * Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).
 *
 * http://schema.org/SuperficialAnatomy
 */
var SuperficialAnatomy = 'http://schema.org/SuperficialAnatomy';
/**
 * SurgicalProcedure
 *
 * A medical procedure involving an incision with instruments; performed for diagnose, or therapeutic purposes.
 *
 * http://schema.org/SurgicalProcedure
 */
var SurgicalProcedure = 'http://schema.org/SurgicalProcedure';
/**
 * SuspendAction
 *
 * The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).
 *
 * http://schema.org/SuspendAction
 */
var SuspendAction = 'http://schema.org/SuspendAction';
/**
 * Syllabus
 *
 * A syllabus that describes the material covered in a course, often with several such sections per [[Course]] so that a distinct [[timeRequired]] can be provided for that section of the [[Course]].
 *
 * http://schema.org/Syllabus
 */
var Syllabus = 'http://schema.org/Syllabus';
/**
 * Synagogue
 *
 * A synagogue.
 *
 * http://schema.org/Synagogue
 */
var Synagogue = 'http://schema.org/Synagogue';
/**
 * TVClip
 *
 * A short TV program or a segment/part of a TV program.
 *
 * http://schema.org/TVClip
 */
var TVClip = 'http://schema.org/TVClip';
/**
 * TVEpisode
 *
 * A TV episode which can be part of a series or season.
 *
 * http://schema.org/TVEpisode
 */
var TVEpisode = 'http://schema.org/TVEpisode';
/**
 * TVSeason
 *
 * Season dedicated to TV broadcast and associated online delivery.
 *
 * http://schema.org/TVSeason
 */
var TVSeason = 'http://schema.org/TVSeason';
/**
 * TVSeries
 *
 * CreativeWorkSeries dedicated to TV broadcast and associated online delivery.
 *
 * http://schema.org/TVSeries
 */
var TVSeries = 'http://schema.org/TVSeries';
/**
 * Table
 *
 * A table on a Web page.
 *
 * http://schema.org/Table
 */
var Table = 'http://schema.org/Table';
/**
 * TakeAction
 *
 * The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.\n\nRelated actions:\n\n* [[GiveAction]]: The reciprocal of TakeAction.\n* [[ReceiveAction]]: Unlike ReceiveAction, TakeAction implies that ownership has been transferred.
 *
 * http://schema.org/TakeAction
 */
var TakeAction = 'http://schema.org/TakeAction';
/**
 * TattooParlor
 *
 * A tattoo parlor.
 *
 * http://schema.org/TattooParlor
 */
var TattooParlor = 'http://schema.org/TattooParlor';
/**
 * Taxi
 *
 * A taxi.
 *
 * http://schema.org/Taxi
 */
var Taxi = 'http://schema.org/Taxi';
/**
 * TaxiReservation
 *
 * A reservation for a taxi.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].
 *
 * http://schema.org/TaxiReservation
 */
var TaxiReservation = 'http://schema.org/TaxiReservation';
/**
 * TaxiService
 *
 * A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.
 *
 * http://schema.org/TaxiService
 */
var TaxiService = 'http://schema.org/TaxiService';
/**
 * TaxiStand
 *
 * A taxi stand.
 *
 * http://schema.org/TaxiStand
 */
var TaxiStand = 'http://schema.org/TaxiStand';
/**
 * Taxon
 *
 * A set of organisms asserted to represent a natural cohesive biological unit.
 *
 * http://schema.org/Taxon
 */
var Taxon = 'http://schema.org/Taxon';
/**
 * TechArticle
 *
 * A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.
 *
 * http://schema.org/TechArticle
 */
var TechArticle = 'http://schema.org/TechArticle';
/**
 * TelevisionChannel
 *
 * A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.
 *
 * http://schema.org/TelevisionChannel
 */
var TelevisionChannel = 'http://schema.org/TelevisionChannel';
/**
 * TelevisionStation
 *
 * A television station.
 *
 * http://schema.org/TelevisionStation
 */
var TelevisionStation = 'http://schema.org/TelevisionStation';
/**
 * TennisComplex
 *
 * A tennis complex.
 *
 * http://schema.org/TennisComplex
 */
var TennisComplex = 'http://schema.org/TennisComplex';
/**
 * Text
 *
 * Data type: Text.
 *
 * http://schema.org/Text
 */
var Text = 'http://schema.org/Text';
/**
 * TextDigitalDocument
 *
 * A file composed primarily of text.
 *
 * http://schema.org/TextDigitalDocument
 */
var TextDigitalDocument = 'http://schema.org/TextDigitalDocument';
/**
 * TextObject
 *
 * A text file. The text can be unformatted or contain markup, html, etc.
 *
 * http://schema.org/TextObject
 */
var TextObject = 'http://schema.org/TextObject';
/**
 * TheaterEvent
 *
 * Event type: Theater performance.
 *
 * http://schema.org/TheaterEvent
 */
var TheaterEvent = 'http://schema.org/TheaterEvent';
/**
 * TheaterGroup
 *
 * A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.
 *
 * http://schema.org/TheaterGroup
 */
var TheaterGroup = 'http://schema.org/TheaterGroup';
/**
 * TherapeuticProcedure
 *
 * A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.
 *
 * http://schema.org/TherapeuticProcedure
 */
var TherapeuticProcedure = 'http://schema.org/TherapeuticProcedure';
/**
 * Thesis
 *
 * A thesis or dissertation document submitted in support of candidature for an academic degree or professional qualification.
 *
 * http://schema.org/Thesis
 */
var Thesis = 'http://schema.org/Thesis';
/**
 * Thing
 *
 * The most generic type of item.
 *
 * http://schema.org/Thing
 */
var Thing = 'http://schema.org/Thing';
/**
 * Ticket
 *
 * Used to describe a ticket to an event, a flight, a bus ride, etc.
 *
 * http://schema.org/Ticket
 */
var Ticket = 'http://schema.org/Ticket';
/**
 * TieAction
 *
 * The act of reaching a draw in a competitive activity.
 *
 * http://schema.org/TieAction
 */
var TieAction = 'http://schema.org/TieAction';
/**
 * Time
 *
 * A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see [XML schema for details](http://www.w3.org/TR/xmlschema-2/#time)).
 *
 * http://schema.org/Time
 */
var Time = 'http://schema.org/Time';
/**
 * TipAction
 *
 * The act of giving money voluntarily to a beneficiary in recognition of services rendered.
 *
 * http://schema.org/TipAction
 */
var TipAction = 'http://schema.org/TipAction';
/**
 * TireShop
 *
 * A tire shop.
 *
 * http://schema.org/TireShop
 */
var TireShop = 'http://schema.org/TireShop';
/**
 * TouristAttraction
 *
 * A tourist attraction.  In principle any Thing can be a [[TouristAttraction]], from a [[Mountain]] and [[LandmarksOrHistoricalBuildings]] to a [[LocalBusiness]].  This Type can be used on its own to describe a general [[TouristAttraction]], or be used as an [[additionalType]] to add tourist attraction properties to any other type.  (See examples below)
 *
 * http://schema.org/TouristAttraction
 */
var TouristAttraction = 'http://schema.org/TouristAttraction';
/**
 * TouristDestination
 *
 * A tourist destination. In principle any [[Place]] can be a [[TouristDestination]] from a [[City]], Region or [[Country]] to an [[AmusementPark]] or [[Hotel]]. This Type can be used on its own to describe a general [[TouristDestination]], or be used as an [[additionalType]] to add tourist relevant properties to any other [[Place]].  A [[TouristDestination]] is defined as a [[Place]] that contains, or is colocated with, one or more [[TouristAttraction]]s, often linked by a similar theme or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines Destination (main destination of a tourism trip) as the place visited that is central to the decision to take the trip.
 *   (See examples below.)
 *
 * http://schema.org/TouristDestination
 */
var TouristDestination = 'http://schema.org/TouristDestination';
/**
 * TouristInformationCenter
 *
 * A tourist information center.
 *
 * http://schema.org/TouristInformationCenter
 */
var TouristInformationCenter = 'http://schema.org/TouristInformationCenter';
/**
 * TouristTrip
 *
 * A tourist trip. A created itinerary of visits to one or more places of interest ([[TouristAttraction]]/[[TouristDestination]]) often linked by a similar theme, geographic area, or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines tourism trip as the Trip taken by visitors.
 *   (See examples below.)
 *
 * http://schema.org/TouristTrip
 */
var TouristTrip = 'http://schema.org/TouristTrip';
/**
 * ToyStore
 *
 * A toy store.
 *
 * http://schema.org/ToyStore
 */
var ToyStore = 'http://schema.org/ToyStore';
/**
 * TrackAction
 *
 * An agent tracks an object for updates.\n\nRelated actions:\n\n* [[FollowAction]]: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.\n* [[SubscribeAction]]: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.
 *
 * http://schema.org/TrackAction
 */
var TrackAction = 'http://schema.org/TrackAction';
/**
 * TradeAction
 *
 * The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.
 *
 * http://schema.org/TradeAction
 */
var TradeAction = 'http://schema.org/TradeAction';
/**
 * TrainReservation
 *
 * A reservation for train travel.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].
 *
 * http://schema.org/TrainReservation
 */
var TrainReservation = 'http://schema.org/TrainReservation';
/**
 * TrainStation
 *
 * A train station.
 *
 * http://schema.org/TrainStation
 */
var TrainStation = 'http://schema.org/TrainStation';
/**
 * TrainTrip
 *
 * A trip on a commercial train line.
 *
 * http://schema.org/TrainTrip
 */
var TrainTrip = 'http://schema.org/TrainTrip';
/**
 * TransferAction
 *
 * The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.
 *
 * http://schema.org/TransferAction
 */
var TransferAction = 'http://schema.org/TransferAction';
/**
 * TravelAction
 *
 * The act of traveling from a fromLocation to a destination by a specified mode of transport, optionally with participants.
 *
 * http://schema.org/TravelAction
 */
var TravelAction = 'http://schema.org/TravelAction';
/**
 * TravelAgency
 *
 * A travel agency.
 *
 * http://schema.org/TravelAgency
 */
var TravelAgency = 'http://schema.org/TravelAgency';
/**
 * TreatmentIndication
 *
 * An indication for treating an underlying condition, symptom, etc.
 *
 * http://schema.org/TreatmentIndication
 */
var TreatmentIndication = 'http://schema.org/TreatmentIndication';
/**
 * Trip
 *
 * A trip or journey. An itinerary of visits to one or more places.
 *
 * http://schema.org/Trip
 */
var Trip = 'http://schema.org/Trip';
/**
 * TypeAndQuantityNode
 *
 * A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.
 *
 * http://schema.org/TypeAndQuantityNode
 */
var TypeAndQuantityNode = 'http://schema.org/TypeAndQuantityNode';
/**
 * UKNonprofitType
 *
 * UKNonprofitType: Non-profit organization type originating from the United Kingdom.
 *
 * http://schema.org/UKNonprofitType
 */
var UKNonprofitType = 'http://schema.org/UKNonprofitType';
/**
 * URL
 *
 * Data type: URL.
 *
 * http://schema.org/URL
 */
var URL = 'http://schema.org/URL';
/**
 * USNonprofitType
 *
 * USNonprofitType: Non-profit organization type originating from the United States.
 *
 * http://schema.org/USNonprofitType
 */
var USNonprofitType = 'http://schema.org/USNonprofitType';
/**
 * UnRegisterAction
 *
 * The act of un-registering from a service.\n\nRelated actions:\n\n* [[RegisterAction]]: antonym of UnRegisterAction.\n* [[LeaveAction]]: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you were previously registered, rather than leaving a team/group of people.
 *
 * http://schema.org/UnRegisterAction
 */
var UnRegisterAction = 'http://schema.org/UnRegisterAction';
/**
 * UnitPriceSpecification
 *
 * The price asked for a given offer by the respective organization or person.
 *
 * http://schema.org/UnitPriceSpecification
 */
var UnitPriceSpecification = 'http://schema.org/UnitPriceSpecification';
/**
 * UpdateAction
 *
 * The act of managing by changing/editing the state of the object.
 *
 * http://schema.org/UpdateAction
 */
var UpdateAction = 'http://schema.org/UpdateAction';
/**
 * UseAction
 *
 * The act of applying an object to its intended purpose.
 *
 * http://schema.org/UseAction
 */
var UseAction = 'http://schema.org/UseAction';
/**
 * UserBlocks
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserBlocks
 */
var UserBlocks = 'http://schema.org/UserBlocks';
/**
 * UserCheckins
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserCheckins
 */
var UserCheckins = 'http://schema.org/UserCheckins';
/**
 * UserComments
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserComments
 */
var UserComments = 'http://schema.org/UserComments';
/**
 * UserDownloads
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserDownloads
 */
var UserDownloads = 'http://schema.org/UserDownloads';
/**
 * UserInteraction
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserInteraction
 */
var UserInteraction = 'http://schema.org/UserInteraction';
/**
 * UserLikes
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserLikes
 */
var UserLikes = 'http://schema.org/UserLikes';
/**
 * UserPageVisits
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserPageVisits
 */
var UserPageVisits = 'http://schema.org/UserPageVisits';
/**
 * UserPlays
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserPlays
 */
var UserPlays = 'http://schema.org/UserPlays';
/**
 * UserPlusOnes
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserPlusOnes
 */
var UserPlusOnes = 'http://schema.org/UserPlusOnes';
/**
 * UserReview
 *
 * A review created by an end-user (e.g. consumer, purchaser, attendee etc.), in contrast with [[CriticReview]].
 *
 * http://schema.org/UserReview
 */
var UserReview = 'http://schema.org/UserReview';
/**
 * UserTweets
 *
 * UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].
 *
 * http://schema.org/UserTweets
 */
var UserTweets = 'http://schema.org/UserTweets';
/**
 * VacationRental
 *
 * A kind of lodging business that focuses on renting single properties for limited time.
 *
 * http://schema.org/VacationRental
 */
var VacationRental = 'http://schema.org/VacationRental';
/**
 * Vehicle
 *
 * A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.
 *
 * http://schema.org/Vehicle
 */
var Vehicle = 'http://schema.org/Vehicle';
/**
 * Vein
 *
 * A type of blood vessel that specifically carries blood to the heart.
 *
 * http://schema.org/Vein
 */
var Vein = 'http://schema.org/Vein';
/**
 * Vessel
 *
 * A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.
 *
 * http://schema.org/Vessel
 */
var Vessel = 'http://schema.org/Vessel';
/**
 * VeterinaryCare
 *
 * A vet's office.
 *
 * http://schema.org/VeterinaryCare
 */
var VeterinaryCare = 'http://schema.org/VeterinaryCare';
/**
 * VideoGallery
 *
 * Web page type: Video gallery page.
 *
 * http://schema.org/VideoGallery
 */
var VideoGallery = 'http://schema.org/VideoGallery';
/**
 * VideoGame
 *
 * A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.
 *
 * http://schema.org/VideoGame
 */
var VideoGame = 'http://schema.org/VideoGame';
/**
 * VideoGameClip
 *
 * A short segment/part of a video game.
 *
 * http://schema.org/VideoGameClip
 */
var VideoGameClip = 'http://schema.org/VideoGameClip';
/**
 * VideoGameSeries
 *
 * A video game series.
 *
 * http://schema.org/VideoGameSeries
 */
var VideoGameSeries = 'http://schema.org/VideoGameSeries';
/**
 * VideoObject
 *
 * A video file.
 *
 * http://schema.org/VideoObject
 */
var VideoObject = 'http://schema.org/VideoObject';
/**
 * VideoObjectSnapshot
 *
 * A specific and exact (byte-for-byte) version of a [[VideoObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.
 *
 * http://schema.org/VideoObjectSnapshot
 */
var VideoObjectSnapshot = 'http://schema.org/VideoObjectSnapshot';
/**
 * ViewAction
 *
 * The act of consuming static visual content.
 *
 * http://schema.org/ViewAction
 */
var ViewAction = 'http://schema.org/ViewAction';
/**
 * VirtualLocation
 *
 * An online or virtual location for attending events. For example, one may attend an online seminar or educational event. While a virtual location may be used as the location of an event, virtual locations should not be confused with physical locations in the real world.
 *
 * http://schema.org/VirtualLocation
 */
var VirtualLocation = 'http://schema.org/VirtualLocation';
/**
 * VisualArtsEvent
 *
 * Event type: Visual arts event.
 *
 * http://schema.org/VisualArtsEvent
 */
var VisualArtsEvent = 'http://schema.org/VisualArtsEvent';
/**
 * VisualArtwork
 *
 * A work of art that is primarily visual in character.
 *
 * http://schema.org/VisualArtwork
 */
var VisualArtwork = 'http://schema.org/VisualArtwork';
/**
 * VitalSign
 *
 * Vital signs are measures of various physiological functions in order to assess the most basic body functions.
 *
 * http://schema.org/VitalSign
 */
var VitalSign = 'http://schema.org/VitalSign';
/**
 * Volcano
 *
 * A volcano, like Fujisan.
 *
 * http://schema.org/Volcano
 */
var Volcano = 'http://schema.org/Volcano';
/**
 * VoteAction
 *
 * The act of expressing a preference from a fixed/finite/structured set of choices/options.
 *
 * http://schema.org/VoteAction
 */
var VoteAction = 'http://schema.org/VoteAction';
/**
 * WPAdBlock
 *
 * An advertising section of the page.
 *
 * http://schema.org/WPAdBlock
 */
var WPAdBlock = 'http://schema.org/WPAdBlock';
/**
 * WPFooter
 *
 * The footer section of the page.
 *
 * http://schema.org/WPFooter
 */
var WPFooter = 'http://schema.org/WPFooter';
/**
 * WPHeader
 *
 * The header section of the page.
 *
 * http://schema.org/WPHeader
 */
var WPHeader = 'http://schema.org/WPHeader';
/**
 * WPSideBar
 *
 * A sidebar section of the page.
 *
 * http://schema.org/WPSideBar
 */
var WPSideBar = 'http://schema.org/WPSideBar';
/**
 * WantAction
 *
 * The act of expressing a desire about the object. An agent wants an object.
 *
 * http://schema.org/WantAction
 */
var WantAction = 'http://schema.org/WantAction';
/**
 * WarrantyPromise
 *
 * A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.
 *
 * http://schema.org/WarrantyPromise
 */
var WarrantyPromise = 'http://schema.org/WarrantyPromise';
/**
 * WarrantyScope
 *
 * A range of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.\n\nCommonly used values:\n\n* http://purl.org/goodrelations/v1#Labor-BringIn\n* http://purl.org/goodrelations/v1#PartsAndLabor-BringIn\n* http://purl.org/goodrelations/v1#PartsAndLabor-PickUp
 *
 *
 * http://schema.org/WarrantyScope
 */
var WarrantyScope = 'http://schema.org/WarrantyScope';
/**
 * WatchAction
 *
 * The act of consuming dynamic/moving visual content.
 *
 * http://schema.org/WatchAction
 */
var WatchAction = 'http://schema.org/WatchAction';
/**
 * Waterfall
 *
 * A waterfall, like Niagara.
 *
 * http://schema.org/Waterfall
 */
var Waterfall = 'http://schema.org/Waterfall';
/**
 * WearAction
 *
 * The act of dressing oneself in clothing.
 *
 * http://schema.org/WearAction
 */
var WearAction = 'http://schema.org/WearAction';
/**
 * WearableMeasurementTypeEnumeration
 *
 * Enumerates common types of measurement for wearables products.
 *
 * http://schema.org/WearableMeasurementTypeEnumeration
 */
var WearableMeasurementTypeEnumeration = 'http://schema.org/WearableMeasurementTypeEnumeration';
/**
 * WearableSizeGroupEnumeration
 *
 * Enumerates common size groups (also known as "size types") for wearable products.
 *
 * http://schema.org/WearableSizeGroupEnumeration
 */
var WearableSizeGroupEnumeration = 'http://schema.org/WearableSizeGroupEnumeration';
/**
 * WearableSizeSystemEnumeration
 *
 * Enumerates common size systems specific for wearable products
 *
 * http://schema.org/WearableSizeSystemEnumeration
 */
var WearableSizeSystemEnumeration = 'http://schema.org/WearableSizeSystemEnumeration';
/**
 * WebAPI
 *
 * An application programming interface accessible over Web/Internet technologies.
 *
 * http://schema.org/WebAPI
 */
var WebAPI = 'http://schema.org/WebAPI';
/**
 * WebApplication
 *
 * Web applications.
 *
 * http://schema.org/WebApplication
 */
var WebApplication = 'http://schema.org/WebApplication';
/**
 * WebContent
 *
 * WebContent is a type representing all [[WebPage]], [[WebSite]] and [[WebPageElement]] content. It is sometimes the case that detailed distinctions between Web pages, sites and their parts are not always important or obvious. The  [[WebContent]] type makes it easier to describe Web-addressable content without requiring such distinctions to always be stated. (The intent is that the existing types [[WebPage]], [[WebSite]] and [[WebPageElement]] will eventually be declared as subtypes of [[WebContent]].)
 *
 * http://schema.org/WebContent
 */
var WebContent = 'http://schema.org/WebContent';
/**
 * WebPage
 *
 * A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.
 *
 * http://schema.org/WebPage
 */
var WebPage = 'http://schema.org/WebPage';
/**
 * WebPageElement
 *
 * A web page element, like a table or an image.
 *
 * http://schema.org/WebPageElement
 */
var WebPageElement = 'http://schema.org/WebPageElement';
/**
 * WebSite
 *
 * A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.
 *
 * http://schema.org/WebSite
 */
var WebSite = 'http://schema.org/WebSite';
/**
 * WholesaleStore
 *
 * A wholesale store.
 *
 * http://schema.org/WholesaleStore
 */
var WholesaleStore = 'http://schema.org/WholesaleStore';
/**
 * WinAction
 *
 * The act of achieving victory in a competitive activity.
 *
 * http://schema.org/WinAction
 */
var WinAction = 'http://schema.org/WinAction';
/**
 * Winery
 *
 * A winery.
 *
 * http://schema.org/Winery
 */
var Winery = 'http://schema.org/Winery';
/**
 * WorkBasedProgram
 *
 * A program with both an educational and employment component. Typically based at a workplace and structured around work-based learning, with the aim of instilling competencies related to an occupation. WorkBasedProgram is used to distinguish programs such as apprenticeships from school, college or other classroom based educational programs.
 *
 * http://schema.org/WorkBasedProgram
 */
var WorkBasedProgram = 'http://schema.org/WorkBasedProgram';
/**
 * WorkersUnion
 *
 * A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.
 *
 * http://schema.org/WorkersUnion
 */
var WorkersUnion = 'http://schema.org/WorkersUnion';
/**
 * WriteAction
 *
 * The act of authoring written creative content.
 *
 * http://schema.org/WriteAction
 */
var WriteAction = 'http://schema.org/WriteAction';
/**
 * XPathType
 *
 * Text representing an XPath (typically but not necessarily version 1.0).
 *
 * http://schema.org/XPathType
 */
var XPathType = 'http://schema.org/XPathType';
/**
 * Zoo
 *
 * A zoo.
 *
 * http://schema.org/Zoo
 */
var Zoo = 'http://schema.org/Zoo';
/**
 * abridged
 *
 * Indicates whether the book is an abridged edition.
 *
 * http://schema.org/abridged
 */
var abridged = 'http://schema.org/abridged';
/**
 * abstract
 *
 * An abstract is a short description that summarizes a [[CreativeWork]].
 *
 * http://schema.org/abstract
 */
var abstract = 'http://schema.org/abstract';
/**
 * accelerationTime
 *
 * The time needed to accelerate the vehicle from a given start velocity to a given target velocity.\n\nTypical unit code(s): SEC for seconds\n\n* Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for seconds and indicate the velocities in the [[name]] of the [[QuantitativeValue]], or use [[valueReference]] with a [[QuantitativeValue]] of 0..60 mph or 0..100 km/h to specify the reference speeds.
 *
 * http://schema.org/accelerationTime
 */
var accelerationTime = 'http://schema.org/accelerationTime';
/**
 * acceptedAnswer
 *
 * The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.
 *
 * http://schema.org/acceptedAnswer
 */
var acceptedAnswer = 'http://schema.org/acceptedAnswer';
/**
 * acceptedOffer
 *
 * The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
 *
 * http://schema.org/acceptedOffer
 */
var acceptedOffer = 'http://schema.org/acceptedOffer';
/**
 * acceptedPaymentMethod
 *
 * The payment method(s) accepted by seller for this offer.
 *
 * http://schema.org/acceptedPaymentMethod
 */
var acceptedPaymentMethod = 'http://schema.org/acceptedPaymentMethod';
/**
 * acceptsReservations
 *
 * Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.
 *
 * http://schema.org/acceptsReservations
 */
var acceptsReservations = 'http://schema.org/acceptsReservations';
/**
 * accessCode
 *
 * Password, PIN, or access code needed for delivery (e.g. from a locker).
 *
 * http://schema.org/accessCode
 */
var accessCode = 'http://schema.org/accessCode';
/**
 * accessMode
 *
 * The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessMode-vocabulary).
 *
 * http://schema.org/accessMode
 */
var accessMode = 'http://schema.org/accessMode';
/**
 * accessModeSufficient
 *
 * A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessModeSufficient-vocabulary).
 *
 * http://schema.org/accessModeSufficient
 */
var accessModeSufficient = 'http://schema.org/accessModeSufficient';
/**
 * accessibilityAPI
 *
 * Indicates that the resource is compatible with the referenced accessibility API. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityAPI-vocabulary).
 *
 * http://schema.org/accessibilityAPI
 */
var accessibilityAPI = 'http://schema.org/accessibilityAPI';
/**
 * accessibilityControl
 *
 * Identifies input methods that are sufficient to fully control the described resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityControl-vocabulary).
 *
 * http://schema.org/accessibilityControl
 */
var accessibilityControl = 'http://schema.org/accessibilityControl';
/**
 * accessibilityFeature
 *
 * Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityFeature-vocabulary).
 *
 * http://schema.org/accessibilityFeature
 */
var accessibilityFeature = 'http://schema.org/accessibilityFeature';
/**
 * accessibilityHazard
 *
 * A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityHazard-vocabulary).
 *
 * http://schema.org/accessibilityHazard
 */
var accessibilityHazard = 'http://schema.org/accessibilityHazard';
/**
 * accessibilitySummary
 *
 * A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed."
 *
 * http://schema.org/accessibilitySummary
 */
var accessibilitySummary = 'http://schema.org/accessibilitySummary';
/**
 * accommodationCategory
 *
 * Category of an [[Accommodation]], following real estate conventions, e.g. RESO (see [PropertySubType](https://ddwiki.reso.org/display/DDW17/PropertySubType+Field), and [PropertyType](https://ddwiki.reso.org/display/DDW17/PropertyType+Field) fields  for suggested values).
 *
 * http://schema.org/accommodationCategory
 */
var accommodationCategory = 'http://schema.org/accommodationCategory';
/**
 * accommodationFloorPlan
 *
 * A floorplan of some [[Accommodation]].
 *
 * http://schema.org/accommodationFloorPlan
 */
var accommodationFloorPlan = 'http://schema.org/accommodationFloorPlan';
/**
 * accountId
 *
 * The identifier for the account the payment will be applied to.
 *
 * http://schema.org/accountId
 */
var accountId = 'http://schema.org/accountId';
/**
 * accountMinimumInflow
 *
 * A minimum amount that has to be paid in every month.
 *
 * http://schema.org/accountMinimumInflow
 */
var accountMinimumInflow = 'http://schema.org/accountMinimumInflow';
/**
 * accountOverdraftLimit
 *
 * An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.
 *
 * http://schema.org/accountOverdraftLimit
 */
var accountOverdraftLimit = 'http://schema.org/accountOverdraftLimit';
/**
 * accountablePerson
 *
 * Specifies the Person that is legally accountable for the CreativeWork.
 *
 * http://schema.org/accountablePerson
 */
var accountablePerson = 'http://schema.org/accountablePerson';
/**
 * acquireLicensePage
 *
 * Indicates a page documenting how licenses can be purchased or otherwise acquired, for the current item.
 *
 * http://schema.org/acquireLicensePage
 */
var acquireLicensePage = 'http://schema.org/acquireLicensePage';
/**
 * acquiredFrom
 *
 * The organization or person from which the product was acquired.
 *
 * http://schema.org/acquiredFrom
 */
var acquiredFrom = 'http://schema.org/acquiredFrom';
/**
 * acrissCode
 *
 * The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.
 *
 * http://schema.org/acrissCode
 */
var acrissCode = 'http://schema.org/acrissCode';
/**
 * actionAccessibilityRequirement
 *
 * A set of requirements that must be fulfilled in order to perform an Action. If more than one value is specified, fulfilling one set of requirements will allow the Action to be performed.
 *
 * http://schema.org/actionAccessibilityRequirement
 */
var actionAccessibilityRequirement = 'http://schema.org/actionAccessibilityRequirement';
/**
 * actionPlatform
 *
 * The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
 *
 * http://schema.org/actionPlatform
 */
var actionPlatform = 'http://schema.org/actionPlatform';
/**
 * actionStatus
 *
 * Indicates the current disposition of the Action.
 *
 * http://schema.org/actionStatus
 */
var actionStatus = 'http://schema.org/actionStatus';
/**
 * actionableFeedbackPolicy
 *
 * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
 *
 * http://schema.org/actionableFeedbackPolicy
 */
var actionableFeedbackPolicy = 'http://schema.org/actionableFeedbackPolicy';
/**
 * activeIngredient
 *
 * An active ingredient, typically chemical compounds and/or biologic substances.
 *
 * http://schema.org/activeIngredient
 */
var activeIngredient = 'http://schema.org/activeIngredient';
/**
 * activityDuration
 *
 * Length of time to engage in the activity.
 *
 * http://schema.org/activityDuration
 */
var activityDuration = 'http://schema.org/activityDuration';
/**
 * activityFrequency
 *
 * How often one should engage in the activity.
 *
 * http://schema.org/activityFrequency
 */
var activityFrequency = 'http://schema.org/activityFrequency';
/**
 * actors
 *
 * An actor, e.g. in TV, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/actors
 */
var actors = 'http://schema.org/actors';
/**
 * addOn
 *
 * An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).
 *
 * http://schema.org/addOn
 */
var addOn = 'http://schema.org/addOn';
/**
 * additionalName
 *
 * An additional name for a Person, can be used for a middle name.
 *
 * http://schema.org/additionalName
 */
var additionalName = 'http://schema.org/additionalName';
/**
 * additionalNumberOfGuests
 *
 * If responding yes, the number of guests who will attend in addition to the invitee.
 *
 * http://schema.org/additionalNumberOfGuests
 */
var additionalNumberOfGuests = 'http://schema.org/additionalNumberOfGuests';
/**
 * additionalProperty
 *
 * A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
 *
 *
 * http://schema.org/additionalProperty
 */
var additionalProperty = 'http://schema.org/additionalProperty';
/**
 * additionalType
 *
 * An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the
 *     use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href="http://schema.org/docs/styleguide.html">style guide</a>
 *
 * http://schema.org/additionalType
 */
var additionalType = 'http://schema.org/additionalType';
/**
 * additionalVariable
 *
 * Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.
 *
 * http://schema.org/additionalVariable
 */
var additionalVariable = 'http://schema.org/additionalVariable';
/**
 * address
 *
 * Physical address of the item.
 *
 * http://schema.org/address
 */
var address = 'http://schema.org/address';
/**
 * addressCountry
 *
 * The country. For example, USA. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1).
 *
 * http://schema.org/addressCountry
 */
var addressCountry = 'http://schema.org/addressCountry';
/**
 * addressLocality
 *
 * The locality in which the street address is, and which is in the region. For example, Mountain View.
 *
 * http://schema.org/addressLocality
 */
var addressLocality = 'http://schema.org/addressLocality';
/**
 * addressRegion
 *
 * The region in which the locality is, and which is in the country. For example, California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country).
 *
 * http://schema.org/addressRegion
 */
var addressRegion = 'http://schema.org/addressRegion';
/**
 * administrationRoute
 *
 * A route by which this drug may be administered, e.g. 'oral'.
 *
 * http://schema.org/administrationRoute
 */
var administrationRoute = 'http://schema.org/administrationRoute';
/**
 * advanceBookingRequirement
 *
 * The amount of time that is required between accepting the offer and the actual usage of the resource or service.
 *
 * http://schema.org/advanceBookingRequirement
 */
var advanceBookingRequirement = 'http://schema.org/advanceBookingRequirement';
/**
 * adverseOutcome
 *
 * A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or otherwise life-threatening or requiring immediate medical attention), tag it as a seriousAdverseOutcome instead.
 *
 * http://schema.org/adverseOutcome
 */
var adverseOutcome = 'http://schema.org/adverseOutcome';
/**
 * affectedBy
 *
 * Drugs that affect the test's results.
 *
 * http://schema.org/affectedBy
 */
var affectedBy = 'http://schema.org/affectedBy';
/**
 * affiliation
 *
 * An organization that this person is affiliated with. For example, a school/university, a club, or a team.
 *
 * http://schema.org/affiliation
 */
var affiliation = 'http://schema.org/affiliation';
/**
 * afterMedia
 *
 * A media object representing the circumstances after performing this direction.
 *
 * http://schema.org/afterMedia
 */
var afterMedia = 'http://schema.org/afterMedia';
/**
 * agent
 *
 * The direct performer or driver of the action (animate or inanimate). E.g. *John* wrote a book.
 *
 * http://schema.org/agent
 */
var agent = 'http://schema.org/agent';
/**
 * aggregateRating
 *
 * The overall rating, based on a collection of reviews or ratings, of the item.
 *
 * http://schema.org/aggregateRating
 */
var aggregateRating = 'http://schema.org/aggregateRating';
/**
 * aircraft
 *
 * The kind of aircraft (e.g., "Boeing 747").
 *
 * http://schema.org/aircraft
 */
var aircraft = 'http://schema.org/aircraft';
/**
 * albumProductionType
 *
 * Classification of the album by its type of content: soundtrack, live album, studio album, etc.
 *
 * http://schema.org/albumProductionType
 */
var albumProductionType = 'http://schema.org/albumProductionType';
/**
 * albumReleaseType
 *
 * The kind of release which this album is: single, EP or album.
 *
 * http://schema.org/albumReleaseType
 */
var albumReleaseType = 'http://schema.org/albumReleaseType';
/**
 * albums
 *
 * A collection of music albums.
 *
 * http://schema.org/albums
 */
var albums = 'http://schema.org/albums';
/**
 * alcoholWarning
 *
 * Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.
 *
 * http://schema.org/alcoholWarning
 */
var alcoholWarning = 'http://schema.org/alcoholWarning';
/**
 * algorithm
 *
 * The algorithm or rules to follow to compute the score.
 *
 * http://schema.org/algorithm
 */
var algorithm = 'http://schema.org/algorithm';
/**
 * alignmentType
 *
 * A category of alignment between the learning resource and the framework node. Recommended values include: 'requires', 'textComplexity', 'readingLevel', and 'educationalSubject'.
 *
 * http://schema.org/alignmentType
 */
var alignmentType = 'http://schema.org/alignmentType';
/**
 * alternativeHeadline
 *
 * A secondary title of the CreativeWork.
 *
 * http://schema.org/alternativeHeadline
 */
var alternativeHeadline = 'http://schema.org/alternativeHeadline';
/**
 * alternativeOf
 *
 * Another gene which is a variation of this one.
 *
 * http://schema.org/alternativeOf
 */
var alternativeOf = 'http://schema.org/alternativeOf';
/**
 * amenityFeature
 *
 * An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
 *
 * http://schema.org/amenityFeature
 */
var amenityFeature = 'http://schema.org/amenityFeature';
/**
 * amount
 *
 * The amount of money.
 *
 * http://schema.org/amount
 */
var amount = 'http://schema.org/amount';
/**
 * amountOfThisGood
 *
 * The quantity of the goods included in the offer.
 *
 * http://schema.org/amountOfThisGood
 */
var amountOfThisGood = 'http://schema.org/amountOfThisGood';
/**
 * announcementLocation
 *
 * Indicates a specific [[CivicStructure]] or [[LocalBusiness]] associated with the SpecialAnnouncement. For example, a specific testing facility or business with special opening hours. For a larger geographic region like a quarantine of an entire region, use [[spatialCoverage]].
 *
 * http://schema.org/announcementLocation
 */
var announcementLocation = 'http://schema.org/announcementLocation';
/**
 * annualPercentageRate
 *
 * The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.
 *
 * http://schema.org/annualPercentageRate
 */
var annualPercentageRate = 'http://schema.org/annualPercentageRate';
/**
 * answerCount
 *
 * The number of answers this question has received.
 *
 * http://schema.org/answerCount
 */
var answerCount = 'http://schema.org/answerCount';
/**
 * answerExplanation
 *
 * A step-by-step or full explanation about Answer. Can outline how this Answer was achieved or contain more broad clarification or statement about it.
 *
 * http://schema.org/answerExplanation
 */
var answerExplanation = 'http://schema.org/answerExplanation';
/**
 * antagonist
 *
 * The muscle whose action counteracts the specified muscle.
 *
 * http://schema.org/antagonist
 */
var antagonist = 'http://schema.org/antagonist';
/**
 * appearance
 *
 * Indicates an occurrence of a [[Claim]] in some [[CreativeWork]].
 *
 * http://schema.org/appearance
 */
var appearance = 'http://schema.org/appearance';
/**
 * applicableCountry
 *
 * A country where a particular merchant return policy applies to, for example the two-letter ISO 3166-1 alpha-2 country code.
 *
 * http://schema.org/applicableCountry
 */
var applicableCountry = 'http://schema.org/applicableCountry';
/**
 * applicableLocation
 *
 * The location in which the status applies.
 *
 * http://schema.org/applicableLocation
 */
var applicableLocation = 'http://schema.org/applicableLocation';
/**
 * applicantLocationRequirements
 *
 * The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.
 *
 * http://schema.org/applicantLocationRequirements
 */
var applicantLocationRequirements = 'http://schema.org/applicantLocationRequirements';
/**
 * application
 *
 * An application that can complete the request.
 *
 * http://schema.org/application
 */
var application = 'http://schema.org/application';
/**
 * applicationCategory
 *
 * Type of software application, e.g. 'Game, Multimedia'.
 *
 * http://schema.org/applicationCategory
 */
var applicationCategory = 'http://schema.org/applicationCategory';
/**
 * applicationContact
 *
 * Contact details for further information relevant to this job posting.
 *
 * http://schema.org/applicationContact
 */
var applicationContact = 'http://schema.org/applicationContact';
/**
 * applicationDeadline
 *
 * The date at which the program stops collecting applications for the next enrollment cycle.
 *
 * http://schema.org/applicationDeadline
 */
var applicationDeadline = 'http://schema.org/applicationDeadline';
/**
 * applicationStartDate
 *
 * The date at which the program begins collecting applications for the next enrollment cycle.
 *
 * http://schema.org/applicationStartDate
 */
var applicationStartDate = 'http://schema.org/applicationStartDate';
/**
 * applicationSubCategory
 *
 * Subcategory of the application, e.g. 'Arcade Game'.
 *
 * http://schema.org/applicationSubCategory
 */
var applicationSubCategory = 'http://schema.org/applicationSubCategory';
/**
 * applicationSuite
 *
 * The name of the application suite to which the application belongs (e.g. Excel belongs to Office).
 *
 * http://schema.org/applicationSuite
 */
var applicationSuite = 'http://schema.org/applicationSuite';
/**
 * appliesToDeliveryMethod
 *
 * The delivery method(s) to which the delivery charge or payment charge specification applies.
 *
 * http://schema.org/appliesToDeliveryMethod
 */
var appliesToDeliveryMethod = 'http://schema.org/appliesToDeliveryMethod';
/**
 * appliesToPaymentMethod
 *
 * The payment method(s) to which the payment charge specification applies.
 *
 * http://schema.org/appliesToPaymentMethod
 */
var appliesToPaymentMethod = 'http://schema.org/appliesToPaymentMethod';
/**
 * archivedAt
 *
 * Indicates a page or other link involved in archival of a [[CreativeWork]]. In the case of [[MediaReview]], the items in a [[MediaReviewItem]] may often become inaccessible, but be archived by archival, journalistic, activist, or law enforcement organizations. In such cases, the referenced page may not directly publish the content.
 *
 * http://schema.org/archivedAt
 */
var archivedAt = 'http://schema.org/archivedAt';
/**
 * area
 *
 * The area within which users can expect to reach the broadcast service.
 *
 * http://schema.org/area
 */
var area = 'http://schema.org/area';
/**
 * arrivalAirport
 *
 * The airport where the flight terminates.
 *
 * http://schema.org/arrivalAirport
 */
var arrivalAirport = 'http://schema.org/arrivalAirport';
/**
 * arrivalBoatTerminal
 *
 * The terminal or port from which the boat arrives.
 *
 * http://schema.org/arrivalBoatTerminal
 */
var arrivalBoatTerminal = 'http://schema.org/arrivalBoatTerminal';
/**
 * arrivalBusStop
 *
 * The stop or station from which the bus arrives.
 *
 * http://schema.org/arrivalBusStop
 */
var arrivalBusStop = 'http://schema.org/arrivalBusStop';
/**
 * arrivalGate
 *
 * Identifier of the flight's arrival gate.
 *
 * http://schema.org/arrivalGate
 */
var arrivalGate = 'http://schema.org/arrivalGate';
/**
 * arrivalPlatform
 *
 * The platform where the train arrives.
 *
 * http://schema.org/arrivalPlatform
 */
var arrivalPlatform = 'http://schema.org/arrivalPlatform';
/**
 * arrivalStation
 *
 * The station where the train trip ends.
 *
 * http://schema.org/arrivalStation
 */
var arrivalStation = 'http://schema.org/arrivalStation';
/**
 * arrivalTerminal
 *
 * Identifier of the flight's arrival terminal.
 *
 * http://schema.org/arrivalTerminal
 */
var arrivalTerminal = 'http://schema.org/arrivalTerminal';
/**
 * arrivalTime
 *
 * The expected arrival time.
 *
 * http://schema.org/arrivalTime
 */
var arrivalTime = 'http://schema.org/arrivalTime';
/**
 * artEdition
 *
 * The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example "20").
 *
 * http://schema.org/artEdition
 */
var artEdition = 'http://schema.org/artEdition';
/**
 * artMedium
 *
 * The material used. (E.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)
 *
 * http://schema.org/artMedium
 */
var artMedium = 'http://schema.org/artMedium';
/**
 * artform
 *
 * e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.
 *
 * http://schema.org/artform
 */
var artform = 'http://schema.org/artform';
/**
 * articleBody
 *
 * The actual body of the article.
 *
 * http://schema.org/articleBody
 */
var articleBody = 'http://schema.org/articleBody';
/**
 * articleSection
 *
 * Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.
 *
 * http://schema.org/articleSection
 */
var articleSection = 'http://schema.org/articleSection';
/**
 * artist
 *
 * The primary artist for a work
 *     	in a medium other than pencils or digital line art--for example, if the
 *     	primary artwork is done in watercolors or digital paints.
 *
 * http://schema.org/artist
 */
var artist = 'http://schema.org/artist';
/**
 * asin
 *
 * An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).
 *
 * Note also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.
 * ASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.
 *
 * http://schema.org/asin
 */
var asin = 'http://schema.org/asin';
/**
 * aspect
 *
 * An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.
 *
 * http://schema.org/aspect
 */
var aspect = 'http://schema.org/aspect';
/**
 * assembly
 *
 * Library file name, e.g., mscorlib.dll, system.web.dll.
 *
 * http://schema.org/assembly
 */
var assembly = 'http://schema.org/assembly';
/**
 * assemblyVersion
 *
 * Associated product/technology version. E.g., .NET Framework 4.5.
 *
 * http://schema.org/assemblyVersion
 */
var assemblyVersion = 'http://schema.org/assemblyVersion';
/**
 * assesses
 *
 * The item being described is intended to assess the competency or learning outcome defined by the referenced term.
 *
 * http://schema.org/assesses
 */
var assesses = 'http://schema.org/assesses';
/**
 * associatedAnatomy
 *
 * The anatomy of the underlying organ system or structures associated with this entity.
 *
 * http://schema.org/associatedAnatomy
 */
var associatedAnatomy = 'http://schema.org/associatedAnatomy';
/**
 * associatedArticle
 *
 * A NewsArticle associated with the Media Object.
 *
 * http://schema.org/associatedArticle
 */
var associatedArticle = 'http://schema.org/associatedArticle';
/**
 * associatedClaimReview
 *
 * An associated [[ClaimReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].
 *
 * http://schema.org/associatedClaimReview
 */
var associatedClaimReview = 'http://schema.org/associatedClaimReview';
/**
 * associatedDisease
 *
 * Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.
 *
 * http://schema.org/associatedDisease
 */
var associatedDisease = 'http://schema.org/associatedDisease';
/**
 * associatedMedia
 *
 * A media object that encodes this CreativeWork. This property is a synonym for encoding.
 *
 * http://schema.org/associatedMedia
 */
var associatedMedia = 'http://schema.org/associatedMedia';
/**
 * associatedMediaReview
 *
 * An associated [[MediaReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].
 *
 * http://schema.org/associatedMediaReview
 */
var associatedMediaReview = 'http://schema.org/associatedMediaReview';
/**
 * associatedPathophysiology
 *
 * If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.
 *
 * http://schema.org/associatedPathophysiology
 */
var associatedPathophysiology = 'http://schema.org/associatedPathophysiology';
/**
 * athlete
 *
 * A person that acts as performing member of a sports team; a player as opposed to a coach.
 *
 * http://schema.org/athlete
 */
var athlete = 'http://schema.org/athlete';
/**
 * attendees
 *
 * A person attending the event.
 *
 * http://schema.org/attendees
 */
var attendees = 'http://schema.org/attendees';
/**
 * audienceType
 *
 * The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
 *
 * http://schema.org/audienceType
 */
var audienceType = 'http://schema.org/audienceType';
/**
 * audio
 *
 * An embedded audio object.
 *
 * http://schema.org/audio
 */
var audio = 'http://schema.org/audio';
/**
 * authenticator
 *
 * The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.
 *
 * http://schema.org/authenticator
 */
var authenticator = 'http://schema.org/authenticator';
/**
 * author
 *
 * The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
 *
 * http://schema.org/author
 */
var author = 'http://schema.org/author';
/**
 * availability
 *
 * The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.
 *
 * http://schema.org/availability
 */
var availability = 'http://schema.org/availability';
/**
 * availabilityEnds
 *
 * The end of the availability of the product or service included in the offer.
 *
 * http://schema.org/availabilityEnds
 */
var availabilityEnds = 'http://schema.org/availabilityEnds';
/**
 * availabilityStarts
 *
 * The beginning of the availability of the product or service included in the offer.
 *
 * http://schema.org/availabilityStarts
 */
var availabilityStarts = 'http://schema.org/availabilityStarts';
/**
 * availableAtOrFrom
 *
 * The place(s) from which the offer can be obtained (e.g. store locations).
 *
 * http://schema.org/availableAtOrFrom
 */
var availableAtOrFrom = 'http://schema.org/availableAtOrFrom';
/**
 * availableChannel
 *
 * A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
 *
 * http://schema.org/availableChannel
 */
var availableChannel = 'http://schema.org/availableChannel';
/**
 * availableDeliveryMethod
 *
 * The delivery method(s) available for this offer.
 *
 * http://schema.org/availableDeliveryMethod
 */
var availableDeliveryMethod = 'http://schema.org/availableDeliveryMethod';
/**
 * availableFrom
 *
 * When the item is available for pickup from the store, locker, etc.
 *
 * http://schema.org/availableFrom
 */
var availableFrom = 'http://schema.org/availableFrom';
/**
 * availableIn
 *
 * The location in which the strength is available.
 *
 * http://schema.org/availableIn
 */
var availableIn = 'http://schema.org/availableIn';
/**
 * availableLanguage
 *
 * A language someone may use with or at the item, service or place. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[inLanguage]].
 *
 * http://schema.org/availableLanguage
 */
var availableLanguage = 'http://schema.org/availableLanguage';
/**
 * availableService
 *
 * A medical service available from this provider.
 *
 * http://schema.org/availableService
 */
var availableService = 'http://schema.org/availableService';
/**
 * availableStrength
 *
 * An available dosage strength for the drug.
 *
 * http://schema.org/availableStrength
 */
var availableStrength = 'http://schema.org/availableStrength';
/**
 * availableTest
 *
 * A diagnostic test or procedure offered by this lab.
 *
 * http://schema.org/availableTest
 */
var availableTest = 'http://schema.org/availableTest';
/**
 * availableThrough
 *
 * After this date, the item will no longer be available for pickup.
 *
 * http://schema.org/availableThrough
 */
var availableThrough = 'http://schema.org/availableThrough';
/**
 * awards
 *
 * Awards won by or for this item.
 *
 * http://schema.org/awards
 */
var awards = 'http://schema.org/awards';
/**
 * awayTeam
 *
 * The away team in a sports event.
 *
 * http://schema.org/awayTeam
 */
var awayTeam = 'http://schema.org/awayTeam';
/**
 * backstory
 *
 * For an [[Article]], typically a [[NewsArticle]], the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.
 *
 * http://schema.org/backstory
 */
var backstory = 'http://schema.org/backstory';
/**
 * bankAccountType
 *
 * The type of a bank account.
 *
 * http://schema.org/bankAccountType
 */
var bankAccountType = 'http://schema.org/bankAccountType';
/**
 * baseSalary
 *
 * The base salary of the job or of an employee in an EmployeeRole.
 *
 * http://schema.org/baseSalary
 */
var baseSalary = 'http://schema.org/baseSalary';
/**
 * bccRecipient
 *
 * A sub property of recipient. The recipient blind copied on a message.
 *
 * http://schema.org/bccRecipient
 */
var bccRecipient = 'http://schema.org/bccRecipient';
/**
 * bed
 *
 * The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
 *       If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
 *
 * http://schema.org/bed
 */
var bed = 'http://schema.org/bed';
/**
 * beforeMedia
 *
 * A media object representing the circumstances before performing this direction.
 *
 * http://schema.org/beforeMedia
 */
var beforeMedia = 'http://schema.org/beforeMedia';
/**
 * beneficiaryBank
 *
 * A bank or bank’s branch, financial institution or international financial institution operating the beneficiary’s bank account or releasing funds for the beneficiary.
 *
 * http://schema.org/beneficiaryBank
 */
var beneficiaryBank = 'http://schema.org/beneficiaryBank';
/**
 * benefits
 *
 * Description of benefits associated with the job.
 *
 * http://schema.org/benefits
 */
var benefits = 'http://schema.org/benefits';
/**
 * benefitsSummaryUrl
 *
 * The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.
 *
 * http://schema.org/benefitsSummaryUrl
 */
var benefitsSummaryUrl = 'http://schema.org/benefitsSummaryUrl';
/**
 * bestRating
 *
 * The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.
 *
 * http://schema.org/bestRating
 */
var bestRating = 'http://schema.org/bestRating';
/**
 * billingAddress
 *
 * The billing address for the order.
 *
 * http://schema.org/billingAddress
 */
var billingAddress = 'http://schema.org/billingAddress';
/**
 * billingDuration
 *
 * Specifies for how long this price (or price component) will be billed. Can be used, for example, to model the contractual duration of a subscription or payment plan. Type can be either a Duration or a Number (in which case the unit of measurement, for example month, is specified by the unitCode property).
 *
 * http://schema.org/billingDuration
 */
var billingDuration = 'http://schema.org/billingDuration';
/**
 * billingIncrement
 *
 * This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.
 *
 * http://schema.org/billingIncrement
 */
var billingIncrement = 'http://schema.org/billingIncrement';
/**
 * billingPeriod
 *
 * The time interval used to compute the invoice.
 *
 * http://schema.org/billingPeriod
 */
var billingPeriod = 'http://schema.org/billingPeriod';
/**
 * billingStart
 *
 * Specifies after how much time this price (or price component) becomes valid and billing starts. Can be used, for example, to model a price increase after the first year of a subscription. The unit of measurement is specified by the unitCode property.
 *
 * http://schema.org/billingStart
 */
var billingStart = 'http://schema.org/billingStart';
/**
 * bioChemInteraction
 *
 * A BioChemEntity that is known to interact with this item.
 *
 * http://schema.org/bioChemInteraction
 */
var bioChemInteraction = 'http://schema.org/bioChemInteraction';
/**
 * bioChemSimilarity
 *
 * A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.
 *
 * http://schema.org/bioChemSimilarity
 */
var bioChemSimilarity = 'http://schema.org/bioChemSimilarity';
/**
 * biologicalRole
 *
 * A role played by the BioChemEntity within a biological context.
 *
 * http://schema.org/biologicalRole
 */
var biologicalRole = 'http://schema.org/biologicalRole';
/**
 * biomechnicalClass
 *
 * The biomechanical properties of the bone.
 *
 * http://schema.org/biomechnicalClass
 */
var biomechnicalClass = 'http://schema.org/biomechnicalClass';
/**
 * birthDate
 *
 * Date of birth.
 *
 * http://schema.org/birthDate
 */
var birthDate = 'http://schema.org/birthDate';
/**
 * birthPlace
 *
 * The place where the person was born.
 *
 * http://schema.org/birthPlace
 */
var birthPlace = 'http://schema.org/birthPlace';
/**
 * bitrate
 *
 * The bitrate of the media object.
 *
 * http://schema.org/bitrate
 */
var bitrate = 'http://schema.org/bitrate';
/**
 * blogPosts
 *
 * Indicates a post that is part of a [[Blog]]. Note that historically, what we term a "Blog" was once known as a "weblog", and that what we term a "BlogPosting" is now often colloquially referred to as a "blog".
 *
 * http://schema.org/blogPosts
 */
var blogPosts = 'http://schema.org/blogPosts';
/**
 * bloodSupply
 *
 * The blood vessel that carries blood from the heart to the muscle.
 *
 * http://schema.org/bloodSupply
 */
var bloodSupply = 'http://schema.org/bloodSupply';
/**
 * boardingGroup
 *
 * The airline-specific indicator of boarding order / preference.
 *
 * http://schema.org/boardingGroup
 */
var boardingGroup = 'http://schema.org/boardingGroup';
/**
 * boardingPolicy
 *
 * The type of boarding policy used by the airline (e.g. zone-based or group-based).
 *
 * http://schema.org/boardingPolicy
 */
var boardingPolicy = 'http://schema.org/boardingPolicy';
/**
 * bodyLocation
 *
 * Location in the body of the anatomical structure.
 *
 * http://schema.org/bodyLocation
 */
var bodyLocation = 'http://schema.org/bodyLocation';
/**
 * bodyType
 *
 * Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).
 *
 * http://schema.org/bodyType
 */
var bodyType = 'http://schema.org/bodyType';
/**
 * bookEdition
 *
 * The edition of the book.
 *
 * http://schema.org/bookEdition
 */
var bookEdition = 'http://schema.org/bookEdition';
/**
 * bookFormat
 *
 * The format of the book.
 *
 * http://schema.org/bookFormat
 */
var bookFormat = 'http://schema.org/bookFormat';
/**
 * bookingAgent
 *
 * 'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.
 *
 * http://schema.org/bookingAgent
 */
var bookingAgent = 'http://schema.org/bookingAgent';
/**
 * bookingTime
 *
 * The date and time the reservation was booked.
 *
 * http://schema.org/bookingTime
 */
var bookingTime = 'http://schema.org/bookingTime';
/**
 * borrower
 *
 * A sub property of participant. The person that borrows the object being lent.
 *
 * http://schema.org/borrower
 */
var borrower = 'http://schema.org/borrower';
/**
 * box
 *
 * A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.
 *
 * http://schema.org/box
 */
var box = 'http://schema.org/box';
/**
 * branch
 *
 * The branches that delineate from the nerve bundle. Not to be confused with [[branchOf]].
 *
 * http://schema.org/branch
 */
var branch = 'http://schema.org/branch';
/**
 * branchCode
 *
 * A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\n\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
 *
 *
 * http://schema.org/branchCode
 */
var branchCode = 'http://schema.org/branchCode';
/**
 * branchOf
 *
 * The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical) [[branch]].
 *
 * http://schema.org/branchOf
 */
var branchOf = 'http://schema.org/branchOf';
/**
 * brand
 *
 * The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
 *
 * http://schema.org/brand
 */
var brand = 'http://schema.org/brand';
/**
 * breadcrumb
 *
 * A set of links that can help a user understand and navigate a website hierarchy.
 *
 * http://schema.org/breadcrumb
 */
var breadcrumb = 'http://schema.org/breadcrumb';
/**
 * breastfeedingWarning
 *
 * Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.
 *
 * http://schema.org/breastfeedingWarning
 */
var breastfeedingWarning = 'http://schema.org/breastfeedingWarning';
/**
 * broadcastAffiliateOf
 *
 * The media network(s) whose content is broadcast on this station.
 *
 * http://schema.org/broadcastAffiliateOf
 */
var broadcastAffiliateOf = 'http://schema.org/broadcastAffiliateOf';
/**
 * broadcastChannelId
 *
 * The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
 *
 * http://schema.org/broadcastChannelId
 */
var broadcastChannelId = 'http://schema.org/broadcastChannelId';
/**
 * broadcastDisplayName
 *
 * The name displayed in the channel guide. For many US affiliates, it is the network name.
 *
 * http://schema.org/broadcastDisplayName
 */
var broadcastDisplayName = 'http://schema.org/broadcastDisplayName';
/**
 * broadcastFrequency
 *
 * The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
 *
 * http://schema.org/broadcastFrequency
 */
var broadcastFrequency = 'http://schema.org/broadcastFrequency';
/**
 * broadcastFrequencyValue
 *
 * The frequency in MHz for a particular broadcast.
 *
 * http://schema.org/broadcastFrequencyValue
 */
var broadcastFrequencyValue = 'http://schema.org/broadcastFrequencyValue';
/**
 * broadcastOfEvent
 *
 * The event being broadcast such as a sporting event or awards ceremony.
 *
 * http://schema.org/broadcastOfEvent
 */
var broadcastOfEvent = 'http://schema.org/broadcastOfEvent';
/**
 * broadcastServiceTier
 *
 * The type of service required to have access to the channel (e.g. Standard or Premium).
 *
 * http://schema.org/broadcastServiceTier
 */
var broadcastServiceTier = 'http://schema.org/broadcastServiceTier';
/**
 * broadcastSignalModulation
 *
 * The modulation (e.g. FM, AM, etc) used by a particular broadcast service.
 *
 * http://schema.org/broadcastSignalModulation
 */
var broadcastSignalModulation = 'http://schema.org/broadcastSignalModulation';
/**
 * broadcastSubChannel
 *
 * The subchannel used for the broadcast.
 *
 * http://schema.org/broadcastSubChannel
 */
var broadcastSubChannel = 'http://schema.org/broadcastSubChannel';
/**
 * broadcastTimezone
 *
 * The timezone in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601) for which the service bases its broadcasts.
 *
 * http://schema.org/broadcastTimezone
 */
var broadcastTimezone = 'http://schema.org/broadcastTimezone';
/**
 * broadcaster
 *
 * The organization owning or operating the broadcast service.
 *
 * http://schema.org/broadcaster
 */
var broadcaster = 'http://schema.org/broadcaster';
/**
 * browserRequirements
 *
 * Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.
 *
 * http://schema.org/browserRequirements
 */
var browserRequirements = 'http://schema.org/browserRequirements';
/**
 * busName
 *
 * The name of the bus (e.g. Bolt Express).
 *
 * http://schema.org/busName
 */
var busName = 'http://schema.org/busName';
/**
 * busNumber
 *
 * The unique identifier for the bus.
 *
 * http://schema.org/busNumber
 */
var busNumber = 'http://schema.org/busNumber';
/**
 * businessDays
 *
 * Days of the week when the merchant typically operates, indicated via opening hours markup.
 *
 * http://schema.org/businessDays
 */
var businessDays = 'http://schema.org/businessDays';
/**
 * businessFunction
 *
 * The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.
 *
 * http://schema.org/businessFunction
 */
var businessFunction = 'http://schema.org/businessFunction';
/**
 * buyer
 *
 * A sub property of participant. The participant/person/organization that bought the object.
 *
 * http://schema.org/buyer
 */
var buyer = 'http://schema.org/buyer';
/**
 * byArtist
 *
 * The artist that performed this album or recording.
 *
 * http://schema.org/byArtist
 */
var byArtist = 'http://schema.org/byArtist';
/**
 * byDay
 *
 * Defines the day(s) of the week on which a recurring [[Event]] takes place. May be specified using either [[DayOfWeek]], or alternatively [[Text]] conforming to iCal's syntax for byDay recurrence rules.
 *
 * http://schema.org/byDay
 */
var byDay = 'http://schema.org/byDay';
/**
 * byMonth
 *
 * Defines the month(s) of the year on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-12. January is 1.
 *
 * http://schema.org/byMonth
 */
var byMonth = 'http://schema.org/byMonth';
/**
 * byMonthDay
 *
 * Defines the day(s) of the month on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-31.
 *
 * http://schema.org/byMonthDay
 */
var byMonthDay = 'http://schema.org/byMonthDay';
/**
 * byMonthWeek
 *
 * Defines the week(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction with byDay to indicate concepts like the first and third Mondays of a month.
 *
 * http://schema.org/byMonthWeek
 */
var byMonthWeek = 'http://schema.org/byMonthWeek';
/**
 * callSign
 *
 * A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.
 *
 * http://schema.org/callSign
 */
var callSign = 'http://schema.org/callSign';
/**
 * calories
 *
 * The number of calories.
 *
 * http://schema.org/calories
 */
var calories = 'http://schema.org/calories';
/**
 * candidate
 *
 * A sub property of object. The candidate subject of this action.
 *
 * http://schema.org/candidate
 */
var candidate = 'http://schema.org/candidate';
/**
 * carbohydrateContent
 *
 * The number of grams of carbohydrates.
 *
 * http://schema.org/carbohydrateContent
 */
var carbohydrateContent = 'http://schema.org/carbohydrateContent';
/**
 * cargoVolume
 *
 * The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.\n\nTypical unit code(s): LTR for liters, FTQ for cubic foot/feet\n\nNote: You can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/cargoVolume
 */
var cargoVolume = 'http://schema.org/cargoVolume';
/**
 * carrier
 *
 * 'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
 *
 * http://schema.org/carrier
 */
var carrier = 'http://schema.org/carrier';
/**
 * carrierRequirements
 *
 * Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).
 *
 * http://schema.org/carrierRequirements
 */
var carrierRequirements = 'http://schema.org/carrierRequirements';
/**
 * cashBack
 *
 * A cardholder benefit that pays the cardholder a small percentage of their net expenditures.
 *
 * http://schema.org/cashBack
 */
var cashBack = 'http://schema.org/cashBack';
/**
 * catalog
 *
 * A data catalog which contains this dataset.
 *
 * http://schema.org/catalog
 */
var catalog = 'http://schema.org/catalog';
/**
 * catalogNumber
 *
 * The catalog number for the release.
 *
 * http://schema.org/catalogNumber
 */
var catalogNumber = 'http://schema.org/catalogNumber';
/**
 * causeOf
 *
 * The condition, complication, symptom, sign, etc. caused.
 *
 * http://schema.org/causeOf
 */
var causeOf = 'http://schema.org/causeOf';
/**
 * ccRecipient
 *
 * A sub property of recipient. The recipient copied on a message.
 *
 * http://schema.org/ccRecipient
 */
var ccRecipient = 'http://schema.org/ccRecipient';
/**
 * character
 *
 * Fictional person connected with a creative work.
 *
 * http://schema.org/character
 */
var character = 'http://schema.org/character';
/**
 * characterAttribute
 *
 * A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
 *
 * http://schema.org/characterAttribute
 */
var characterAttribute = 'http://schema.org/characterAttribute';
/**
 * characterName
 *
 * The name of a character played in some acting or performing role, i.e. in a PerformanceRole.
 *
 * http://schema.org/characterName
 */
var characterName = 'http://schema.org/characterName';
/**
 * cheatCode
 *
 * Cheat codes to the game.
 *
 * http://schema.org/cheatCode
 */
var cheatCode = 'http://schema.org/cheatCode';
/**
 * checkinTime
 *
 * The earliest someone may check into a lodging establishment.
 *
 * http://schema.org/checkinTime
 */
var checkinTime = 'http://schema.org/checkinTime';
/**
 * checkoutPageURLTemplate
 *
 * A URL template (RFC 6570) for a checkout page for an offer. This approach allows merchants to specify a URL for online checkout of the offered product, by interpolating parameters such as the logged in user ID, product ID, quantity, discount code etc. Parameter naming and standardization are not specified here.
 *
 * http://schema.org/checkoutPageURLTemplate
 */
var checkoutPageURLTemplate = 'http://schema.org/checkoutPageURLTemplate';
/**
 * checkoutTime
 *
 * The latest someone may check out of a lodging establishment.
 *
 * http://schema.org/checkoutTime
 */
var checkoutTime = 'http://schema.org/checkoutTime';
/**
 * chemicalComposition
 *
 * The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.
 *
 * http://schema.org/chemicalComposition
 */
var chemicalComposition = 'http://schema.org/chemicalComposition';
/**
 * chemicalRole
 *
 * A role played by the BioChemEntity within a chemical context.
 *
 * http://schema.org/chemicalRole
 */
var chemicalRole = 'http://schema.org/chemicalRole';
/**
 * childMaxAge
 *
 * Maximal age of the child.
 *
 * http://schema.org/childMaxAge
 */
var childMaxAge = 'http://schema.org/childMaxAge';
/**
 * childMinAge
 *
 * Minimal age of the child.
 *
 * http://schema.org/childMinAge
 */
var childMinAge = 'http://schema.org/childMinAge';
/**
 * children
 *
 * A child of the person.
 *
 * http://schema.org/children
 */
var children = 'http://schema.org/children';
/**
 * cholesterolContent
 *
 * The number of milligrams of cholesterol.
 *
 * http://schema.org/cholesterolContent
 */
var cholesterolContent = 'http://schema.org/cholesterolContent';
/**
 * circle
 *
 * A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.
 *
 * http://schema.org/circle
 */
var circle = 'http://schema.org/circle';
/**
 * citation
 *
 * A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
 *
 * http://schema.org/citation
 */
var citation = 'http://schema.org/citation';
/**
 * claimInterpreter
 *
 * For a [[Claim]] interpreted from [[MediaObject]] content
 *     sed to indicate a claim contained, implied or refined from the content of a [[MediaObject]].
 *
 * http://schema.org/claimInterpreter
 */
var claimInterpreter = 'http://schema.org/claimInterpreter';
/**
 * claimReviewed
 *
 * A short summary of the specific claims reviewed in a ClaimReview.
 *
 * http://schema.org/claimReviewed
 */
var claimReviewed = 'http://schema.org/claimReviewed';
/**
 * clincalPharmacology
 *
 * Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
 *
 * http://schema.org/clincalPharmacology
 */
var clincalPharmacology = 'http://schema.org/clincalPharmacology';
/**
 * clipNumber
 *
 * Position of the clip within an ordered group of clips.
 *
 * http://schema.org/clipNumber
 */
var clipNumber = 'http://schema.org/clipNumber';
/**
 * closes
 *
 * The closing hour of the place or service on the given day(s) of the week.
 *
 * http://schema.org/closes
 */
var closes = 'http://schema.org/closes';
/**
 * coach
 *
 * A person that acts in a coaching role for a sports team.
 *
 * http://schema.org/coach
 */
var coach = 'http://schema.org/coach';
/**
 * code
 *
 * A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
 *
 * http://schema.org/code
 */
var code = 'http://schema.org/code';
/**
 * codeRepository
 *
 * Link to the repository where the un-compiled, human readable code and related code is located (SVN, GitHub, CodePlex).
 *
 * http://schema.org/codeRepository
 */
var codeRepository = 'http://schema.org/codeRepository';
/**
 * codeValue
 *
 * A short textual code that uniquely identifies the value.
 *
 * http://schema.org/codeValue
 */
var codeValue = 'http://schema.org/codeValue';
/**
 * codingSystem
 *
 * The coding system, e.g. 'ICD-10'.
 *
 * http://schema.org/codingSystem
 */
var codingSystem = 'http://schema.org/codingSystem';
/**
 * colleagues
 *
 * A colleague of the person.
 *
 * http://schema.org/colleagues
 */
var colleagues = 'http://schema.org/colleagues';
/**
 * collection
 *
 * A sub property of object. The collection target of the action.
 *
 * http://schema.org/collection
 */
var collection = 'http://schema.org/collection';
/**
 *
 *
 *
 *
 * http://schema.org/collectionSize
 */
var collectionSize = 'http://schema.org/collectionSize';
/**
 * color
 *
 * The color of the product.
 *
 * http://schema.org/color
 */
var color = 'http://schema.org/color';
/**
 * colorist
 *
 * The individual who adds color to inked drawings.
 *
 * http://schema.org/colorist
 */
var colorist = 'http://schema.org/colorist';
/**
 * comment
 *
 * Comments, typically from users.
 *
 * http://schema.org/comment
 */
var comment = 'http://schema.org/comment';
/**
 * commentCount
 *
 * The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
 *
 * http://schema.org/commentCount
 */
var commentCount = 'http://schema.org/commentCount';
/**
 * commentText
 *
 * The text of the UserComment.
 *
 * http://schema.org/commentText
 */
var commentText = 'http://schema.org/commentText';
/**
 * commentTime
 *
 * The time at which the UserComment was made.
 *
 * http://schema.org/commentTime
 */
var commentTime = 'http://schema.org/commentTime';
/**
 * competencyRequired
 *
 * Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity in order to do something such as earn an Educational Occupational Credential or understand a LearningResource.
 *
 * http://schema.org/competencyRequired
 */
var competencyRequired = 'http://schema.org/competencyRequired';
/**
 * composer
 *
 * The person or organization who wrote a composition, or who is the composer of a work performed at some event.
 *
 * http://schema.org/composer
 */
var composer = 'http://schema.org/composer';
/**
 * comprisedOf
 *
 * Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.
 *
 * http://schema.org/comprisedOf
 */
var comprisedOf = 'http://schema.org/comprisedOf';
/**
 * conditionsOfAccess
 *
 * Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an [[ArchiveComponent]] held by an [[ArchiveOrganization]]. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.\n\nFor example "Available by appointment from the Reading Room" or "Accessible only from logged-in accounts ".
 *
 * http://schema.org/conditionsOfAccess
 */
var conditionsOfAccess = 'http://schema.org/conditionsOfAccess';
/**
 * confirmationNumber
 *
 * A number that confirms the given order or payment has been received.
 *
 * http://schema.org/confirmationNumber
 */
var confirmationNumber = 'http://schema.org/confirmationNumber';
/**
 * connectedTo
 *
 * Other anatomical structures to which this structure is connected.
 *
 * http://schema.org/connectedTo
 */
var connectedTo = 'http://schema.org/connectedTo';
/**
 * constraintProperty
 *
 * Indicates a property used as a constraint. For example, in the definition of a [[StatisticalVariable]]. The value is a property, either from within Schema.org or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org.
 *
 * http://schema.org/constraintProperty
 */
var constraintProperty = 'http://schema.org/constraintProperty';
/**
 * contactOption
 *
 * An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).
 *
 * http://schema.org/contactOption
 */
var contactOption = 'http://schema.org/contactOption';
/**
 * contactPoints
 *
 * A contact point for a person or organization.
 *
 * http://schema.org/contactPoints
 */
var contactPoints = 'http://schema.org/contactPoints';
/**
 * contactType
 *
 * A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.
 *
 * http://schema.org/contactType
 */
var contactType = 'http://schema.org/contactType';
/**
 * contactlessPayment
 *
 * A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.
 *
 * http://schema.org/contactlessPayment
 */
var contactlessPayment = 'http://schema.org/contactlessPayment';
/**
 * containedIn
 *
 * The basic containment relation between a place and one that contains it.
 *
 * http://schema.org/containedIn
 */
var containedIn = 'http://schema.org/containedIn';
/**
 * contentRating
 *
 * Official rating of a piece of content&#x2014;for example, 'MPAA PG-13'.
 *
 * http://schema.org/contentRating
 */
var contentRating = 'http://schema.org/contentRating';
/**
 * contentReferenceTime
 *
 * The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.
 *
 * http://schema.org/contentReferenceTime
 */
var contentReferenceTime = 'http://schema.org/contentReferenceTime';
/**
 * contentSize
 *
 * File size in (mega/kilo)bytes.
 *
 * http://schema.org/contentSize
 */
var contentSize = 'http://schema.org/contentSize';
/**
 * contentType
 *
 * The supported content type(s) for an EntryPoint response.
 *
 * http://schema.org/contentType
 */
var contentType = 'http://schema.org/contentType';
/**
 * contentUrl
 *
 * Actual bytes of the media object, for example the image file or video file.
 *
 * http://schema.org/contentUrl
 */
var contentUrl = 'http://schema.org/contentUrl';
/**
 * contraindication
 *
 * A contraindication for this therapy.
 *
 * http://schema.org/contraindication
 */
var contraindication = 'http://schema.org/contraindication';
/**
 * contributor
 *
 * A secondary contributor to the CreativeWork or Event.
 *
 * http://schema.org/contributor
 */
var contributor = 'http://schema.org/contributor';
/**
 * cookTime
 *
 * The time it takes to actually cook the dish, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
 *
 * http://schema.org/cookTime
 */
var cookTime = 'http://schema.org/cookTime';
/**
 * cookingMethod
 *
 * The method of cooking, such as Frying, Steaming, ...
 *
 * http://schema.org/cookingMethod
 */
var cookingMethod = 'http://schema.org/cookingMethod';
/**
 * copyrightHolder
 *
 * The party holding the legal copyright to the CreativeWork.
 *
 * http://schema.org/copyrightHolder
 */
var copyrightHolder = 'http://schema.org/copyrightHolder';
/**
 * copyrightNotice
 *
 * Text of a notice appropriate for describing the copyright aspects of this Creative Work, ideally indicating the owner of the copyright for the Work.
 *
 * http://schema.org/copyrightNotice
 */
var copyrightNotice = 'http://schema.org/copyrightNotice';
/**
 * copyrightYear
 *
 * The year during which the claimed copyright for the CreativeWork was first asserted.
 *
 * http://schema.org/copyrightYear
 */
var copyrightYear = 'http://schema.org/copyrightYear';
/**
 * correction
 *
 * Indicates a correction to a [[CreativeWork]], either via a [[CorrectionComment]], textually or in another document.
 *
 * http://schema.org/correction
 */
var correction = 'http://schema.org/correction';
/**
 * correctionsPolicy
 *
 * For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
 *
 * http://schema.org/correctionsPolicy
 */
var correctionsPolicy = 'http://schema.org/correctionsPolicy';
/**
 * costCategory
 *
 * The category of cost, such as wholesale, retail, reimbursement cap, etc.
 *
 * http://schema.org/costCategory
 */
var costCategory = 'http://schema.org/costCategory';
/**
 * costCurrency
 *
 * The currency (in 3-letter) of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217.
 *
 * http://schema.org/costCurrency
 */
var costCurrency = 'http://schema.org/costCurrency';
/**
 * costOrigin
 *
 * Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.
 *
 * http://schema.org/costOrigin
 */
var costOrigin = 'http://schema.org/costOrigin';
/**
 * costPerUnit
 *
 * The cost per unit of the drug.
 *
 * http://schema.org/costPerUnit
 */
var costPerUnit = 'http://schema.org/costPerUnit';
/**
 * countriesNotSupported
 *
 * Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
 *
 * http://schema.org/countriesNotSupported
 */
var countriesNotSupported = 'http://schema.org/countriesNotSupported';
/**
 * countriesSupported
 *
 * Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
 *
 * http://schema.org/countriesSupported
 */
var countriesSupported = 'http://schema.org/countriesSupported';
/**
 * countryOfAssembly
 *
 * The place where the product was assembled.
 *
 * http://schema.org/countryOfAssembly
 */
var countryOfAssembly = 'http://schema.org/countryOfAssembly';
/**
 * countryOfLastProcessing
 *
 * The place where the item (typically [[Product]]) was last processed and tested before importation.
 *
 * http://schema.org/countryOfLastProcessing
 */
var countryOfLastProcessing = 'http://schema.org/countryOfLastProcessing';
/**
 * countryOfOrigin
 *
 * The country of origin of something, including products as well as creative  works such as movie and TV content.
 *
 * In the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of [[CreativeWork]] it is difficult to provide fully general guidance, and properties such as [[contentLocation]] and [[locationCreated]] may be more applicable.
 *
 * In the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.
 *
 * http://schema.org/countryOfOrigin
 */
var countryOfOrigin = 'http://schema.org/countryOfOrigin';
/**
 * course
 *
 * A sub property of location. The course where this action was taken.
 *
 * http://schema.org/course
 */
var course = 'http://schema.org/course';
/**
 * courseCode
 *
 * The identifier for the [[Course]] used by the course [[provider]] (e.g. CS101 or 6.001).
 *
 * http://schema.org/courseCode
 */
var courseCode = 'http://schema.org/courseCode';
/**
 * courseMode
 *
 * The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous).
 *
 * http://schema.org/courseMode
 */
var courseMode = 'http://schema.org/courseMode';
/**
 * coursePrerequisites
 *
 * Requirements for taking the Course. May be completion of another [[Course]] or a textual description like "permission of instructor". Requirements may be a pre-requisite competency, referenced using [[AlignmentObject]].
 *
 * http://schema.org/coursePrerequisites
 */
var coursePrerequisites = 'http://schema.org/coursePrerequisites';
/**
 * courseSchedule
 *
 * Represents the length and pace of a course, expressed as a [[Schedule]].
 *
 * http://schema.org/courseSchedule
 */
var courseSchedule = 'http://schema.org/courseSchedule';
/**
 * courseWorkload
 *
 * The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, "2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week".
 *
 * http://schema.org/courseWorkload
 */
var courseWorkload = 'http://schema.org/courseWorkload';
/**
 * coverageEndTime
 *
 * The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
 *
 * http://schema.org/coverageEndTime
 */
var coverageEndTime = 'http://schema.org/coverageEndTime';
/**
 * coverageStartTime
 *
 * The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
 *
 * http://schema.org/coverageStartTime
 */
var coverageStartTime = 'http://schema.org/coverageStartTime';
/**
 * creativeWorkStatus
 *
 * The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.
 *
 * http://schema.org/creativeWorkStatus
 */
var creativeWorkStatus = 'http://schema.org/creativeWorkStatus';
/**
 * credentialCategory
 *
 * The category or type of credential being described, for example "degree”, “certificate”, “badge”, or more specific term.
 *
 * http://schema.org/credentialCategory
 */
var credentialCategory = 'http://schema.org/credentialCategory';
/**
 * creditText
 *
 * Text that can be used to credit person(s) and/or organization(s) associated with a published Creative Work.
 *
 * http://schema.org/creditText
 */
var creditText = 'http://schema.org/creditText';
/**
 * creditedTo
 *
 * The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga.
 *
 * http://schema.org/creditedTo
 */
var creditedTo = 'http://schema.org/creditedTo';
/**
 * cssSelector
 *
 * A CSS selector, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
 *
 * http://schema.org/cssSelector
 */
var cssSelector = 'http://schema.org/cssSelector';
/**
 * currenciesAccepted
 *
 * The currency accepted.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
 *
 * http://schema.org/currenciesAccepted
 */
var currenciesAccepted = 'http://schema.org/currenciesAccepted';
/**
 * currency
 *
 * The currency in which the monetary amount is expressed.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
 *
 * http://schema.org/currency
 */
var currency = 'http://schema.org/currency';
/**
 * currentExchangeRate
 *
 * The current price of a currency.
 *
 * http://schema.org/currentExchangeRate
 */
var currentExchangeRate = 'http://schema.org/currentExchangeRate';
/**
 * customer
 *
 * Party placing the order or paying the invoice.
 *
 * http://schema.org/customer
 */
var customer = 'http://schema.org/customer';
/**
 * customerRemorseReturnFees
 *
 * The type of return fees if the product is returned due to customer remorse.
 *
 * http://schema.org/customerRemorseReturnFees
 */
var customerRemorseReturnFees = 'http://schema.org/customerRemorseReturnFees';
/**
 * customerRemorseReturnLabelSource
 *
 * The method (from an enumeration) by which the customer obtains a return shipping label for a product returned due to customer remorse.
 *
 * http://schema.org/customerRemorseReturnLabelSource
 */
var customerRemorseReturnLabelSource = 'http://schema.org/customerRemorseReturnLabelSource';
/**
 * customerRemorseReturnShippingFeesAmount
 *
 * The amount of shipping costs if a product is returned due to customer remorse. Applicable when property [[customerRemorseReturnFees]] equals [[ReturnShippingFees]].
 *
 * http://schema.org/customerRemorseReturnShippingFeesAmount
 */
var customerRemorseReturnShippingFeesAmount = 'http://schema.org/customerRemorseReturnShippingFeesAmount';
/**
 * cutoffTime
 *
 * Order cutoff time allows merchants to describe the time after which they will no longer process orders received on that day. For orders processed after cutoff time, one day gets added to the delivery time estimate. This property is expected to be most typically used via the [[ShippingRateSettings]] publication pattern. The time is indicated using the ISO-8601 Time format, e.g. "23:30:00-05:00" would represent 6:30 pm Eastern Standard Time (EST) which is 5 hours behind Coordinated Universal Time (UTC).
 *
 * http://schema.org/cutoffTime
 */
var cutoffTime = 'http://schema.org/cutoffTime';
/**
 * cvdCollectionDate
 *
 * collectiondate - Date for which patient counts are reported.
 *
 * http://schema.org/cvdCollectionDate
 */
var cvdCollectionDate = 'http://schema.org/cvdCollectionDate';
/**
 * cvdFacilityCounty
 *
 * Name of the County of the NHSN facility that this data record applies to. Use [[cvdFacilityId]] to identify the facility. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.
 *
 * http://schema.org/cvdFacilityCounty
 */
var cvdFacilityCounty = 'http://schema.org/cvdFacilityCounty';
/**
 * cvdFacilityId
 *
 * Identifier of the NHSN facility that this data record applies to. Use [[cvdFacilityCounty]] to indicate the county. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.
 *
 * http://schema.org/cvdFacilityId
 */
var cvdFacilityId = 'http://schema.org/cvdFacilityId';
/**
 * cvdNumBeds
 *
 * numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, licensed, and overflow (surge) beds used for inpatients.
 *
 * http://schema.org/cvdNumBeds
 */
var cvdNumBeds = 'http://schema.org/cvdNumBeds';
/**
 * cvdNumBedsOcc
 *
 * numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient beds that are occupied.
 *
 * http://schema.org/cvdNumBedsOcc
 */
var cvdNumBedsOcc = 'http://schema.org/cvdNumBedsOcc';
/**
 * cvdNumC19Died
 *
 * numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location.
 *
 * http://schema.org/cvdNumC19Died
 */
var cvdNumC19Died = 'http://schema.org/cvdNumC19Died';
/**
 * cvdNumC19HOPats
 *
 * numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient care location with onset of suspected or confirmed COVID-19 14 or more days after hospitalization.
 *
 * http://schema.org/cvdNumC19HOPats
 */
var cvdNumC19HOPats = 'http://schema.org/cvdNumC19HOPats';
/**
 * cvdNumC19HospPats
 *
 * numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient care location who have suspected or confirmed COVID-19.
 *
 * http://schema.org/cvdNumC19HospPats
 */
var cvdNumC19HospPats = 'http://schema.org/cvdNumC19HospPats';
/**
 * cvdNumC19MechVentPats
 *
 * numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in an NHSN inpatient care location who have suspected or confirmed COVID-19 and are on a mechanical ventilator.
 *
 * http://schema.org/cvdNumC19MechVentPats
 */
var cvdNumC19MechVentPats = 'http://schema.org/cvdNumC19MechVentPats';
/**
 * cvdNumC19OFMechVentPats
 *
 * numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator.
 *
 * http://schema.org/cvdNumC19OFMechVentPats
 */
var cvdNumC19OFMechVentPats = 'http://schema.org/cvdNumC19OFMechVentPats';
/**
 * cvdNumC19OverflowPats
 *
 * numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed.
 *
 * http://schema.org/cvdNumC19OverflowPats
 */
var cvdNumC19OverflowPats = 'http://schema.org/cvdNumC19OverflowPats';
/**
 * cvdNumICUBeds
 *
 * numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit (ICU) beds.
 *
 * http://schema.org/cvdNumICUBeds
 */
var cvdNumICUBeds = 'http://schema.org/cvdNumICUBeds';
/**
 * cvdNumICUBedsOcc
 *
 * numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds that are occupied.
 *
 * http://schema.org/cvdNumICUBedsOcc
 */
var cvdNumICUBedsOcc = 'http://schema.org/cvdNumICUBedsOcc';
/**
 * cvdNumTotBeds
 *
 * numtotbeds - ALL HOSPITAL BEDS: Total number of all inpatient and outpatient beds, including all staffed, ICU, licensed, and overflow (surge) beds used for inpatients or outpatients.
 *
 * http://schema.org/cvdNumTotBeds
 */
var cvdNumTotBeds = 'http://schema.org/cvdNumTotBeds';
/**
 * cvdNumVent
 *
 * numvent - MECHANICAL VENTILATORS: Total number of ventilators available.
 *
 * http://schema.org/cvdNumVent
 */
var cvdNumVent = 'http://schema.org/cvdNumVent';
/**
 * cvdNumVentUse
 *
 * numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in use.
 *
 * http://schema.org/cvdNumVentUse
 */
var cvdNumVentUse = 'http://schema.org/cvdNumVentUse';
/**
 * dataFeedElement
 *
 * An item within a data feed. Data feeds may have many elements.
 *
 * http://schema.org/dataFeedElement
 */
var dataFeedElement = 'http://schema.org/dataFeedElement';
/**
 * datasetTimeInterval
 *
 * The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).
 *
 * http://schema.org/datasetTimeInterval
 */
var datasetTimeInterval = 'http://schema.org/datasetTimeInterval';
/**
 * dateDeleted
 *
 * The datetime the item was removed from the DataFeed.
 *
 * http://schema.org/dateDeleted
 */
var dateDeleted = 'http://schema.org/dateDeleted';
/**
 * dateIssued
 *
 * The date the ticket was issued.
 *
 * http://schema.org/dateIssued
 */
var dateIssued = 'http://schema.org/dateIssued';
/**
 * dateModified
 *
 * The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.
 *
 * http://schema.org/dateModified
 */
var dateModified = 'http://schema.org/dateModified';
/**
 * datePosted
 *
 * Publication date of an online listing.
 *
 * http://schema.org/datePosted
 */
var datePosted = 'http://schema.org/datePosted';
/**
 * datePublished
 *
 * Date of first broadcast/publication.
 *
 * http://schema.org/datePublished
 */
var datePublished = 'http://schema.org/datePublished';
/**
 * dateRead
 *
 * The date/time at which the message has been read by the recipient if a single recipient exists.
 *
 * http://schema.org/dateRead
 */
var dateRead = 'http://schema.org/dateRead';
/**
 * dateReceived
 *
 * The date/time the message was received if a single recipient exists.
 *
 * http://schema.org/dateReceived
 */
var dateReceived = 'http://schema.org/dateReceived';
/**
 * dateSent
 *
 * The date/time at which the message was sent.
 *
 * http://schema.org/dateSent
 */
var dateSent = 'http://schema.org/dateSent';
/**
 * dateVehicleFirstRegistered
 *
 * The date of the first registration of the vehicle with the respective public authorities.
 *
 * http://schema.org/dateVehicleFirstRegistered
 */
var dateVehicleFirstRegistered = 'http://schema.org/dateVehicleFirstRegistered';
/**
 * dateline
 *
 * A [dateline](https://en.wikipedia.org/wiki/Dateline) is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.
 *
 * Structured representations of dateline-related information can also be expressed more explicitly using [[locationCreated]] (which represents where a work was created, e.g. where a news report was written).  For location depicted or described in the content, use [[contentLocation]].
 *
 * Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines".
 *
 *
 * http://schema.org/dateline
 */
var dateline = 'http://schema.org/dateline';
/**
 * dayOfWeek
 *
 * The day of the week for which these opening hours are valid.
 *
 * http://schema.org/dayOfWeek
 */
var dayOfWeek = 'http://schema.org/dayOfWeek';
/**
 * deathDate
 *
 * Date of death.
 *
 * http://schema.org/deathDate
 */
var deathDate = 'http://schema.org/deathDate';
/**
 * deathPlace
 *
 * The place where the person died.
 *
 * http://schema.org/deathPlace
 */
var deathPlace = 'http://schema.org/deathPlace';
/**
 * defaultValue
 *
 * The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
 *
 * http://schema.org/defaultValue
 */
var defaultValue = 'http://schema.org/defaultValue';
/**
 * deliveryAddress
 *
 * Destination address.
 *
 * http://schema.org/deliveryAddress
 */
var deliveryAddress = 'http://schema.org/deliveryAddress';
/**
 * deliveryLeadTime
 *
 * The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.
 *
 * http://schema.org/deliveryLeadTime
 */
var deliveryLeadTime = 'http://schema.org/deliveryLeadTime';
/**
 * deliveryMethod
 *
 * A sub property of instrument. The method of delivery.
 *
 * http://schema.org/deliveryMethod
 */
var deliveryMethod = 'http://schema.org/deliveryMethod';
/**
 * deliveryStatus
 *
 * New entry added as the package passes through each leg of its journey (from shipment to final delivery).
 *
 * http://schema.org/deliveryStatus
 */
var deliveryStatus = 'http://schema.org/deliveryStatus';
/**
 * deliveryTime
 *
 * The total delay between the receipt of the order and the goods reaching the final customer.
 *
 * http://schema.org/deliveryTime
 */
var deliveryTime = 'http://schema.org/deliveryTime';
/**
 * department
 *
 * A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
 *
 * http://schema.org/department
 */
var department = 'http://schema.org/department';
/**
 * departureAirport
 *
 * The airport where the flight originates.
 *
 * http://schema.org/departureAirport
 */
var departureAirport = 'http://schema.org/departureAirport';
/**
 * departureBoatTerminal
 *
 * The terminal or port from which the boat departs.
 *
 * http://schema.org/departureBoatTerminal
 */
var departureBoatTerminal = 'http://schema.org/departureBoatTerminal';
/**
 * departureBusStop
 *
 * The stop or station from which the bus departs.
 *
 * http://schema.org/departureBusStop
 */
var departureBusStop = 'http://schema.org/departureBusStop';
/**
 * departureGate
 *
 * Identifier of the flight's departure gate.
 *
 * http://schema.org/departureGate
 */
var departureGate = 'http://schema.org/departureGate';
/**
 * departurePlatform
 *
 * The platform from which the train departs.
 *
 * http://schema.org/departurePlatform
 */
var departurePlatform = 'http://schema.org/departurePlatform';
/**
 * departureStation
 *
 * The station from which the train departs.
 *
 * http://schema.org/departureStation
 */
var departureStation = 'http://schema.org/departureStation';
/**
 * departureTerminal
 *
 * Identifier of the flight's departure terminal.
 *
 * http://schema.org/departureTerminal
 */
var departureTerminal = 'http://schema.org/departureTerminal';
/**
 * departureTime
 *
 * The expected departure time.
 *
 * http://schema.org/departureTime
 */
var departureTime = 'http://schema.org/departureTime';
/**
 * dependencies
 *
 * Prerequisites needed to fulfill steps in article.
 *
 * http://schema.org/dependencies
 */
var dependencies = 'http://schema.org/dependencies';
/**
 * depth
 *
 * The depth of the item.
 *
 * http://schema.org/depth
 */
var depth = 'http://schema.org/depth';
/**
 * device
 *
 * Device required to run the application. Used in cases where a specific make/model is required to run the application.
 *
 * http://schema.org/device
 */
var device = 'http://schema.org/device';
/**
 * diagnosis
 *
 * One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.
 *
 * http://schema.org/diagnosis
 */
var diagnosis = 'http://schema.org/diagnosis';
/**
 * diagram
 *
 * An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.
 *
 * http://schema.org/diagram
 */
var diagram = 'http://schema.org/diagram';
/**
 * diet
 *
 * A sub property of instrument. The diet used in this action.
 *
 * http://schema.org/diet
 */
var diet = 'http://schema.org/diet';
/**
 * dietFeatures
 *
 * Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.
 *
 * http://schema.org/dietFeatures
 */
var dietFeatures = 'http://schema.org/dietFeatures';
/**
 * differentialDiagnosis
 *
 * One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.
 *
 * http://schema.org/differentialDiagnosis
 */
var differentialDiagnosis = 'http://schema.org/differentialDiagnosis';
/**
 * directApply
 *
 * Indicates whether an [[url]] that is associated with a [[JobPosting]] enables direct application for the job, via the posting website. A job posting is considered to have directApply of [[True]] if an application process for the specified job can be directly initiated via the url(s) given (noting that e.g. multiple internet domains might nevertheless be involved at an implementation level). A value of [[False]] is appropriate if there is no clear path to applying directly online for the specified job, navigating directly from the JobPosting url(s) supplied.
 *
 * http://schema.org/directApply
 */
var directApply = 'http://schema.org/directApply';
/**
 * directors
 *
 * A director of e.g. TV, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/directors
 */
var directors = 'http://schema.org/directors';
/**
 * disambiguatingDescription
 *
 * A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
 *
 * http://schema.org/disambiguatingDescription
 */
var disambiguatingDescription = 'http://schema.org/disambiguatingDescription';
/**
 * discount
 *
 * Any discount applied (to an Order).
 *
 * http://schema.org/discount
 */
var discount = 'http://schema.org/discount';
/**
 * discountCode
 *
 * Code used to redeem a discount.
 *
 * http://schema.org/discountCode
 */
var discountCode = 'http://schema.org/discountCode';
/**
 * discountCurrency
 *
 * The currency of the discount.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
 *
 * http://schema.org/discountCurrency
 */
var discountCurrency = 'http://schema.org/discountCurrency';
/**
 * discusses
 *
 * Specifies the CreativeWork associated with the UserComment.
 *
 * http://schema.org/discusses
 */
var discusses = 'http://schema.org/discusses';
/**
 * discussionUrl
 *
 * A link to the page containing the comments of the CreativeWork.
 *
 * http://schema.org/discussionUrl
 */
var discussionUrl = 'http://schema.org/discussionUrl';
/**
 * diseasePreventionInfo
 *
 * Information about disease prevention.
 *
 * http://schema.org/diseasePreventionInfo
 */
var diseasePreventionInfo = 'http://schema.org/diseasePreventionInfo';
/**
 * diseaseSpreadStatistics
 *
 * Statistical information about the spread of a disease, either as [[WebContent]], or
 *   described directly as a [[Dataset]], or the specific [[Observation]]s in the dataset. When a [[WebContent]] URL is
 *   provided, the page indicated might also contain more such markup.
 *
 * http://schema.org/diseaseSpreadStatistics
 */
var diseaseSpreadStatistics = 'http://schema.org/diseaseSpreadStatistics';
/**
 * dissolutionDate
 *
 * The date that this organization was dissolved.
 *
 * http://schema.org/dissolutionDate
 */
var dissolutionDate = 'http://schema.org/dissolutionDate';
/**
 * distance
 *
 * The distance travelled, e.g. exercising or travelling.
 *
 * http://schema.org/distance
 */
var distance = 'http://schema.org/distance';
/**
 * distinguishingSign
 *
 * One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.
 *
 * http://schema.org/distinguishingSign
 */
var distinguishingSign = 'http://schema.org/distinguishingSign';
/**
 * distribution
 *
 * A downloadable form of this dataset, at a specific location, in a specific format. This property can be repeated if different variations are available. There is no expectation that different downloadable distributions must contain exactly equivalent information (see also [DCAT](https://www.w3.org/TR/vocab-dcat-3/#Class:Distribution) on this point). Different distributions might include or exclude different subsets of the entire dataset, for example.
 *
 * http://schema.org/distribution
 */
var distribution = 'http://schema.org/distribution';
/**
 * diversityPolicy
 *
 * Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
 *
 * http://schema.org/diversityPolicy
 */
var diversityPolicy = 'http://schema.org/diversityPolicy';
/**
 * diversityStaffingReport
 *
 * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
 *
 * http://schema.org/diversityStaffingReport
 */
var diversityStaffingReport = 'http://schema.org/diversityStaffingReport';
/**
 * documentation
 *
 * Further documentation describing the Web API in more detail.
 *
 * http://schema.org/documentation
 */
var documentation = 'http://schema.org/documentation';
/**
 * doesNotShip
 *
 * Indicates when shipping to a particular [[shippingDestination]] is not available.
 *
 * http://schema.org/doesNotShip
 */
var doesNotShip = 'http://schema.org/doesNotShip';
/**
 * domainIncludes
 *
 * Relates a property to a class that is (one of) the type(s) the property is expected to be used on.
 *
 * http://schema.org/domainIncludes
 */
var domainIncludes = 'http://schema.org/domainIncludes';
/**
 * domiciledMortgage
 *
 * Whether borrower is a resident of the jurisdiction where the property is located.
 *
 * http://schema.org/domiciledMortgage
 */
var domiciledMortgage = 'http://schema.org/domiciledMortgage';
/**
 * doorTime
 *
 * The time admission will commence.
 *
 * http://schema.org/doorTime
 */
var doorTime = 'http://schema.org/doorTime';
/**
 * dosageForm
 *
 * A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.
 *
 * http://schema.org/dosageForm
 */
var dosageForm = 'http://schema.org/dosageForm';
/**
 * doseSchedule
 *
 * A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.
 *
 * http://schema.org/doseSchedule
 */
var doseSchedule = 'http://schema.org/doseSchedule';
/**
 * doseUnit
 *
 * The unit of the dose, e.g. 'mg'.
 *
 * http://schema.org/doseUnit
 */
var doseUnit = 'http://schema.org/doseUnit';
/**
 * doseValue
 *
 * The value of the dose, e.g. 500.
 *
 * http://schema.org/doseValue
 */
var doseValue = 'http://schema.org/doseValue';
/**
 * downPayment
 *
 * a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.
 *
 * http://schema.org/downPayment
 */
var downPayment = 'http://schema.org/downPayment';
/**
 * downloadUrl
 *
 * If the file can be downloaded, URL to download the binary.
 *
 * http://schema.org/downloadUrl
 */
var downloadUrl = 'http://schema.org/downloadUrl';
/**
 * downvoteCount
 *
 * The number of downvotes this question, answer or comment has received from the community.
 *
 * http://schema.org/downvoteCount
 */
var downvoteCount = 'http://schema.org/downvoteCount';
/**
 * drainsTo
 *
 * The vasculature that the vein drains into.
 *
 * http://schema.org/drainsTo
 */
var drainsTo = 'http://schema.org/drainsTo';
/**
 * driveWheelConfiguration
 *
 * The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.
 *
 * http://schema.org/driveWheelConfiguration
 */
var driveWheelConfiguration = 'http://schema.org/driveWheelConfiguration';
/**
 * dropoffLocation
 *
 * Where a rental car can be dropped off.
 *
 * http://schema.org/dropoffLocation
 */
var dropoffLocation = 'http://schema.org/dropoffLocation';
/**
 * dropoffTime
 *
 * When a rental car can be dropped off.
 *
 * http://schema.org/dropoffTime
 */
var dropoffTime = 'http://schema.org/dropoffTime';
/**
 * drug
 *
 * Specifying a drug or medicine used in a medication procedure.
 *
 * http://schema.org/drug
 */
var drug = 'http://schema.org/drug';
/**
 * drugClass
 *
 * The class of drug this belongs to (e.g., statins).
 *
 * http://schema.org/drugClass
 */
var drugClass = 'http://schema.org/drugClass';
/**
 * drugUnit
 *
 * The unit in which the drug is measured, e.g. '5 mg tablet'.
 *
 * http://schema.org/drugUnit
 */
var drugUnit = 'http://schema.org/drugUnit';
/**
 * duns
 *
 * The Dun & Bradstreet DUNS number for identifying an organization or business person.
 *
 * http://schema.org/duns
 */
var duns = 'http://schema.org/duns';
/**
 * duplicateTherapy
 *
 * A therapy that duplicates or overlaps this one.
 *
 * http://schema.org/duplicateTherapy
 */
var duplicateTherapy = 'http://schema.org/duplicateTherapy';
/**
 * durationOfWarranty
 *
 * The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.
 *
 * http://schema.org/durationOfWarranty
 */
var durationOfWarranty = 'http://schema.org/durationOfWarranty';
/**
 * duringMedia
 *
 * A media object representing the circumstances while performing this direction.
 *
 * http://schema.org/duringMedia
 */
var duringMedia = 'http://schema.org/duringMedia';
/**
 * earlyPrepaymentPenalty
 *
 * The amount to be paid as a penalty in the event of early payment of the loan.
 *
 * http://schema.org/earlyPrepaymentPenalty
 */
var earlyPrepaymentPenalty = 'http://schema.org/earlyPrepaymentPenalty';
/**
 * editEIDR
 *
 * An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing a specific edit / edition for a work of film or television.
 *
 * For example, the motion picture known as "Ghostbusters" whose [[titleEIDR]] is "10.5240/7EC7-228A-510A-053E-CBB8-J" has several edits, e.g. "10.5240/1F2A-E1C5-680A-14C6-E76B-I" and "10.5240/8A35-3BEE-6497-5D12-9E4F-3".
 *
 * Since schema.org types like [[Movie]] and [[TVEpisode]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.
 *
 *
 * http://schema.org/editEIDR
 */
var editEIDR = 'http://schema.org/editEIDR';
/**
 * editor
 *
 * Specifies the Person who edited the CreativeWork.
 *
 * http://schema.org/editor
 */
var editor = 'http://schema.org/editor';
/**
 * eduQuestionType
 *
 * For questions that are part of learning resources (e.g. Quiz), eduQuestionType indicates the format of question being given. Example: "Multiple choice", "Open ended", "Flashcard".
 *
 * http://schema.org/eduQuestionType
 */
var eduQuestionType = 'http://schema.org/eduQuestionType';
/**
 * educationRequirements
 *
 * Educational background needed for the position or Occupation.
 *
 * http://schema.org/educationRequirements
 */
var educationRequirements = 'http://schema.org/educationRequirements';
/**
 * educationalAlignment
 *
 * An alignment to an established educational framework.
 *
 * This property should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.
 *
 * http://schema.org/educationalAlignment
 */
var educationalAlignment = 'http://schema.org/educationalAlignment';
/**
 * educationalCredentialAwarded
 *
 * A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.
 *
 * http://schema.org/educationalCredentialAwarded
 */
var educationalCredentialAwarded = 'http://schema.org/educationalCredentialAwarded';
/**
 * educationalFramework
 *
 * The framework to which the resource being described is aligned.
 *
 * http://schema.org/educationalFramework
 */
var educationalFramework = 'http://schema.org/educationalFramework';
/**
 * educationalLevel
 *
 * The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.
 *
 * http://schema.org/educationalLevel
 */
var educationalLevel = 'http://schema.org/educationalLevel';
/**
 * educationalProgramMode
 *
 * Similar to courseMode, the medium or means of delivery of the program as a whole. The value may either be a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).
 *
 * http://schema.org/educationalProgramMode
 */
var educationalProgramMode = 'http://schema.org/educationalProgramMode';
/**
 * educationalRole
 *
 * An educationalRole of an EducationalAudience.
 *
 * http://schema.org/educationalRole
 */
var educationalRole = 'http://schema.org/educationalRole';
/**
 * educationalUse
 *
 * The purpose of a work in the context of education; for example, 'assignment', 'group work'.
 *
 * http://schema.org/educationalUse
 */
var educationalUse = 'http://schema.org/educationalUse';
/**
 * elevation
 *
 * The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). Values may be of the form 'NUMBER UNIT\_OF\_MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.
 *
 * http://schema.org/elevation
 */
var elevation = 'http://schema.org/elevation';
/**
 * eligibilityToWorkRequirement
 *
 * The legal requirements such as citizenship, visa and other documentation required for an applicant to this job.
 *
 * http://schema.org/eligibilityToWorkRequirement
 */
var eligibilityToWorkRequirement = 'http://schema.org/eligibilityToWorkRequirement';
/**
 * eligibleCustomerType
 *
 * The type(s) of customers for which the given offer is valid.
 *
 * http://schema.org/eligibleCustomerType
 */
var eligibleCustomerType = 'http://schema.org/eligibleCustomerType';
/**
 * eligibleDuration
 *
 * The duration for which the given offer is valid.
 *
 * http://schema.org/eligibleDuration
 */
var eligibleDuration = 'http://schema.org/eligibleDuration';
/**
 * eligibleQuantity
 *
 * The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.
 *
 * http://schema.org/eligibleQuantity
 */
var eligibleQuantity = 'http://schema.org/eligibleQuantity';
/**
 * eligibleRegion
 *
 * The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\n\nSee also [[ineligibleRegion]].
 *
 *
 * http://schema.org/eligibleRegion
 */
var eligibleRegion = 'http://schema.org/eligibleRegion';
/**
 * eligibleTransactionVolume
 *
 * The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.
 *
 * http://schema.org/eligibleTransactionVolume
 */
var eligibleTransactionVolume = 'http://schema.org/eligibleTransactionVolume';
/**
 * email
 *
 * Email address.
 *
 * http://schema.org/email
 */
var email = 'http://schema.org/email';
/**
 * embedUrl
 *
 * A URL pointing to a player for a specific video. In general, this is the information in the ```src``` element of an ```embed``` tag and should not be the same as the content of the ```loc``` tag.
 *
 * http://schema.org/embedUrl
 */
var embedUrl = 'http://schema.org/embedUrl';
/**
 * embeddedTextCaption
 *
 * Represents textual captioning from a [[MediaObject]], e.g. text of a 'meme'.
 *
 * http://schema.org/embeddedTextCaption
 */
var embeddedTextCaption = 'http://schema.org/embeddedTextCaption';
/**
 * emissionsCO2
 *
 * The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put "g/km" into the unitText property of that value, since there is no UN/CEFACT Common Code for "g/km".
 *
 * http://schema.org/emissionsCO2
 */
var emissionsCO2 = 'http://schema.org/emissionsCO2';
/**
 * employees
 *
 * People working for this organization.
 *
 * http://schema.org/employees
 */
var employees = 'http://schema.org/employees';
/**
 * employerOverview
 *
 * A description of the employer, career opportunities and work environment for this position.
 *
 * http://schema.org/employerOverview
 */
var employerOverview = 'http://schema.org/employerOverview';
/**
 * employmentType
 *
 * Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).
 *
 * http://schema.org/employmentType
 */
var employmentType = 'http://schema.org/employmentType';
/**
 * employmentUnit
 *
 * Indicates the department, unit and/or facility where the employee reports and/or in which the job is to be performed.
 *
 * http://schema.org/employmentUnit
 */
var employmentUnit = 'http://schema.org/employmentUnit';
/**
 * encodingType
 *
 * The supported encoding type(s) for an EntryPoint request.
 *
 * http://schema.org/encodingType
 */
var encodingType = 'http://schema.org/encodingType';
/**
 * encodings
 *
 * A media object that encodes this CreativeWork.
 *
 * http://schema.org/encodings
 */
var encodings = 'http://schema.org/encodings';
/**
 * endDate
 *
 * The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
 *
 * http://schema.org/endDate
 */
var endDate = 'http://schema.org/endDate';
/**
 * endOffset
 *
 * The end time of the clip expressed as the number of seconds from the beginning of the work.
 *
 * http://schema.org/endOffset
 */
var endOffset = 'http://schema.org/endOffset';
/**
 * endTime
 *
 * The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. E.g. John wrote a book from January to *December*. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
 *
 * http://schema.org/endTime
 */
var endTime = 'http://schema.org/endTime';
/**
 * endorsee
 *
 * A sub property of participant. The person/organization being supported.
 *
 * http://schema.org/endorsee
 */
var endorsee = 'http://schema.org/endorsee';
/**
 * endorsers
 *
 * People or organizations that endorse the plan.
 *
 * http://schema.org/endorsers
 */
var endorsers = 'http://schema.org/endorsers';
/**
 * energyEfficiencyScaleMax
 *
 * Specifies the most energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.
 *
 * http://schema.org/energyEfficiencyScaleMax
 */
var energyEfficiencyScaleMax = 'http://schema.org/energyEfficiencyScaleMax';
/**
 * energyEfficiencyScaleMin
 *
 * Specifies the least energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.
 *
 * http://schema.org/energyEfficiencyScaleMin
 */
var energyEfficiencyScaleMin = 'http://schema.org/energyEfficiencyScaleMin';
/**
 * engineDisplacement
 *
 * The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. \n\nTypical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches\n* Note 1: You can link to information about how the given value has been determined using the [[valueReference]] property.\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/engineDisplacement
 */
var engineDisplacement = 'http://schema.org/engineDisplacement';
/**
 * enginePower
 *
 * The power of the vehicle's engine.
 *     Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)\n\n* Note 1: There are many different ways of measuring an engine's power. For an overview, see  [http://en.wikipedia.org/wiki/Horsepower#Engine\_power\_test\_codes](http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes).\n* Note 2: You can link to information about how the given value has been determined using the [[valueReference]] property.\n* Note 3: You can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/enginePower
 */
var enginePower = 'http://schema.org/enginePower';
/**
 * engineType
 *
 * The type of engine or engines powering the vehicle.
 *
 * http://schema.org/engineType
 */
var engineType = 'http://schema.org/engineType';
/**
 * entertainmentBusiness
 *
 * A sub property of location. The entertainment business where the action occurred.
 *
 * http://schema.org/entertainmentBusiness
 */
var entertainmentBusiness = 'http://schema.org/entertainmentBusiness';
/**
 * epidemiology
 *
 * The characteristics of associated patients, such as age, gender, race etc.
 *
 * http://schema.org/epidemiology
 */
var epidemiology = 'http://schema.org/epidemiology';
/**
 * episodeNumber
 *
 * Position of the episode within an ordered group of episodes.
 *
 * http://schema.org/episodeNumber
 */
var episodeNumber = 'http://schema.org/episodeNumber';
/**
 * episodes
 *
 * An episode of a TV/radio series or season.
 *
 * http://schema.org/episodes
 */
var episodes = 'http://schema.org/episodes';
/**
 * equal
 *
 * This ordering relation for qualitative values indicates that the subject is equal to the object.
 *
 * http://schema.org/equal
 */
var equal = 'http://schema.org/equal';
/**
 * error
 *
 * For failed actions, more information on the cause of the failure.
 *
 * http://schema.org/error
 */
var error = 'http://schema.org/error';
/**
 * estimatedCost
 *
 * The estimated cost of the supply or supplies consumed when performing instructions.
 *
 * http://schema.org/estimatedCost
 */
var estimatedCost = 'http://schema.org/estimatedCost';
/**
 * estimatedFlightDuration
 *
 * The estimated time the flight will take.
 *
 * http://schema.org/estimatedFlightDuration
 */
var estimatedFlightDuration = 'http://schema.org/estimatedFlightDuration';
/**
 * estimatedSalary
 *
 * An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.
 *
 * http://schema.org/estimatedSalary
 */
var estimatedSalary = 'http://schema.org/estimatedSalary';
/**
 * estimatesRiskOf
 *
 * The condition, complication, or symptom whose risk is being estimated.
 *
 * http://schema.org/estimatesRiskOf
 */
var estimatesRiskOf = 'http://schema.org/estimatesRiskOf';
/**
 * ethicsPolicy
 *
 * Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
 *
 * http://schema.org/ethicsPolicy
 */
var ethicsPolicy = 'http://schema.org/ethicsPolicy';
/**
 * eventAttendanceMode
 *
 * The eventAttendanceMode of an event indicates whether it occurs online, offline, or a mix.
 *
 * http://schema.org/eventAttendanceMode
 */
var eventAttendanceMode = 'http://schema.org/eventAttendanceMode';
/**
 * eventSchedule
 *
 * Associates an [[Event]] with a [[Schedule]]. There are circumstances where it is preferable to share a schedule for a series of
 *       repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly
 *       gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An [[Event]] that
 *       is associated with a [[Schedule]] using this property should not have [[startDate]] or [[endDate]] properties. These are instead defined within the associated
 *       [[Schedule]], this avoids any ambiguity for clients using the data. The property might have repeated values to specify different schedules, e.g. for different months
 *       or seasons.
 *
 * http://schema.org/eventSchedule
 */
var eventSchedule = 'http://schema.org/eventSchedule';
/**
 * eventStatus
 *
 * An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.
 *
 * http://schema.org/eventStatus
 */
var eventStatus = 'http://schema.org/eventStatus';
/**
 * events
 *
 * Upcoming or past events associated with this place or organization.
 *
 * http://schema.org/events
 */
var events = 'http://schema.org/events';
/**
 * evidenceLevel
 *
 * Strength of evidence of the data used to formulate the guideline (enumerated).
 *
 * http://schema.org/evidenceLevel
 */
var evidenceLevel = 'http://schema.org/evidenceLevel';
/**
 * evidenceOrigin
 *
 * Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.
 *
 * http://schema.org/evidenceOrigin
 */
var evidenceOrigin = 'http://schema.org/evidenceOrigin';
/**
 * exceptDate
 *
 * Defines a [[Date]] or [[DateTime]] during which a scheduled [[Event]] will not take place. The property allows exceptions to
 *       a [[Schedule]] to be specified. If an exception is specified as a [[DateTime]] then only the event that would have started at that specific date and time
 *       should be excluded from the schedule. If an exception is specified as a [[Date]] then any event that is scheduled for that 24 hour period should be
 *       excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.
 *
 * http://schema.org/exceptDate
 */
var exceptDate = 'http://schema.org/exceptDate';
/**
 * exchangeRateSpread
 *
 * The difference between the price at which a broker or other intermediary buys and sells foreign currency.
 *
 * http://schema.org/exchangeRateSpread
 */
var exchangeRateSpread = 'http://schema.org/exchangeRateSpread';
/**
 * exercisePlan
 *
 * A sub property of instrument. The exercise plan used on this action.
 *
 * http://schema.org/exercisePlan
 */
var exercisePlan = 'http://schema.org/exercisePlan';
/**
 * exerciseRelatedDiet
 *
 * A sub property of instrument. The diet used in this action.
 *
 * http://schema.org/exerciseRelatedDiet
 */
var exerciseRelatedDiet = 'http://schema.org/exerciseRelatedDiet';
/**
 * exerciseType
 *
 * Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.
 *
 * http://schema.org/exerciseType
 */
var exerciseType = 'http://schema.org/exerciseType';
/**
 * exifData
 *
 * exif data for this object.
 *
 * http://schema.org/exifData
 */
var exifData = 'http://schema.org/exifData';
/**
 * expectedArrivalFrom
 *
 * The earliest date the package may arrive.
 *
 * http://schema.org/expectedArrivalFrom
 */
var expectedArrivalFrom = 'http://schema.org/expectedArrivalFrom';
/**
 * expectedArrivalUntil
 *
 * The latest date the package may arrive.
 *
 * http://schema.org/expectedArrivalUntil
 */
var expectedArrivalUntil = 'http://schema.org/expectedArrivalUntil';
/**
 * expectedPrognosis
 *
 * The likely outcome in either the short term or long term of the medical condition.
 *
 * http://schema.org/expectedPrognosis
 */
var expectedPrognosis = 'http://schema.org/expectedPrognosis';
/**
 * expectsAcceptanceOf
 *
 * An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.
 *
 * http://schema.org/expectsAcceptanceOf
 */
var expectsAcceptanceOf = 'http://schema.org/expectsAcceptanceOf';
/**
 * experienceInPlaceOfEducation
 *
 * Indicates whether a [[JobPosting]] will accept experience (as indicated by [[OccupationalExperienceRequirements]]) in place of its formal educational qualifications (as indicated by [[educationRequirements]]). If true, indicates that satisfying one of these requirements is sufficient.
 *
 * http://schema.org/experienceInPlaceOfEducation
 */
var experienceInPlaceOfEducation = 'http://schema.org/experienceInPlaceOfEducation';
/**
 * experienceRequirements
 *
 * Description of skills and experience needed for the position or Occupation.
 *
 * http://schema.org/experienceRequirements
 */
var experienceRequirements = 'http://schema.org/experienceRequirements';
/**
 * expertConsiderations
 *
 * Medical expert advice related to the plan.
 *
 * http://schema.org/expertConsiderations
 */
var expertConsiderations = 'http://schema.org/expertConsiderations';
/**
 * expires
 *
 * Date the content expires and is no longer useful or available. For example a [[VideoObject]] or [[NewsArticle]] whose availability or relevance is time-limited, or a [[ClaimReview]] fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.
 *
 * http://schema.org/expires
 */
var expires = 'http://schema.org/expires';
/**
 * expressedIn
 *
 * Tissue, organ, biological sample, etc in which activity of this gene has been observed experimentally. For example brain, digestive system.
 *
 * http://schema.org/expressedIn
 */
var expressedIn = 'http://schema.org/expressedIn';
/**
 * familyName
 *
 * Family name. In the U.S., the last name of a Person.
 *
 * http://schema.org/familyName
 */
var familyName = 'http://schema.org/familyName';
/**
 * fatContent
 *
 * The number of grams of fat.
 *
 * http://schema.org/fatContent
 */
var fatContent = 'http://schema.org/fatContent';
/**
 * faxNumber
 *
 * The fax number.
 *
 * http://schema.org/faxNumber
 */
var faxNumber = 'http://schema.org/faxNumber';
/**
 * featureList
 *
 * Features or modules provided by this application (and possibly required by other applications).
 *
 * http://schema.org/featureList
 */
var featureList = 'http://schema.org/featureList';
/**
 * feesAndCommissionsSpecification
 *
 * Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.
 *
 * http://schema.org/feesAndCommissionsSpecification
 */
var feesAndCommissionsSpecification = 'http://schema.org/feesAndCommissionsSpecification';
/**
 * fiberContent
 *
 * The number of grams of fiber.
 *
 * http://schema.org/fiberContent
 */
var fiberContent = 'http://schema.org/fiberContent';
/**
 * fileFormat
 *
 * Media type, typically MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml)) of the content, e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.
 *
 * http://schema.org/fileFormat
 */
var fileFormat = 'http://schema.org/fileFormat';
/**
 * fileSize
 *
 * Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
 *
 * http://schema.org/fileSize
 */
var fileSize = 'http://schema.org/fileSize';
/**
 * financialAidEligible
 *
 * A financial aid type or program which students may use to pay for tuition or fees associated with the program.
 *
 * http://schema.org/financialAidEligible
 */
var financialAidEligible = 'http://schema.org/financialAidEligible';
/**
 * firstAppearance
 *
 * Indicates the first known occurrence of a [[Claim]] in some [[CreativeWork]].
 *
 * http://schema.org/firstAppearance
 */
var firstAppearance = 'http://schema.org/firstAppearance';
/**
 * firstPerformance
 *
 * The date and place the work was first performed.
 *
 * http://schema.org/firstPerformance
 */
var firstPerformance = 'http://schema.org/firstPerformance';
/**
 * flightDistance
 *
 * The distance of the flight.
 *
 * http://schema.org/flightDistance
 */
var flightDistance = 'http://schema.org/flightDistance';
/**
 * flightNumber
 *
 * The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
 *
 * http://schema.org/flightNumber
 */
var flightNumber = 'http://schema.org/flightNumber';
/**
 * floorLevel
 *
 * The floor level for an [[Accommodation]] in a multi-storey building. Since counting
 *   systems [vary internationally](https://en.wikipedia.org/wiki/Storey#Consecutive_number_floor_designations), the local system should be used where possible.
 *
 * http://schema.org/floorLevel
 */
var floorLevel = 'http://schema.org/floorLevel';
/**
 * floorLimit
 *
 * A floor limit is the amount of money above which credit card transactions must be authorized.
 *
 * http://schema.org/floorLimit
 */
var floorLimit = 'http://schema.org/floorLimit';
/**
 * floorSize
 *
 * The size of the accommodation, e.g. in square meter or squarefoot.
 * Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard
 *
 * http://schema.org/floorSize
 */
var floorSize = 'http://schema.org/floorSize';
/**
 * followee
 *
 * A sub property of object. The person or organization being followed.
 *
 * http://schema.org/followee
 */
var followee = 'http://schema.org/followee';
/**
 * follows
 *
 * The most generic uni-directional social relation.
 *
 * http://schema.org/follows
 */
var follows = 'http://schema.org/follows';
/**
 * followup
 *
 * Typical or recommended followup care after the procedure is performed.
 *
 * http://schema.org/followup
 */
var followup = 'http://schema.org/followup';
/**
 * foodEstablishment
 *
 * A sub property of location. The specific food establishment where the action occurred.
 *
 * http://schema.org/foodEstablishment
 */
var foodEstablishment = 'http://schema.org/foodEstablishment';
/**
 * foodEvent
 *
 * A sub property of location. The specific food event where the action occurred.
 *
 * http://schema.org/foodEvent
 */
var foodEvent = 'http://schema.org/foodEvent';
/**
 * foodWarning
 *
 * Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.
 *
 * http://schema.org/foodWarning
 */
var foodWarning = 'http://schema.org/foodWarning';
/**
 * founders
 *
 * A person who founded this organization.
 *
 * http://schema.org/founders
 */
var founders = 'http://schema.org/founders';
/**
 * foundingDate
 *
 * The date that this organization was founded.
 *
 * http://schema.org/foundingDate
 */
var foundingDate = 'http://schema.org/foundingDate';
/**
 * foundingLocation
 *
 * The place where the Organization was founded.
 *
 * http://schema.org/foundingLocation
 */
var foundingLocation = 'http://schema.org/foundingLocation';
/**
 * free
 *
 * A flag to signal that the item, event, or place is accessible for free.
 *
 * http://schema.org/free
 */
var free = 'http://schema.org/free';
/**
 * freeShippingThreshold
 *
 * A monetary value above (or at) which the shipping rate becomes free. Intended to be used via an [[OfferShippingDetails]] with [[shippingSettingsLink]] matching this [[ShippingRateSettings]].
 *
 * http://schema.org/freeShippingThreshold
 */
var freeShippingThreshold = 'http://schema.org/freeShippingThreshold';
/**
 * fromLocation
 *
 * A sub property of location. The original location of the object or the agent before the action.
 *
 * http://schema.org/fromLocation
 */
var fromLocation = 'http://schema.org/fromLocation';
/**
 * fuelCapacity
 *
 * The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.\n\nTypical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).
 *
 * http://schema.org/fuelCapacity
 */
var fuelCapacity = 'http://schema.org/fuelCapacity';
/**
 * fuelConsumption
 *
 * The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).\n\n* Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use [[unitText]] to indicate the unit of measurement, e.g. L/100 km.\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\n* Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use [[valueReference]] to link the value for the fuel consumption to another value.
 *
 * http://schema.org/fuelConsumption
 */
var fuelConsumption = 'http://schema.org/fuelConsumption';
/**
 * fuelEfficiency
 *
 * The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).\n\n* Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use [[unitText]] to indicate the unit of measurement, e.g. mpg or km/L.\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\n* Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use [[valueReference]] to link the value for the fuel economy to another value.
 *
 * http://schema.org/fuelEfficiency
 */
var fuelEfficiency = 'http://schema.org/fuelEfficiency';
/**
 * fuelType
 *
 * The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.
 *
 * http://schema.org/fuelType
 */
var fuelType = 'http://schema.org/fuelType';
/**
 * functionalClass
 *
 * The degree of mobility the joint allows.
 *
 * http://schema.org/functionalClass
 */
var functionalClass = 'http://schema.org/functionalClass';
/**
 * funder
 *
 * A person or organization that supports (sponsors) something through some kind of financial contribution.
 *
 * http://schema.org/funder
 */
var funder = 'http://schema.org/funder';
/**
 * gameAvailabilityType
 *
 * Indicates the availability type of the game content associated with this action, such as whether it is a full version or a demo.
 *
 * http://schema.org/gameAvailabilityType
 */
var gameAvailabilityType = 'http://schema.org/gameAvailabilityType';
/**
 * gameEdition
 *
 * The edition of a video game.
 *
 * http://schema.org/gameEdition
 */
var gameEdition = 'http://schema.org/gameEdition';
/**
 * gameItem
 *
 * An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
 *
 * http://schema.org/gameItem
 */
var gameItem = 'http://schema.org/gameItem';
/**
 * gameLocation
 *
 * Real or fictional location of the game (or part of game).
 *
 * http://schema.org/gameLocation
 */
var gameLocation = 'http://schema.org/gameLocation';
/**
 * gamePlatform
 *
 * The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
 *
 * http://schema.org/gamePlatform
 */
var gamePlatform = 'http://schema.org/gamePlatform';
/**
 * gameTip
 *
 * Links to tips, tactics, etc.
 *
 * http://schema.org/gameTip
 */
var gameTip = 'http://schema.org/gameTip';
/**
 * gender
 *
 * Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of "Mixed".
 *
 * http://schema.org/gender
 */
var gender = 'http://schema.org/gender';
/**
 * geo
 *
 * The geo coordinates of the place.
 *
 * http://schema.org/geo
 */
var geo = 'http://schema.org/geo';
/**
 * geoContains
 *
 * Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
 *
 * http://schema.org/geoContains
 */
var geoContains = 'http://schema.org/geoContains';
/**
 * geoCoveredBy
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
 *
 * http://schema.org/geoCoveredBy
 */
var geoCoveredBy = 'http://schema.org/geoCoveredBy';
/**
 * geoCovers
 *
 * Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
 *
 * http://schema.org/geoCovers
 */
var geoCovers = 'http://schema.org/geoCovers';
/**
 * geoCrosses
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
 *
 * http://schema.org/geoCrosses
 */
var geoCrosses = 'http://schema.org/geoCrosses';
/**
 * geoDisjoint
 *
 * Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: "they have no point in common. They form a set of disconnected geometries." (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)
 *
 * http://schema.org/geoDisjoint
 */
var geoDisjoint = 'http://schema.org/geoDisjoint';
/**
 * geoEquals
 *
 * Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship).
 *
 * http://schema.org/geoEquals
 */
var geoEquals = 'http://schema.org/geoEquals';
/**
 * geoIntersects
 *
 * Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
 *
 * http://schema.org/geoIntersects
 */
var geoIntersects = 'http://schema.org/geoIntersects';
/**
 * geoMidpoint
 *
 * Indicates the GeoCoordinates at the centre of a GeoShape, e.g. GeoCircle.
 *
 * http://schema.org/geoMidpoint
 */
var geoMidpoint = 'http://schema.org/geoMidpoint';
/**
 * geoOverlaps
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
 *
 * http://schema.org/geoOverlaps
 */
var geoOverlaps = 'http://schema.org/geoOverlaps';
/**
 * geoRadius
 *
 * Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).
 *
 * http://schema.org/geoRadius
 */
var geoRadius = 'http://schema.org/geoRadius';
/**
 * geoTouches
 *
 * Represents spatial relations in which two geometries (or the places they represent) touch: "they have at least one boundary point in common, but no interior points." (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)
 *
 * http://schema.org/geoTouches
 */
var geoTouches = 'http://schema.org/geoTouches';
/**
 * geoWithin
 *
 * Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).
 *
 * http://schema.org/geoWithin
 */
var geoWithin = 'http://schema.org/geoWithin';
/**
 * geographicArea
 *
 * The geographic area associated with the audience.
 *
 * http://schema.org/geographicArea
 */
var geographicArea = 'http://schema.org/geographicArea';
/**
 * gettingTestedInfo
 *
 * Information about getting tested (for a [[MedicalCondition]]), e.g. in the context of a pandemic.
 *
 * http://schema.org/gettingTestedInfo
 */
var gettingTestedInfo = 'http://schema.org/gettingTestedInfo';
/**
 * givenName
 *
 * Given name. In the U.S., the first name of a Person.
 *
 * http://schema.org/givenName
 */
var givenName = 'http://schema.org/givenName';
/**
 * globalLocationNumber
 *
 * The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
 *
 * http://schema.org/globalLocationNumber
 */
var globalLocationNumber = 'http://schema.org/globalLocationNumber';
/**
 * governmentBenefitsInfo
 *
 * governmentBenefitsInfo provides information about government benefits associated with a SpecialAnnouncement.
 *
 * http://schema.org/governmentBenefitsInfo
 */
var governmentBenefitsInfo = 'http://schema.org/governmentBenefitsInfo';
/**
 * gracePeriod
 *
 * The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.
 *
 * http://schema.org/gracePeriod
 */
var gracePeriod = 'http://schema.org/gracePeriod';
/**
 * grantee
 *
 * The person, organization, contact point, or audience that has been granted this permission.
 *
 * http://schema.org/grantee
 */
var grantee = 'http://schema.org/grantee';
/**
 * greater
 *
 * This ordering relation for qualitative values indicates that the subject is greater than the object.
 *
 * http://schema.org/greater
 */
var greater = 'http://schema.org/greater';
/**
 * greaterOrEqual
 *
 * This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
 *
 * http://schema.org/greaterOrEqual
 */
var greaterOrEqual = 'http://schema.org/greaterOrEqual';
/**
 * gtin12
 *
 * The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
 *
 * http://schema.org/gtin12
 */
var gtin12 = 'http://schema.org/gtin12';
/**
 * gtin13
 *
 * The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
 *
 * http://schema.org/gtin13
 */
var gtin13 = 'http://schema.org/gtin13';
/**
 * gtin14
 *
 * The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
 *
 * http://schema.org/gtin14
 */
var gtin14 = 'http://schema.org/gtin14';
/**
 * gtin8
 *
 * The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.
 *
 * http://schema.org/gtin8
 */
var gtin8 = 'http://schema.org/gtin8';
/**
 * guideline
 *
 * A medical guideline related to this entity.
 *
 * http://schema.org/guideline
 */
var guideline = 'http://schema.org/guideline';
/**
 * guidelineDate
 *
 * Date on which this guideline's recommendation was made.
 *
 * http://schema.org/guidelineDate
 */
var guidelineDate = 'http://schema.org/guidelineDate';
/**
 * guidelineSubject
 *
 * The medical conditions, treatments, etc. that are the subject of the guideline.
 *
 * http://schema.org/guidelineSubject
 */
var guidelineSubject = 'http://schema.org/guidelineSubject';
/**
 * handlingTime
 *
 * The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup. Typical properties: minValue, maxValue, unitCode (d for DAY).  This is by common convention assumed to mean business days (if a unitCode is used, coded as "d"), i.e. only counting days when the business normally operates.
 *
 * http://schema.org/handlingTime
 */
var handlingTime = 'http://schema.org/handlingTime';
/**
 * hasAdultConsideration
 *
 * Used to tag an item to be intended or suitable for consumption or use by adults only.
 *
 * http://schema.org/hasAdultConsideration
 */
var hasAdultConsideration = 'http://schema.org/hasAdultConsideration';
/**
 * hasBioPolymerSequence
 *
 * A symbolic representation of a BioChemEntity. For example, a nucleotide sequence of a Gene or an amino acid sequence of a Protein.
 *
 * http://schema.org/hasBioPolymerSequence
 */
var hasBioPolymerSequence = 'http://schema.org/hasBioPolymerSequence';
/**
 * hasCategoryCode
 *
 * A Category code contained in this code set.
 *
 * http://schema.org/hasCategoryCode
 */
var hasCategoryCode = 'http://schema.org/hasCategoryCode';
/**
 * hasCourse
 *
 * A course or class that is one of the learning opportunities that constitute an educational / occupational program. No information is implied about whether the course is mandatory or optional; no guarantee is implied about whether the course will be available to everyone on the program.
 *
 * http://schema.org/hasCourse
 */
var hasCourse = 'http://schema.org/hasCourse';
/**
 * hasCourseInstance
 *
 * An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.
 *
 * http://schema.org/hasCourseInstance
 */
var hasCourseInstance = 'http://schema.org/hasCourseInstance';
/**
 * hasCredential
 *
 * A credential awarded to the Person or Organization.
 *
 * http://schema.org/hasCredential
 */
var hasCredential = 'http://schema.org/hasCredential';
/**
 * hasDeliveryMethod
 *
 * Method used for delivery or shipping.
 *
 * http://schema.org/hasDeliveryMethod
 */
var hasDeliveryMethod = 'http://schema.org/hasDeliveryMethod';
/**
 * hasDigitalDocumentPermission
 *
 * A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to "public".
 *
 * http://schema.org/hasDigitalDocumentPermission
 */
var hasDigitalDocumentPermission = 'http://schema.org/hasDigitalDocumentPermission';
/**
 * hasDriveThroughService
 *
 * Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) offers a service that can be used by driving through in a car. In the case of [[CovidTestingFacility]] such facilities could potentially help with social distancing from other potentially-infected users.
 *
 * http://schema.org/hasDriveThroughService
 */
var hasDriveThroughService = 'http://schema.org/hasDriveThroughService';
/**
 * hasEnergyConsumptionDetails
 *
 * Defines the energy efficiency Category (also known as "class" or "rating") for a product according to an international energy efficiency standard.
 *
 * http://schema.org/hasEnergyConsumptionDetails
 */
var hasEnergyConsumptionDetails = 'http://schema.org/hasEnergyConsumptionDetails';
/**
 * hasEnergyEfficiencyCategory
 *
 * Defines the energy efficiency Category (which could be either a rating out of range of values or a yes/no certification) for a product according to an international energy efficiency standard.
 *
 * http://schema.org/hasEnergyEfficiencyCategory
 */
var hasEnergyEfficiencyCategory = 'http://schema.org/hasEnergyEfficiencyCategory';
/**
 * hasHealthAspect
 *
 * Indicates the aspect or aspects specifically addressed in some [[HealthTopicContent]]. For example, that the content is an overview, or that it talks about treatment, self-care, treatments or their side-effects.
 *
 * http://schema.org/hasHealthAspect
 */
var hasHealthAspect = 'http://schema.org/hasHealthAspect';
/**
 * hasMeasurement
 *
 * A product measurement, for example the inseam of pants, the wheel size of a bicycle, or the gauge of a screw. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.
 *
 * http://schema.org/hasMeasurement
 */
var hasMeasurement = 'http://schema.org/hasMeasurement';
/**
 * hasMenuItem
 *
 * A food or drink item contained in a menu or menu section.
 *
 * http://schema.org/hasMenuItem
 */
var hasMenuItem = 'http://schema.org/hasMenuItem';
/**
 * hasMenuSection
 *
 * A subgrouping of the menu (by dishes, course, serving time period, etc.).
 *
 * http://schema.org/hasMenuSection
 */
var hasMenuSection = 'http://schema.org/hasMenuSection';
/**
 * hasMolecularFunction
 *
 * Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.
 *
 * http://schema.org/hasMolecularFunction
 */
var hasMolecularFunction = 'http://schema.org/hasMolecularFunction';
/**
 * hasOccupation
 *
 * The Person's occupation. For past professions, use Role for expressing dates.
 *
 * http://schema.org/hasOccupation
 */
var hasOccupation = 'http://schema.org/hasOccupation';
/**
 * hasOfferCatalog
 *
 * Indicates an OfferCatalog listing for this Organization, Person, or Service.
 *
 * http://schema.org/hasOfferCatalog
 */
var hasOfferCatalog = 'http://schema.org/hasOfferCatalog';
/**
 * hasPOS
 *
 * Points-of-Sales operated by the organization or person.
 *
 * http://schema.org/hasPOS
 */
var hasPOS = 'http://schema.org/hasPOS';
/**
 * hasProductReturnPolicy
 *
 * Indicates a ProductReturnPolicy that may be applicable.
 *
 * http://schema.org/hasProductReturnPolicy
 */
var hasProductReturnPolicy = 'http://schema.org/hasProductReturnPolicy';
/**
 * headline
 *
 * Headline of the article.
 *
 * http://schema.org/headline
 */
var headline = 'http://schema.org/headline';
/**
 * healthCondition
 *
 * Specifying the health condition(s) of a patient, medical study, or other target audience.
 *
 * http://schema.org/healthCondition
 */
var healthCondition = 'http://schema.org/healthCondition';
/**
 * healthPlanCoinsuranceOption
 *
 * Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?
 *
 * http://schema.org/healthPlanCoinsuranceOption
 */
var healthPlanCoinsuranceOption = 'http://schema.org/healthPlanCoinsuranceOption';
/**
 * healthPlanCoinsuranceRate
 *
 * The rate of coinsurance expressed as a number between 0.0 and 1.0.
 *
 * http://schema.org/healthPlanCoinsuranceRate
 */
var healthPlanCoinsuranceRate = 'http://schema.org/healthPlanCoinsuranceRate';
/**
 * healthPlanCopay
 *
 * The copay amount.
 *
 * http://schema.org/healthPlanCopay
 */
var healthPlanCopay = 'http://schema.org/healthPlanCopay';
/**
 * healthPlanCopayOption
 *
 * Whether the copay is before or after deductible, etc. TODO: Is this a closed set?
 *
 * http://schema.org/healthPlanCopayOption
 */
var healthPlanCopayOption = 'http://schema.org/healthPlanCopayOption';
/**
 * healthPlanCostSharing
 *
 * The costs to the patient for services under this network or formulary.
 *
 * http://schema.org/healthPlanCostSharing
 */
var healthPlanCostSharing = 'http://schema.org/healthPlanCostSharing';
/**
 * healthPlanDrugOption
 *
 * TODO.
 *
 * http://schema.org/healthPlanDrugOption
 */
var healthPlanDrugOption = 'http://schema.org/healthPlanDrugOption';
/**
 * healthPlanDrugTier
 *
 * The tier(s) of drugs offered by this formulary or insurance plan.
 *
 * http://schema.org/healthPlanDrugTier
 */
var healthPlanDrugTier = 'http://schema.org/healthPlanDrugTier';
/**
 * healthPlanId
 *
 * The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)
 *
 * http://schema.org/healthPlanId
 */
var healthPlanId = 'http://schema.org/healthPlanId';
/**
 * healthPlanMarketingUrl
 *
 * The URL that goes directly to the plan brochure for the specific standard plan or plan variation.
 *
 * http://schema.org/healthPlanMarketingUrl
 */
var healthPlanMarketingUrl = 'http://schema.org/healthPlanMarketingUrl';
/**
 * healthPlanNetworkId
 *
 * Name or unique ID of network. (Networks are often reused across different insurance plans.)
 *
 * http://schema.org/healthPlanNetworkId
 */
var healthPlanNetworkId = 'http://schema.org/healthPlanNetworkId';
/**
 * healthPlanNetworkTier
 *
 * The tier(s) for this network.
 *
 * http://schema.org/healthPlanNetworkTier
 */
var healthPlanNetworkTier = 'http://schema.org/healthPlanNetworkTier';
/**
 * healthPlanPharmacyCategory
 *
 * The category or type of pharmacy associated with this cost sharing.
 *
 * http://schema.org/healthPlanPharmacyCategory
 */
var healthPlanPharmacyCategory = 'http://schema.org/healthPlanPharmacyCategory';
/**
 * healthcareReportingData
 *
 * Indicates data describing a hospital, e.g. a CDC [[CDCPMDRecord]] or as some kind of [[Dataset]].
 *
 * http://schema.org/healthcareReportingData
 */
var healthcareReportingData = 'http://schema.org/healthcareReportingData';
/**
 * height
 *
 * The height of the item.
 *
 * http://schema.org/height
 */
var height = 'http://schema.org/height';
/**
 * highPrice
 *
 * The highest price of all offers available.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
 *
 * http://schema.org/highPrice
 */
var highPrice = 'http://schema.org/highPrice';
/**
 * hiringOrganization
 *
 * Organization or Person offering the job position.
 *
 * http://schema.org/hiringOrganization
 */
var hiringOrganization = 'http://schema.org/hiringOrganization';
/**
 * homeLocation
 *
 * A contact location for a person's residence.
 *
 * http://schema.org/homeLocation
 */
var homeLocation = 'http://schema.org/homeLocation';
/**
 * homeTeam
 *
 * The home team in a sports event.
 *
 * http://schema.org/homeTeam
 */
var homeTeam = 'http://schema.org/homeTeam';
/**
 * honorificPrefix
 *
 * An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
 *
 * http://schema.org/honorificPrefix
 */
var honorificPrefix = 'http://schema.org/honorificPrefix';
/**
 * honorificSuffix
 *
 * An honorific suffix following a Person's name such as M.D./PhD/MSCSW.
 *
 * http://schema.org/honorificSuffix
 */
var honorificSuffix = 'http://schema.org/honorificSuffix';
/**
 * hospitalAffiliation
 *
 * A hospital with which the physician or office is affiliated.
 *
 * http://schema.org/hospitalAffiliation
 */
var hospitalAffiliation = 'http://schema.org/hospitalAffiliation';
/**
 * hostingOrganization
 *
 * The organization (airline, travelers' club, etc.) the membership is made with.
 *
 * http://schema.org/hostingOrganization
 */
var hostingOrganization = 'http://schema.org/hostingOrganization';
/**
 * hoursAvailable
 *
 * The hours during which this service or contact is available.
 *
 * http://schema.org/hoursAvailable
 */
var hoursAvailable = 'http://schema.org/hoursAvailable';
/**
 * howPerformed
 *
 * How the procedure is performed.
 *
 * http://schema.org/howPerformed
 */
var howPerformed = 'http://schema.org/howPerformed';
/**
 * httpMethod
 *
 * An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
 *
 * http://schema.org/httpMethod
 */
var httpMethod = 'http://schema.org/httpMethod';
/**
 * iataCode
 *
 * IATA identifier for an airline or airport.
 *
 * http://schema.org/iataCode
 */
var iataCode = 'http://schema.org/iataCode';
/**
 * icaoCode
 *
 * ICAO identifier for an airport.
 *
 * http://schema.org/icaoCode
 */
var icaoCode = 'http://schema.org/icaoCode';
/**
 * identifyingExam
 *
 * A physical examination that can identify this sign.
 *
 * http://schema.org/identifyingExam
 */
var identifyingExam = 'http://schema.org/identifyingExam';
/**
 * identifyingTest
 *
 * A diagnostic test that can identify this sign.
 *
 * http://schema.org/identifyingTest
 */
var identifyingTest = 'http://schema.org/identifyingTest';
/**
 * illustrator
 *
 * The illustrator of the book.
 *
 * http://schema.org/illustrator
 */
var illustrator = 'http://schema.org/illustrator';
/**
 * imagingTechnique
 *
 * Imaging technique used.
 *
 * http://schema.org/imagingTechnique
 */
var imagingTechnique = 'http://schema.org/imagingTechnique';
/**
 * inAlbum
 *
 * The album to which this recording belongs.
 *
 * http://schema.org/inAlbum
 */
var inAlbum = 'http://schema.org/inAlbum';
/**
 * inBroadcastLineup
 *
 * The CableOrSatelliteService offering the channel.
 *
 * http://schema.org/inBroadcastLineup
 */
var inBroadcastLineup = 'http://schema.org/inBroadcastLineup';
/**
 * inChI
 *
 * Non-proprietary identifier for molecular entity that can be used in printed and electronic data sources thus enabling easier linking of diverse data compilations.
 *
 * http://schema.org/inChI
 */
var inChI = 'http://schema.org/inChI';
/**
 * inChIKey
 *
 * InChIKey is a hashed version of the full InChI (using the SHA-256 algorithm).
 *
 * http://schema.org/inChIKey
 */
var inChIKey = 'http://schema.org/inChIKey';
/**
 * inCodeSet
 *
 * A [[CategoryCodeSet]] that contains this category code.
 *
 * http://schema.org/inCodeSet
 */
var inCodeSet = 'http://schema.org/inCodeSet';
/**
 * inPlaylist
 *
 * The playlist to which this recording belongs.
 *
 * http://schema.org/inPlaylist
 */
var inPlaylist = 'http://schema.org/inPlaylist';
/**
 * inProductGroupWithID
 *
 * Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]].
 *
 * http://schema.org/inProductGroupWithID
 */
var inProductGroupWithID = 'http://schema.org/inProductGroupWithID';
/**
 * inStoreReturnsOffered
 *
 * Are in-store returns offered? (For more advanced return methods use the [[returnMethod]] property.)
 *
 * http://schema.org/inStoreReturnsOffered
 */
var inStoreReturnsOffered = 'http://schema.org/inStoreReturnsOffered';
/**
 * inSupportOf
 *
 * Qualification, candidature, degree, application that Thesis supports.
 *
 * http://schema.org/inSupportOf
 */
var inSupportOf = 'http://schema.org/inSupportOf';
/**
 * incentives
 *
 * Description of bonus and commission compensation aspects of the job.
 *
 * http://schema.org/incentives
 */
var incentives = 'http://schema.org/incentives';
/**
 * includedComposition
 *
 * Smaller compositions included in this work (e.g. a movement in a symphony).
 *
 * http://schema.org/includedComposition
 */
var includedComposition = 'http://schema.org/includedComposition';
/**
 * includedDataCatalog
 *
 * A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').
 *
 * http://schema.org/includedDataCatalog
 */
var includedDataCatalog = 'http://schema.org/includedDataCatalog';
/**
 * includedInHealthInsurancePlan
 *
 * The insurance plans that cover this drug.
 *
 * http://schema.org/includedInHealthInsurancePlan
 */
var includedInHealthInsurancePlan = 'http://schema.org/includedInHealthInsurancePlan';
/**
 * includedRiskFactor
 *
 * A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.
 *
 * http://schema.org/includedRiskFactor
 */
var includedRiskFactor = 'http://schema.org/includedRiskFactor';
/**
 * includesAttraction
 *
 * Attraction located at destination.
 *
 * http://schema.org/includesAttraction
 */
var includesAttraction = 'http://schema.org/includesAttraction';
/**
 * includesHealthPlanFormulary
 *
 * Formularies covered by this plan.
 *
 * http://schema.org/includesHealthPlanFormulary
 */
var includesHealthPlanFormulary = 'http://schema.org/includesHealthPlanFormulary';
/**
 * includesHealthPlanNetwork
 *
 * Networks covered by this plan.
 *
 * http://schema.org/includesHealthPlanNetwork
 */
var includesHealthPlanNetwork = 'http://schema.org/includesHealthPlanNetwork';
/**
 * includesObject
 *
 * This links to a node or nodes indicating the exact quantity of the products included in  an [[Offer]] or [[ProductCollection]].
 *
 * http://schema.org/includesObject
 */
var includesObject = 'http://schema.org/includesObject';
/**
 * increasesRiskOf
 *
 * The condition, complication, etc. influenced by this factor.
 *
 * http://schema.org/increasesRiskOf
 */
var increasesRiskOf = 'http://schema.org/increasesRiskOf';
/**
 * industry
 *
 * The industry associated with the job position.
 *
 * http://schema.org/industry
 */
var industry = 'http://schema.org/industry';
/**
 * ineligibleRegion
 *
 * The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\n\nSee also [[eligibleRegion]].
 *
 *
 * http://schema.org/ineligibleRegion
 */
var ineligibleRegion = 'http://schema.org/ineligibleRegion';
/**
 * infectiousAgent
 *
 * The actual infectious agent, such as a specific bacterium.
 *
 * http://schema.org/infectiousAgent
 */
var infectiousAgent = 'http://schema.org/infectiousAgent';
/**
 * infectiousAgentClass
 *
 * The class of infectious agent (bacteria, prion, etc.) that causes the disease.
 *
 * http://schema.org/infectiousAgentClass
 */
var infectiousAgentClass = 'http://schema.org/infectiousAgentClass';
/**
 * ingredients
 *
 * A single ingredient used in the recipe, e.g. sugar, flour or garlic.
 *
 * http://schema.org/ingredients
 */
var ingredients = 'http://schema.org/ingredients';
/**
 * inker
 *
 * The individual who traces over the pencil drawings in ink after pencils are complete.
 *
 * http://schema.org/inker
 */
var inker = 'http://schema.org/inker';
/**
 * insertion
 *
 * The place of attachment of a muscle, or what the muscle moves.
 *
 * http://schema.org/insertion
 */
var insertion = 'http://schema.org/insertion';
/**
 * installUrl
 *
 * URL at which the app may be installed, if different from the URL of the item.
 *
 * http://schema.org/installUrl
 */
var installUrl = 'http://schema.org/installUrl';
/**
 * instructor
 *
 * A person assigned to instruct or provide instructional assistance for the [[CourseInstance]].
 *
 * http://schema.org/instructor
 */
var instructor = 'http://schema.org/instructor';
/**
 * intensity
 *
 * Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.
 *
 * http://schema.org/intensity
 */
var intensity = 'http://schema.org/intensity';
/**
 * interactingDrug
 *
 * Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.
 *
 * http://schema.org/interactingDrug
 */
var interactingDrug = 'http://schema.org/interactingDrug';
/**
 * interactionCount
 *
 * This property is deprecated, alongside the UserInteraction types on which it depended.
 *
 * http://schema.org/interactionCount
 */
var interactionCount = 'http://schema.org/interactionCount';
/**
 * interactionService
 *
 * The WebSite or SoftwareApplication where the interactions took place.
 *
 * http://schema.org/interactionService
 */
var interactionService = 'http://schema.org/interactionService';
/**
 * interactionType
 *
 * The Action representing the type of interaction. For up votes, +1s, etc. use [[LikeAction]]. For down votes use [[DislikeAction]]. Otherwise, use the most specific Action.
 *
 * http://schema.org/interactionType
 */
var interactionType = 'http://schema.org/interactionType';
/**
 * interactivityType
 *
 * The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
 *
 * http://schema.org/interactivityType
 */
var interactivityType = 'http://schema.org/interactivityType';
/**
 * interestRate
 *
 * The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.
 *
 * http://schema.org/interestRate
 */
var interestRate = 'http://schema.org/interestRate';
/**
 * interpretedAsClaim
 *
 * Used to indicate a specific claim contained, implied, translated or refined from the content of a [[MediaObject]] or other [[CreativeWork]]. The interpreting party can be indicated using [[claimInterpreter]].
 *
 * http://schema.org/interpretedAsClaim
 */
var interpretedAsClaim = 'http://schema.org/interpretedAsClaim';
/**
 * inventoryLevel
 *
 * The current approximate inventory level for the item or items.
 *
 * http://schema.org/inventoryLevel
 */
var inventoryLevel = 'http://schema.org/inventoryLevel';
/**
 * inverseOf
 *
 * Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.
 *
 * http://schema.org/inverseOf
 */
var inverseOf = 'http://schema.org/inverseOf';
/**
 * isAcceptingNewPatients
 *
 * Whether the provider is accepting new patients.
 *
 * http://schema.org/isAcceptingNewPatients
 */
var isAcceptingNewPatients = 'http://schema.org/isAcceptingNewPatients';
/**
 * isAccessoryOrSparePartFor
 *
 * A pointer to another product (or multiple products) for which this product is an accessory or spare part.
 *
 * http://schema.org/isAccessoryOrSparePartFor
 */
var isAccessoryOrSparePartFor = 'http://schema.org/isAccessoryOrSparePartFor';
/**
 * isAvailableGenerically
 *
 * True if the drug is available in a generic form (regardless of name).
 *
 * http://schema.org/isAvailableGenerically
 */
var isAvailableGenerically = 'http://schema.org/isAvailableGenerically';
/**
 * isBasedOnUrl
 *
 * A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.
 *
 * http://schema.org/isBasedOnUrl
 */
var isBasedOnUrl = 'http://schema.org/isBasedOnUrl';
/**
 * isConsumableFor
 *
 * A pointer to another product (or multiple products) for which this product is a consumable.
 *
 * http://schema.org/isConsumableFor
 */
var isConsumableFor = 'http://schema.org/isConsumableFor';
/**
 * isFamilyFriendly
 *
 * Indicates whether this content is family friendly.
 *
 * http://schema.org/isFamilyFriendly
 */
var isFamilyFriendly = 'http://schema.org/isFamilyFriendly';
/**
 * isGift
 *
 * Indicates whether the offer was accepted as a gift for someone other than the buyer.
 *
 * http://schema.org/isGift
 */
var isGift = 'http://schema.org/isGift';
/**
 * isInvolvedInBiologicalProcess
 *
 * Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.
 *
 * http://schema.org/isInvolvedInBiologicalProcess
 */
var isInvolvedInBiologicalProcess = 'http://schema.org/isInvolvedInBiologicalProcess';
/**
 * isLiveBroadcast
 *
 * True if the broadcast is of a live event.
 *
 * http://schema.org/isLiveBroadcast
 */
var isLiveBroadcast = 'http://schema.org/isLiveBroadcast';
/**
 * isLocatedInSubcellularLocation
 *
 * Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.
 *
 * http://schema.org/isLocatedInSubcellularLocation
 */
var isLocatedInSubcellularLocation = 'http://schema.org/isLocatedInSubcellularLocation';
/**
 * isPlanForApartment
 *
 * Indicates some accommodation that this floor plan describes.
 *
 * http://schema.org/isPlanForApartment
 */
var isPlanForApartment = 'http://schema.org/isPlanForApartment';
/**
 * isProprietary
 *
 * True if this item's name is a proprietary/brand name (vs. generic name).
 *
 * http://schema.org/isProprietary
 */
var isProprietary = 'http://schema.org/isProprietary';
/**
 * isRelatedTo
 *
 * A pointer to another, somehow related product (or multiple products).
 *
 * http://schema.org/isRelatedTo
 */
var isRelatedTo = 'http://schema.org/isRelatedTo';
/**
 * isResizable
 *
 * Whether the 3DModel allows resizing. For example, room layout applications often do not allow 3DModel elements to be resized to reflect reality.
 *
 * http://schema.org/isResizable
 */
var isResizable = 'http://schema.org/isResizable';
/**
 * isSimilarTo
 *
 * A pointer to another, functionally similar product (or multiple products).
 *
 * http://schema.org/isSimilarTo
 */
var isSimilarTo = 'http://schema.org/isSimilarTo';
/**
 * isUnlabelledFallback
 *
 * This can be marked 'true' to indicate that some published [[DeliveryTimeSettings]] or [[ShippingRateSettings]] are intended to apply to all [[OfferShippingDetails]] published by the same merchant, when referenced by a [[shippingSettingsLink]] in those settings. It is not meaningful to use a 'true' value for this property alongside a transitTimeLabel (for [[DeliveryTimeSettings]]) or shippingLabel (for [[ShippingRateSettings]]), since this property is for use with unlabelled settings.
 *
 * http://schema.org/isUnlabelledFallback
 */
var isUnlabelledFallback = 'http://schema.org/isUnlabelledFallback';
/**
 * isbn
 *
 * The ISBN of the book.
 *
 * http://schema.org/isbn
 */
var isbn = 'http://schema.org/isbn';
/**
 * isicV4
 *
 * The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
 *
 * http://schema.org/isicV4
 */
var isicV4 = 'http://schema.org/isicV4';
/**
 * iso6523Code
 *
 * An organization identifier as defined in ISO 6523(-1). Note that many existing organization identifiers such as [leiCode](http://schema.org/leiCode), [duns](http://schema.org/duns) and [vatID](http://schema.org/vatID) can be expressed as an ISO 6523 identifier by setting the ICD part of the ISO 6523 identifier accordingly.
 *
 * http://schema.org/iso6523Code
 */
var iso6523Code = 'http://schema.org/iso6523Code';
/**
 * isrcCode
 *
 * The International Standard Recording Code for the recording.
 *
 * http://schema.org/isrcCode
 */
var isrcCode = 'http://schema.org/isrcCode';
/**
 * issn
 *
 * The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.
 *
 * http://schema.org/issn
 */
var issn = 'http://schema.org/issn';
/**
 * issueNumber
 *
 * Identifies the issue of publication; for example, "iii" or "2".
 *
 * http://schema.org/issueNumber
 */
var issueNumber = 'http://schema.org/issueNumber';
/**
 * issuedBy
 *
 * The organization issuing the ticket or permit.
 *
 * http://schema.org/issuedBy
 */
var issuedBy = 'http://schema.org/issuedBy';
/**
 * issuedThrough
 *
 * The service through which the permit was granted.
 *
 * http://schema.org/issuedThrough
 */
var issuedThrough = 'http://schema.org/issuedThrough';
/**
 * iswcCode
 *
 * The International Standard Musical Work Code for the composition.
 *
 * http://schema.org/iswcCode
 */
var iswcCode = 'http://schema.org/iswcCode';
/**
 * item
 *
 * An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists').
 *
 * http://schema.org/item
 */
var item = 'http://schema.org/item';
/**
 * itemCondition
 *
 * A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.
 *
 * http://schema.org/itemCondition
 */
var itemCondition = 'http://schema.org/itemCondition';
/**
 * itemDefectReturnFees
 *
 * The type of return fees for returns of defect products.
 *
 * http://schema.org/itemDefectReturnFees
 */
var itemDefectReturnFees = 'http://schema.org/itemDefectReturnFees';
/**
 * itemDefectReturnLabelSource
 *
 * The method (from an enumeration) by which the customer obtains a return shipping label for a defect product.
 *
 * http://schema.org/itemDefectReturnLabelSource
 */
var itemDefectReturnLabelSource = 'http://schema.org/itemDefectReturnLabelSource';
/**
 * itemDefectReturnShippingFeesAmount
 *
 * Amount of shipping costs for defect product returns. Applicable when property [[itemDefectReturnFees]] equals [[ReturnShippingFees]].
 *
 * http://schema.org/itemDefectReturnShippingFeesAmount
 */
var itemDefectReturnShippingFeesAmount = 'http://schema.org/itemDefectReturnShippingFeesAmount';
/**
 * itemListElement
 *
 * For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.\n\nText values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.\n\nNote: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.
 *
 * http://schema.org/itemListElement
 */
var itemListElement = 'http://schema.org/itemListElement';
/**
 * itemListOrder
 *
 * Type of ordering (e.g. Ascending, Descending, Unordered).
 *
 * http://schema.org/itemListOrder
 */
var itemListOrder = 'http://schema.org/itemListOrder';
/**
 *
 *
 *
 *
 * http://schema.org/itemLocation
 */
var itemLocation = 'http://schema.org/itemLocation';
/**
 * itemReviewed
 *
 * The item that is being reviewed/rated.
 *
 * http://schema.org/itemReviewed
 */
var itemReviewed = 'http://schema.org/itemReviewed';
/**
 * itemShipped
 *
 * Item(s) being shipped.
 *
 * http://schema.org/itemShipped
 */
var itemShipped = 'http://schema.org/itemShipped';
/**
 * itinerary
 *
 * Destination(s) ( [[Place]] ) that make up a trip. For a trip where destination order is important use [[ItemList]] to specify that order (see examples).
 *
 * http://schema.org/itinerary
 */
var itinerary = 'http://schema.org/itinerary';
/**
 * iupacName
 *
 * Systematic method of naming chemical compounds as recommended by the International Union of Pure and Applied Chemistry (IUPAC).
 *
 * http://schema.org/iupacName
 */
var iupacName = 'http://schema.org/iupacName';
/**
 * jobImmediateStart
 *
 * An indicator as to whether a position is available for an immediate start.
 *
 * http://schema.org/jobImmediateStart
 */
var jobImmediateStart = 'http://schema.org/jobImmediateStart';
/**
 * jobLocation
 *
 * A (typically single) geographic location associated with the job position.
 *
 * http://schema.org/jobLocation
 */
var jobLocation = 'http://schema.org/jobLocation';
/**
 * jobLocationType
 *
 * A description of the job location (e.g. TELECOMMUTE for telecommute jobs).
 *
 * http://schema.org/jobLocationType
 */
var jobLocationType = 'http://schema.org/jobLocationType';
/**
 * jobStartDate
 *
 * The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.
 *
 * http://schema.org/jobStartDate
 */
var jobStartDate = 'http://schema.org/jobStartDate';
/**
 * jobTitle
 *
 * The job title of the person (for example, Financial Manager).
 *
 * http://schema.org/jobTitle
 */
var jobTitle = 'http://schema.org/jobTitle';
/**
 * keywords
 *
 * Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.
 *
 * http://schema.org/keywords
 */
var keywords = 'http://schema.org/keywords';
/**
 * knownVehicleDamages
 *
 * A textual description of known damages, both repaired and unrepaired.
 *
 * http://schema.org/knownVehicleDamages
 */
var knownVehicleDamages = 'http://schema.org/knownVehicleDamages';
/**
 * knows
 *
 * The most generic bi-directional social/work relation.
 *
 * http://schema.org/knows
 */
var knows = 'http://schema.org/knows';
/**
 * knowsAbout
 *
 * Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.
 *
 * http://schema.org/knowsAbout
 */
var knowsAbout = 'http://schema.org/knowsAbout';
/**
 * knowsLanguage
 *
 * Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).
 *
 * http://schema.org/knowsLanguage
 */
var knowsLanguage = 'http://schema.org/knowsLanguage';
/**
 * labelDetails
 *
 * Link to the drug's label details.
 *
 * http://schema.org/labelDetails
 */
var labelDetails = 'http://schema.org/labelDetails';
/**
 * landlord
 *
 * A sub property of participant. The owner of the real estate property.
 *
 * http://schema.org/landlord
 */
var landlord = 'http://schema.org/landlord';
/**
 * language
 *
 * A sub property of instrument. The language used on this action.
 *
 * http://schema.org/language
 */
var language = 'http://schema.org/language';
/**
 * lastReviewed
 *
 * Date on which the content on this web page was last reviewed for accuracy and/or completeness.
 *
 * http://schema.org/lastReviewed
 */
var lastReviewed = 'http://schema.org/lastReviewed';
/**
 * latitude
 *
 * The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
 *
 * http://schema.org/latitude
 */
var latitude = 'http://schema.org/latitude';
/**
 * layoutImage
 *
 * A schematic image showing the floorplan layout.
 *
 * http://schema.org/layoutImage
 */
var layoutImage = 'http://schema.org/layoutImage';
/**
 * learningResourceType
 *
 * The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
 *
 * http://schema.org/learningResourceType
 */
var learningResourceType = 'http://schema.org/learningResourceType';
/**
 * leaseLength
 *
 * Length of the lease for some [[Accommodation]], either particular to some [[Offer]] or in some cases intrinsic to the property.
 *
 * http://schema.org/leaseLength
 */
var leaseLength = 'http://schema.org/leaseLength';
/**
 * legalName
 *
 * The official name of the organization, e.g. the registered company name.
 *
 * http://schema.org/legalName
 */
var legalName = 'http://schema.org/legalName';
/**
 * legalStatus
 *
 * The drug or supplement's legal status, including any controlled substance schedules that apply.
 *
 * http://schema.org/legalStatus
 */
var legalStatus = 'http://schema.org/legalStatus';
/**
 * legislationChanges
 *
 * Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href="/legislationConsolidates">legislationConsolidates</a> property.
 *
 * http://schema.org/legislationChanges
 */
var legislationChanges = 'http://schema.org/legislationChanges';
/**
 * legislationConsolidates
 *
 * Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.
 *
 * http://schema.org/legislationConsolidates
 */
var legislationConsolidates = 'http://schema.org/legislationConsolidates';
/**
 * legislationDate
 *
 * The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.
 *
 * http://schema.org/legislationDate
 */
var legislationDate = 'http://schema.org/legislationDate';
/**
 * legislationDateVersion
 *
 * The point-in-time at which the provided description of the legislation is valid (e.g.: when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the "National Insurance Contributions Act 2015")
 *
 * http://schema.org/legislationDateVersion
 */
var legislationDateVersion = 'http://schema.org/legislationDateVersion';
/**
 * legislationIdentifier
 *
 * An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.
 *
 * http://schema.org/legislationIdentifier
 */
var legislationIdentifier = 'http://schema.org/legislationIdentifier';
/**
 * legislationJurisdiction
 *
 * The jurisdiction from which the legislation originates.
 *
 * http://schema.org/legislationJurisdiction
 */
var legislationJurisdiction = 'http://schema.org/legislationJurisdiction';
/**
 * legislationLegalForce
 *
 * Whether the legislation is currently in force, not in force, or partially in force.
 *
 * http://schema.org/legislationLegalForce
 */
var legislationLegalForce = 'http://schema.org/legislationLegalForce';
/**
 * legislationLegalValue
 *
 * The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a "stronger" legal value than the HTML file of the same act.
 *
 * http://schema.org/legislationLegalValue
 */
var legislationLegalValue = 'http://schema.org/legislationLegalValue';
/**
 * legislationPassedBy
 *
 * The person or organization that originally passed or made the law: typically parliament (for primary legislation) or government (for secondary legislation). This indicates the "legal author" of the law, as opposed to its physical author.
 *
 * http://schema.org/legislationPassedBy
 */
var legislationPassedBy = 'http://schema.org/legislationPassedBy';
/**
 * legislationResponsible
 *
 * An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.
 *
 * http://schema.org/legislationResponsible
 */
var legislationResponsible = 'http://schema.org/legislationResponsible';
/**
 * legislationTransposes
 *
 * Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.
 *
 * http://schema.org/legislationTransposes
 */
var legislationTransposes = 'http://schema.org/legislationTransposes';
/**
 * legislationType
 *
 * The type of the legislation. Examples of values are "law", "act", "directive", "decree", "regulation", "statutory instrument", "loi organique", "règlement grand-ducal", etc., depending on the country.
 *
 * http://schema.org/legislationType
 */
var legislationType = 'http://schema.org/legislationType';
/**
 * leiCode
 *
 * An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
 *
 * http://schema.org/leiCode
 */
var leiCode = 'http://schema.org/leiCode';
/**
 * lender
 *
 * A sub property of participant. The person that lends the object being borrowed.
 *
 * http://schema.org/lender
 */
var lender = 'http://schema.org/lender';
/**
 * lesser
 *
 * This ordering relation for qualitative values indicates that the subject is lesser than the object.
 *
 * http://schema.org/lesser
 */
var lesser = 'http://schema.org/lesser';
/**
 * lesserOrEqual
 *
 * This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
 *
 * http://schema.org/lesserOrEqual
 */
var lesserOrEqual = 'http://schema.org/lesserOrEqual';
/**
 * letterer
 *
 * The individual who adds lettering, including speech balloons and sound effects, to artwork.
 *
 * http://schema.org/letterer
 */
var letterer = 'http://schema.org/letterer';
/**
 * license
 *
 * A license document that applies to this content, typically indicated by URL.
 *
 * http://schema.org/license
 */
var license = 'http://schema.org/license';
/**
 * line
 *
 * A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.
 *
 * http://schema.org/line
 */
var line = 'http://schema.org/line';
/**
 * linkRelationship
 *
 * Indicates the relationship type of a Web link.
 *
 * http://schema.org/linkRelationship
 */
var linkRelationship = 'http://schema.org/linkRelationship';
/**
 * liveBlogUpdate
 *
 * An update to the LiveBlog.
 *
 * http://schema.org/liveBlogUpdate
 */
var liveBlogUpdate = 'http://schema.org/liveBlogUpdate';
/**
 * loanMortgageMandateAmount
 *
 * Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.
 *
 * http://schema.org/loanMortgageMandateAmount
 */
var loanMortgageMandateAmount = 'http://schema.org/loanMortgageMandateAmount';
/**
 * loanPaymentAmount
 *
 * The amount of money to pay in a single payment.
 *
 * http://schema.org/loanPaymentAmount
 */
var loanPaymentAmount = 'http://schema.org/loanPaymentAmount';
/**
 * loanPaymentFrequency
 *
 * Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.
 *
 * http://schema.org/loanPaymentFrequency
 */
var loanPaymentFrequency = 'http://schema.org/loanPaymentFrequency';
/**
 * loanRepaymentForm
 *
 * A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.
 *
 * http://schema.org/loanRepaymentForm
 */
var loanRepaymentForm = 'http://schema.org/loanRepaymentForm';
/**
 * loanTerm
 *
 * The duration of the loan or credit agreement.
 *
 * http://schema.org/loanTerm
 */
var loanTerm = 'http://schema.org/loanTerm';
/**
 * loanType
 *
 * The type of a loan or credit.
 *
 * http://schema.org/loanType
 */
var loanType = 'http://schema.org/loanType';
/**
 * locationCreated
 *
 * The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.
 *
 * http://schema.org/locationCreated
 */
var locationCreated = 'http://schema.org/locationCreated';
/**
 * lodgingUnitDescription
 *
 * A full description of the lodging unit.
 *
 * http://schema.org/lodgingUnitDescription
 */
var lodgingUnitDescription = 'http://schema.org/lodgingUnitDescription';
/**
 * lodgingUnitType
 *
 * Textual description of the unit type (including suite vs. room, size of bed, etc.).
 *
 * http://schema.org/lodgingUnitType
 */
var lodgingUnitType = 'http://schema.org/lodgingUnitType';
/**
 * logo
 *
 * An associated logo.
 *
 * http://schema.org/logo
 */
var logo = 'http://schema.org/logo';
/**
 * longitude
 *
 * The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).
 *
 * http://schema.org/longitude
 */
var longitude = 'http://schema.org/longitude';
/**
 * loser
 *
 * A sub property of participant. The loser of the action.
 *
 * http://schema.org/loser
 */
var loser = 'http://schema.org/loser';
/**
 * lowPrice
 *
 * The lowest price of all offers available.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
 *
 * http://schema.org/lowPrice
 */
var lowPrice = 'http://schema.org/lowPrice';
/**
 * lyricist
 *
 * The person who wrote the words.
 *
 * http://schema.org/lyricist
 */
var lyricist = 'http://schema.org/lyricist';
/**
 * lyrics
 *
 * The words in the song.
 *
 * http://schema.org/lyrics
 */
var lyrics = 'http://schema.org/lyrics';
/**
 * maintainer
 *
 * A maintainer of a [[Dataset]], software package ([[SoftwareApplication]]), or other [[Project]]. A maintainer is a [[Person]] or [[Organization]] that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on "upstream" sources. When [[maintainer]] is applied to a specific version of something e.g. a particular version or packaging of a [[Dataset]], it is always  possible that the upstream source has a different maintainer. The [[isBasedOn]] property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.
 *
 *
 * http://schema.org/maintainer
 */
var maintainer = 'http://schema.org/maintainer';
/**
 * manufacturer
 *
 * The manufacturer of the product.
 *
 * http://schema.org/manufacturer
 */
var manufacturer = 'http://schema.org/manufacturer';
/**
 * map
 *
 * A URL to a map of the place.
 *
 * http://schema.org/map
 */
var map = 'http://schema.org/map';
/**
 * mapType
 *
 * Indicates the kind of Map, from the MapCategoryType Enumeration.
 *
 * http://schema.org/mapType
 */
var mapType = 'http://schema.org/mapType';
/**
 * maps
 *
 * A URL to a map of the place.
 *
 * http://schema.org/maps
 */
var maps = 'http://schema.org/maps';
/**
 * marginOfError
 *
 * A [[marginOfError]] for an [[Observation]].
 *
 * http://schema.org/marginOfError
 */
var marginOfError = 'http://schema.org/marginOfError';
/**
 * masthead
 *
 * For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.
 *
 * http://schema.org/masthead
 */
var masthead = 'http://schema.org/masthead';
/**
 *
 *
 *
 *
 * http://schema.org/materialExtent
 */
var materialExtent = 'http://schema.org/materialExtent';
/**
 * mathExpression
 *
 * A mathematical expression (e.g. 'x^2-3x=0') that may be solved for a specific variable, simplified, or transformed. This can take many formats, e.g. LaTeX, Ascii-Math, or math as you would write with a keyboard.
 *
 * http://schema.org/mathExpression
 */
var mathExpression = 'http://schema.org/mathExpression';
/**
 * maxPrice
 *
 * The highest price if the price is a range.
 *
 * http://schema.org/maxPrice
 */
var maxPrice = 'http://schema.org/maxPrice';
/**
 * maxValue
 *
 * The upper value of some characteristic or property.
 *
 * http://schema.org/maxValue
 */
var maxValue = 'http://schema.org/maxValue';
/**
 * maximumAttendeeCapacity
 *
 * The total number of individuals that may attend an event or venue.
 *
 * http://schema.org/maximumAttendeeCapacity
 */
var maximumAttendeeCapacity = 'http://schema.org/maximumAttendeeCapacity';
/**
 * maximumEnrollment
 *
 * The maximum number of students who may be enrolled in the program.
 *
 * http://schema.org/maximumEnrollment
 */
var maximumEnrollment = 'http://schema.org/maximumEnrollment';
/**
 * maximumIntake
 *
 * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
 *
 * http://schema.org/maximumIntake
 */
var maximumIntake = 'http://schema.org/maximumIntake';
/**
 * maximumPhysicalAttendeeCapacity
 *
 * The maximum physical attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OfflineEventAttendanceMode]] (or the offline aspects, in the case of a [[MixedEventAttendanceMode]]).
 *
 * http://schema.org/maximumPhysicalAttendeeCapacity
 */
var maximumPhysicalAttendeeCapacity = 'http://schema.org/maximumPhysicalAttendeeCapacity';
/**
 * maximumVirtualAttendeeCapacity
 *
 * The maximum virtual attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OnlineEventAttendanceMode]] (or the online aspects, in the case of a [[MixedEventAttendanceMode]]).
 *
 * http://schema.org/maximumVirtualAttendeeCapacity
 */
var maximumVirtualAttendeeCapacity = 'http://schema.org/maximumVirtualAttendeeCapacity';
/**
 * mealService
 *
 * Description of the meals that will be provided or available for purchase.
 *
 * http://schema.org/mealService
 */
var mealService = 'http://schema.org/mealService';
/**
 * measuredProperty
 *
 * The measuredProperty of an [[Observation]], typically via its [[StatisticalVariable]]. There are various kinds of applicable [[Property]]: a schema.org property, a property from other RDF-compatible systems, e.g. W3C RDF Data Cube, Data Commons, Wikidata, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).
 *
 * http://schema.org/measuredProperty
 */
var measuredProperty = 'http://schema.org/measuredProperty';
/**
 * measurementDenominator
 *
 * Identifies the denominator variable when an observation represents a ratio or percentage.
 *
 * http://schema.org/measurementDenominator
 */
var measurementDenominator = 'http://schema.org/measurementDenominator';
/**
 * measurementMethod
 *
 * A subproperty of [[measurementTechnique]] that can be used for specifying specific methods, in particular via [[MeasurementMethodEnum]].
 *
 * http://schema.org/measurementMethod
 */
var measurementMethod = 'http://schema.org/measurementMethod';
/**
 * measurementQualifier
 *
 * Provides additional qualification to an observation. For example, a GDP observation measures the Nominal value.
 *
 * http://schema.org/measurementQualifier
 */
var measurementQualifier = 'http://schema.org/measurementQualifier';
/**
 * mechanismOfAction
 *
 * The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
 *
 * http://schema.org/mechanismOfAction
 */
var mechanismOfAction = 'http://schema.org/mechanismOfAction';
/**
 * mediaAuthenticityCategory
 *
 * Indicates a MediaManipulationRatingEnumeration classification of a media object (in the context of how it was published or shared).
 *
 * http://schema.org/mediaAuthenticityCategory
 */
var mediaAuthenticityCategory = 'http://schema.org/mediaAuthenticityCategory';
/**
 * mediaItemAppearance
 *
 * In the context of a [[MediaReview]], indicates specific media item(s) that are grouped using a [[MediaReviewItem]].
 *
 * http://schema.org/mediaItemAppearance
 */
var mediaItemAppearance = 'http://schema.org/mediaItemAppearance';
/**
 * median
 *
 * The median value.
 *
 * http://schema.org/median
 */
var median = 'http://schema.org/median';
/**
 * medicalAudience
 *
 * Medical audience for page.
 *
 * http://schema.org/medicalAudience
 */
var medicalAudience = 'http://schema.org/medicalAudience';
/**
 * medicalSpecialty
 *
 * A medical specialty of the provider.
 *
 * http://schema.org/medicalSpecialty
 */
var medicalSpecialty = 'http://schema.org/medicalSpecialty';
/**
 * medicineSystem
 *
 * The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
 *
 * http://schema.org/medicineSystem
 */
var medicineSystem = 'http://schema.org/medicineSystem';
/**
 * meetsEmissionStandard
 *
 * Indicates that the vehicle meets the respective emission standard.
 *
 * http://schema.org/meetsEmissionStandard
 */
var meetsEmissionStandard = 'http://schema.org/meetsEmissionStandard';
/**
 * members
 *
 * A member of this organization.
 *
 * http://schema.org/members
 */
var members = 'http://schema.org/members';
/**
 * membershipNumber
 *
 * A unique identifier for the membership.
 *
 * http://schema.org/membershipNumber
 */
var membershipNumber = 'http://schema.org/membershipNumber';
/**
 * membershipPointsEarned
 *
 * The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (E.g. stars, miles, etc.)
 *
 * http://schema.org/membershipPointsEarned
 */
var membershipPointsEarned = 'http://schema.org/membershipPointsEarned';
/**
 * memoryRequirements
 *
 * Minimum memory requirements.
 *
 * http://schema.org/memoryRequirements
 */
var memoryRequirements = 'http://schema.org/memoryRequirements';
/**
 * mentions
 *
 * Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
 *
 * http://schema.org/mentions
 */
var mentions = 'http://schema.org/mentions';
/**
 * menu
 *
 * Either the actual menu as a structured representation, as text, or a URL of the menu.
 *
 * http://schema.org/menu
 */
var menu = 'http://schema.org/menu';
/**
 * menuAddOn
 *
 * Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.
 *
 * http://schema.org/menuAddOn
 */
var menuAddOn = 'http://schema.org/menuAddOn';
/**
 * merchant
 *
 * 'merchant' is an out-dated term for 'seller'.
 *
 * http://schema.org/merchant
 */
var merchant = 'http://schema.org/merchant';
/**
 * messageAttachment
 *
 * A CreativeWork attached to the message.
 *
 * http://schema.org/messageAttachment
 */
var messageAttachment = 'http://schema.org/messageAttachment';
/**
 * mileageFromOdometer
 *
 * The total distance travelled by the particular vehicle since its initial production, as read from its odometer.\n\nTypical unit code(s): KMT for kilometers, SMI for statute miles
 *
 * http://schema.org/mileageFromOdometer
 */
var mileageFromOdometer = 'http://schema.org/mileageFromOdometer';
/**
 * minPrice
 *
 * The lowest price if the price is a range.
 *
 * http://schema.org/minPrice
 */
var minPrice = 'http://schema.org/minPrice';
/**
 * minValue
 *
 * The lower value of some characteristic or property.
 *
 * http://schema.org/minValue
 */
var minValue = 'http://schema.org/minValue';
/**
 * minimumPaymentDue
 *
 * The minimum payment required at this time.
 *
 * http://schema.org/minimumPaymentDue
 */
var minimumPaymentDue = 'http://schema.org/minimumPaymentDue';
/**
 * missionCoveragePrioritiesPolicy
 *
 * For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.
 *
 * http://schema.org/missionCoveragePrioritiesPolicy
 */
var missionCoveragePrioritiesPolicy = 'http://schema.org/missionCoveragePrioritiesPolicy';
/**
 * mobileUrl
 *
 * The [[mobileUrl]] property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.
 *
 * To discourage over-use, and reflecting intial usecases, the property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established [[url]] property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. The property is intended for the case when items (primarily [[Product]] and [[Offer]]) have extra URLs hosted on an additional "mobile site" alongside the main one. It should not be taken as an endorsement of this publication style.
 *
 *
 * http://schema.org/mobileUrl
 */
var mobileUrl = 'http://schema.org/mobileUrl';
/**
 * model
 *
 * The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
 *
 * http://schema.org/model
 */
var model = 'http://schema.org/model';
/**
 * modelDate
 *
 * The release date of a vehicle model (often used to differentiate versions of the same make and model).
 *
 * http://schema.org/modelDate
 */
var modelDate = 'http://schema.org/modelDate';
/**
 * modifiedTime
 *
 * The date and time the reservation was modified.
 *
 * http://schema.org/modifiedTime
 */
var modifiedTime = 'http://schema.org/modifiedTime';
/**
 * molecularFormula
 *
 * The empirical formula is the simplest whole number ratio of all the atoms in a molecule.
 *
 * http://schema.org/molecularFormula
 */
var molecularFormula = 'http://schema.org/molecularFormula';
/**
 * molecularWeight
 *
 * This is the molecular weight of the entity being described, not of the parent. Units should be included in the form '&lt;Number&gt; &lt;unit&gt;', for example '12 amu' or as '&lt;QuantitativeValue&gt;.
 *
 * http://schema.org/molecularWeight
 */
var molecularWeight = 'http://schema.org/molecularWeight';
/**
 * monoisotopicMolecularWeight
 *
 * The monoisotopic mass is the sum of the masses of the atoms in a molecule using the unbound, ground-state, rest mass of the principal (most abundant) isotope for each element instead of the isotopic average mass. Please include the units in the form '&lt;Number&gt; &lt;unit&gt;', for example '770.230488 g/mol' or as '&lt;QuantitativeValue&gt;.
 *
 * http://schema.org/monoisotopicMolecularWeight
 */
var monoisotopicMolecularWeight = 'http://schema.org/monoisotopicMolecularWeight';
/**
 * monthlyMinimumRepaymentAmount
 *
 * The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.
 *
 * http://schema.org/monthlyMinimumRepaymentAmount
 */
var monthlyMinimumRepaymentAmount = 'http://schema.org/monthlyMinimumRepaymentAmount';
/**
 * monthsOfExperience
 *
 * Indicates the minimal number of months of experience required for a position.
 *
 * http://schema.org/monthsOfExperience
 */
var monthsOfExperience = 'http://schema.org/monthsOfExperience';
/**
 * mpn
 *
 * The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
 *
 * http://schema.org/mpn
 */
var mpn = 'http://schema.org/mpn';
/**
 * multipleValues
 *
 * Whether multiple values are allowed for the property.  Default is false.
 *
 * http://schema.org/multipleValues
 */
var multipleValues = 'http://schema.org/multipleValues';
/**
 * muscleAction
 *
 * The movement the muscle generates.
 *
 * http://schema.org/muscleAction
 */
var muscleAction = 'http://schema.org/muscleAction';
/**
 * musicArrangement
 *
 * An arrangement derived from the composition.
 *
 * http://schema.org/musicArrangement
 */
var musicArrangement = 'http://schema.org/musicArrangement';
/**
 * musicBy
 *
 * The composer of the soundtrack.
 *
 * http://schema.org/musicBy
 */
var musicBy = 'http://schema.org/musicBy';
/**
 * musicCompositionForm
 *
 * The type of composition (e.g. overture, sonata, symphony, etc.).
 *
 * http://schema.org/musicCompositionForm
 */
var musicCompositionForm = 'http://schema.org/musicCompositionForm';
/**
 * musicGroupMember
 *
 * A member of a music group&#x2014;for example, John, Paul, George, or Ringo.
 *
 * http://schema.org/musicGroupMember
 */
var musicGroupMember = 'http://schema.org/musicGroupMember';
/**
 * musicReleaseFormat
 *
 * Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).
 *
 * http://schema.org/musicReleaseFormat
 */
var musicReleaseFormat = 'http://schema.org/musicReleaseFormat';
/**
 * musicalKey
 *
 * The key, mode, or scale this composition uses.
 *
 * http://schema.org/musicalKey
 */
var musicalKey = 'http://schema.org/musicalKey';
/**
 * naics
 *
 * The North American Industry Classification System (NAICS) code for a particular organization or business person.
 *
 * http://schema.org/naics
 */
var naics = 'http://schema.org/naics';
/**
 * name
 *
 * The name of the item.
 *
 * http://schema.org/name
 */
var name = 'http://schema.org/name';
/**
 * namedPosition
 *
 * A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.
 *
 * http://schema.org/namedPosition
 */
var namedPosition = 'http://schema.org/namedPosition';
/**
 * nationality
 *
 * Nationality of the person.
 *
 * http://schema.org/nationality
 */
var nationality = 'http://schema.org/nationality';
/**
 * naturalProgression
 *
 * The expected progression of the condition if it is not treated and allowed to progress naturally.
 *
 * http://schema.org/naturalProgression
 */
var naturalProgression = 'http://schema.org/naturalProgression';
/**
 * negativeNotes
 *
 * Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry
 *
 * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions
 * tend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].
 *
 * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).
 *
 * http://schema.org/negativeNotes
 */
var negativeNotes = 'http://schema.org/negativeNotes';
/**
 * nerve
 *
 * The underlying innervation associated with the muscle.
 *
 * http://schema.org/nerve
 */
var nerve = 'http://schema.org/nerve';
/**
 * nerveMotor
 *
 * The neurological pathway extension that involves muscle control.
 *
 * http://schema.org/nerveMotor
 */
var nerveMotor = 'http://schema.org/nerveMotor';
/**
 * netWorth
 *
 * The total financial value of the person as calculated by subtracting assets from liabilities.
 *
 * http://schema.org/netWorth
 */
var netWorth = 'http://schema.org/netWorth';
/**
 * newsUpdatesAndGuidelines
 *
 * Indicates a page with news updates and guidelines. This could often be (but is not required to be) the main page containing [[SpecialAnnouncement]] markup on a site.
 *
 * http://schema.org/newsUpdatesAndGuidelines
 */
var newsUpdatesAndGuidelines = 'http://schema.org/newsUpdatesAndGuidelines';
/**
 * nextItem
 *
 * A link to the ListItem that follows the current one.
 *
 * http://schema.org/nextItem
 */
var nextItem = 'http://schema.org/nextItem';
/**
 * noBylinesPolicy
 *
 * For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.
 *
 * http://schema.org/noBylinesPolicy
 */
var noBylinesPolicy = 'http://schema.org/noBylinesPolicy';
/**
 * nonEqual
 *
 * This ordering relation for qualitative values indicates that the subject is not equal to the object.
 *
 * http://schema.org/nonEqual
 */
var nonEqual = 'http://schema.org/nonEqual';
/**
 * nonProprietaryName
 *
 * The generic name of this drug or supplement.
 *
 * http://schema.org/nonProprietaryName
 */
var nonProprietaryName = 'http://schema.org/nonProprietaryName';
/**
 * nonprofitStatus
 *
 * nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.
 *
 * http://schema.org/nonprofitStatus
 */
var nonprofitStatus = 'http://schema.org/nonprofitStatus';
/**
 * normalRange
 *
 * Range of acceptable values for a typical patient, when applicable.
 *
 * http://schema.org/normalRange
 */
var normalRange = 'http://schema.org/normalRange';
/**
 * nsn
 *
 * Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]].
 *
 * http://schema.org/nsn
 */
var nsn = 'http://schema.org/nsn';
/**
 * numAdults
 *
 * The number of adults staying in the unit.
 *
 * http://schema.org/numAdults
 */
var numAdults = 'http://schema.org/numAdults';
/**
 * numChildren
 *
 * The number of children staying in the unit.
 *
 * http://schema.org/numChildren
 */
var numChildren = 'http://schema.org/numChildren';
/**
 * numConstraints
 *
 * Indicates the number of constraints property values defined for a particular [[ConstraintNode]] such as [[StatisticalVariable]]. This helps applications understand if they have access to a sufficiently complete description of a [[StatisticalVariable]] or other construct that is defined using properties on template-style nodes.
 *
 * http://schema.org/numConstraints
 */
var numConstraints = 'http://schema.org/numConstraints';
/**
 * numTracks
 *
 * The number of tracks in this album or playlist.
 *
 * http://schema.org/numTracks
 */
var numTracks = 'http://schema.org/numTracks';
/**
 * numberOfAccommodationUnits
 *
 * Indicates the total (available plus unavailable) number of accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAvailableAccommodationUnits]].
 *
 * http://schema.org/numberOfAccommodationUnits
 */
var numberOfAccommodationUnits = 'http://schema.org/numberOfAccommodationUnits';
/**
 * numberOfAirbags
 *
 * The number or type of airbags in the vehicle.
 *
 * http://schema.org/numberOfAirbags
 */
var numberOfAirbags = 'http://schema.org/numberOfAirbags';
/**
 * numberOfAvailableAccommodationUnits
 *
 * Indicates the number of available accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAccommodationUnits]].
 *
 * http://schema.org/numberOfAvailableAccommodationUnits
 */
var numberOfAvailableAccommodationUnits = 'http://schema.org/numberOfAvailableAccommodationUnits';
/**
 * numberOfAxles
 *
 * The number of axles.\n\nTypical unit code(s): C62
 *
 * http://schema.org/numberOfAxles
 */
var numberOfAxles = 'http://schema.org/numberOfAxles';
/**
 * numberOfBathroomsTotal
 *
 * The total integer number of bathrooms in some [[Accommodation]], following real estate conventions as [documented in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsTotalInteger+Field): "The simple sum of the number of bathrooms. For example for a property with two Full Bathrooms and one Half Bathroom, the Bathrooms Total Integer will be 3.". See also [[numberOfRooms]].
 *
 * http://schema.org/numberOfBathroomsTotal
 */
var numberOfBathroomsTotal = 'http://schema.org/numberOfBathroomsTotal';
/**
 * numberOfBedrooms
 *
 * The total integer number of bedrooms in a some [[Accommodation]], [[ApartmentComplex]] or [[FloorPlan]].
 *
 * http://schema.org/numberOfBedrooms
 */
var numberOfBedrooms = 'http://schema.org/numberOfBedrooms';
/**
 * numberOfBeds
 *
 * The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.
 *
 * http://schema.org/numberOfBeds
 */
var numberOfBeds = 'http://schema.org/numberOfBeds';
/**
 * numberOfCredits
 *
 * The number of credits or units awarded by a Course or required to complete an EducationalOccupationalProgram.
 *
 * http://schema.org/numberOfCredits
 */
var numberOfCredits = 'http://schema.org/numberOfCredits';
/**
 * numberOfDoors
 *
 * The number of doors.\n\nTypical unit code(s): C62
 *
 * http://schema.org/numberOfDoors
 */
var numberOfDoors = 'http://schema.org/numberOfDoors';
/**
 * numberOfEmployees
 *
 * The number of employees in an organization, e.g. business.
 *
 * http://schema.org/numberOfEmployees
 */
var numberOfEmployees = 'http://schema.org/numberOfEmployees';
/**
 * numberOfEpisodes
 *
 * The number of episodes in this season or series.
 *
 * http://schema.org/numberOfEpisodes
 */
var numberOfEpisodes = 'http://schema.org/numberOfEpisodes';
/**
 * numberOfForwardGears
 *
 * The total number of forward gears available for the transmission system of the vehicle.\n\nTypical unit code(s): C62
 *
 * http://schema.org/numberOfForwardGears
 */
var numberOfForwardGears = 'http://schema.org/numberOfForwardGears';
/**
 * numberOfFullBathrooms
 *
 * Number of full bathrooms - The total number of full and ¾ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsFull field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsFull+Field).
 *
 * http://schema.org/numberOfFullBathrooms
 */
var numberOfFullBathrooms = 'http://schema.org/numberOfFullBathrooms';
/**
 * numberOfItems
 *
 * The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.
 *
 * http://schema.org/numberOfItems
 */
var numberOfItems = 'http://schema.org/numberOfItems';
/**
 * numberOfLoanPayments
 *
 * The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.
 *
 * http://schema.org/numberOfLoanPayments
 */
var numberOfLoanPayments = 'http://schema.org/numberOfLoanPayments';
/**
 * numberOfPages
 *
 * The number of pages in the book.
 *
 * http://schema.org/numberOfPages
 */
var numberOfPages = 'http://schema.org/numberOfPages';
/**
 * numberOfPartialBathrooms
 *
 * Number of partial bathrooms - The total number of half and ¼ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsPartial field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsPartial+Field).
 *
 * http://schema.org/numberOfPartialBathrooms
 */
var numberOfPartialBathrooms = 'http://schema.org/numberOfPartialBathrooms';
/**
 * numberOfPlayers
 *
 * Indicate how many people can play this game (minimum, maximum, or range).
 *
 * http://schema.org/numberOfPlayers
 */
var numberOfPlayers = 'http://schema.org/numberOfPlayers';
/**
 * numberOfPreviousOwners
 *
 * The number of owners of the vehicle, including the current one.\n\nTypical unit code(s): C62
 *
 * http://schema.org/numberOfPreviousOwners
 */
var numberOfPreviousOwners = 'http://schema.org/numberOfPreviousOwners';
/**
 * numberOfRooms
 *
 * The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
 * Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.
 *
 * http://schema.org/numberOfRooms
 */
var numberOfRooms = 'http://schema.org/numberOfRooms';
/**
 * numberOfSeasons
 *
 * The number of seasons in this series.
 *
 * http://schema.org/numberOfSeasons
 */
var numberOfSeasons = 'http://schema.org/numberOfSeasons';
/**
 * numberedPosition
 *
 * A number associated with a role in an organization, for example, the number on an athlete's jersey.
 *
 * http://schema.org/numberedPosition
 */
var numberedPosition = 'http://schema.org/numberedPosition';
/**
 * nutrition
 *
 * Nutrition information about the recipe or menu item.
 *
 * http://schema.org/nutrition
 */
var nutrition = 'http://schema.org/nutrition';
/**
 * observationAbout
 *
 * The [[observationAbout]] property identifies an entity, often a [[Place]], associated with an [[Observation]].
 *
 * http://schema.org/observationAbout
 */
var observationAbout = 'http://schema.org/observationAbout';
/**
 * observationDate
 *
 * The observationDate of an [[Observation]].
 *
 * http://schema.org/observationDate
 */
var observationDate = 'http://schema.org/observationDate';
/**
 * observationPeriod
 *
 * The length of time an Observation took place over. The format follows `P[0-9]*[Y|M|D|h|m|s]`. For example, P1Y is Period 1 Year, P3M is Period 3 Months, P3h is Period 3 hours.
 *
 * http://schema.org/observationPeriod
 */
var observationPeriod = 'http://schema.org/observationPeriod';
/**
 * occupancy
 *
 * The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
 * Typical unit code(s): C62 for person
 *
 * http://schema.org/occupancy
 */
var occupancy = 'http://schema.org/occupancy';
/**
 * occupationLocation
 *
 *  The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.
 *
 * http://schema.org/occupationLocation
 */
var occupationLocation = 'http://schema.org/occupationLocation';
/**
 * occupationalCategory
 *
 * A category describing the job, preferably using a term from a taxonomy such as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.\n
 * Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.
 *
 * http://schema.org/occupationalCategory
 */
var occupationalCategory = 'http://schema.org/occupationalCategory';
/**
 * occupationalCredentialAwarded
 *
 * A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.
 *
 * http://schema.org/occupationalCredentialAwarded
 */
var occupationalCredentialAwarded = 'http://schema.org/occupationalCredentialAwarded';
/**
 * offerCount
 *
 * The number of offers for the product.
 *
 * http://schema.org/offerCount
 */
var offerCount = 'http://schema.org/offerCount';
/**
 * offersPrescriptionByMail
 *
 * Whether prescriptions can be delivered by mail.
 *
 * http://schema.org/offersPrescriptionByMail
 */
var offersPrescriptionByMail = 'http://schema.org/offersPrescriptionByMail';
/**
 * openingHours
 *
 * The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.\n\n* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.\n* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. \n* Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.\n* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.
 *
 * http://schema.org/openingHours
 */
var openingHours = 'http://schema.org/openingHours';
/**
 * openingHoursSpecification
 *
 * The opening hours of a certain place.
 *
 * http://schema.org/openingHoursSpecification
 */
var openingHoursSpecification = 'http://schema.org/openingHoursSpecification';
/**
 * opens
 *
 * The opening hour of the place or service on the given day(s) of the week.
 *
 * http://schema.org/opens
 */
var opens = 'http://schema.org/opens';
/**
 * operatingSystem
 *
 * Operating systems supported (Windows 7, OS X 10.6, Android 1.6).
 *
 * http://schema.org/operatingSystem
 */
var operatingSystem = 'http://schema.org/operatingSystem';
/**
 * opponent
 *
 * A sub property of participant. The opponent on this action.
 *
 * http://schema.org/opponent
 */
var opponent = 'http://schema.org/opponent';
/**
 * option
 *
 * A sub property of object. The options subject to this action.
 *
 * http://schema.org/option
 */
var option = 'http://schema.org/option';
/**
 * orderDate
 *
 * Date order was placed.
 *
 * http://schema.org/orderDate
 */
var orderDate = 'http://schema.org/orderDate';
/**
 * orderDelivery
 *
 * The delivery of the parcel related to this order or order item.
 *
 * http://schema.org/orderDelivery
 */
var orderDelivery = 'http://schema.org/orderDelivery';
/**
 * orderItemNumber
 *
 * The identifier of the order item.
 *
 * http://schema.org/orderItemNumber
 */
var orderItemNumber = 'http://schema.org/orderItemNumber';
/**
 * orderItemStatus
 *
 * The current status of the order item.
 *
 * http://schema.org/orderItemStatus
 */
var orderItemStatus = 'http://schema.org/orderItemStatus';
/**
 * orderNumber
 *
 * The identifier of the transaction.
 *
 * http://schema.org/orderNumber
 */
var orderNumber = 'http://schema.org/orderNumber';
/**
 * orderQuantity
 *
 * The number of the item ordered. If the property is not set, assume the quantity is one.
 *
 * http://schema.org/orderQuantity
 */
var orderQuantity = 'http://schema.org/orderQuantity';
/**
 * orderStatus
 *
 * The current status of the order.
 *
 * http://schema.org/orderStatus
 */
var orderStatus = 'http://schema.org/orderStatus';
/**
 * orderedItem
 *
 * The item ordered.
 *
 * http://schema.org/orderedItem
 */
var orderedItem = 'http://schema.org/orderedItem';
/**
 * organizer
 *
 * An organizer of an Event.
 *
 * http://schema.org/organizer
 */
var organizer = 'http://schema.org/organizer';
/**
 * originAddress
 *
 * Shipper's address.
 *
 * http://schema.org/originAddress
 */
var originAddress = 'http://schema.org/originAddress';
/**
 * originalMediaContextDescription
 *
 * Describes, in a [[MediaReview]] when dealing with [[DecontextualizedContent]], background information that can contribute to better interpretation of the [[MediaObject]].
 *
 * http://schema.org/originalMediaContextDescription
 */
var originalMediaContextDescription = 'http://schema.org/originalMediaContextDescription';
/**
 * originalMediaLink
 *
 * Link to the page containing an original version of the content, or directly to an online copy of the original [[MediaObject]] content, e.g. video file.
 *
 * http://schema.org/originalMediaLink
 */
var originalMediaLink = 'http://schema.org/originalMediaLink';
/**
 * originatesFrom
 *
 * The vasculature the lymphatic structure originates, or afferents, from.
 *
 * http://schema.org/originatesFrom
 */
var originatesFrom = 'http://schema.org/originatesFrom';
/**
 * overdosage
 *
 * Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.
 *
 * http://schema.org/overdosage
 */
var overdosage = 'http://schema.org/overdosage';
/**
 * ownedFrom
 *
 * The date and time of obtaining the product.
 *
 * http://schema.org/ownedFrom
 */
var ownedFrom = 'http://schema.org/ownedFrom';
/**
 * ownedThrough
 *
 * The date and time of giving up ownership on the product.
 *
 * http://schema.org/ownedThrough
 */
var ownedThrough = 'http://schema.org/ownedThrough';
/**
 * ownershipFundingInfo
 *
 * For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.
 *
 * http://schema.org/ownershipFundingInfo
 */
var ownershipFundingInfo = 'http://schema.org/ownershipFundingInfo';
/**
 * owns
 *
 * Products owned by the organization or person.
 *
 * http://schema.org/owns
 */
var owns = 'http://schema.org/owns';
/**
 * pageEnd
 *
 * The page on which the work ends; for example "138" or "xvi".
 *
 * http://schema.org/pageEnd
 */
var pageEnd = 'http://schema.org/pageEnd';
/**
 * pageStart
 *
 * The page on which the work starts; for example "135" or "xiii".
 *
 * http://schema.org/pageStart
 */
var pageStart = 'http://schema.org/pageStart';
/**
 * pagination
 *
 * Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
 *
 * http://schema.org/pagination
 */
var pagination = 'http://schema.org/pagination';
/**
 * parentItem
 *
 * The parent of a question, answer or item in general.
 *
 * http://schema.org/parentItem
 */
var parentItem = 'http://schema.org/parentItem';
/**
 * parentService
 *
 * A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.
 *
 * http://schema.org/parentService
 */
var parentService = 'http://schema.org/parentService';
/**
 * parents
 *
 * A parents of the person.
 *
 * http://schema.org/parents
 */
var parents = 'http://schema.org/parents';
/**
 * partOfEpisode
 *
 * The episode to which this clip belongs.
 *
 * http://schema.org/partOfEpisode
 */
var partOfEpisode = 'http://schema.org/partOfEpisode';
/**
 * partOfInvoice
 *
 * The order is being paid as part of the referenced Invoice.
 *
 * http://schema.org/partOfInvoice
 */
var partOfInvoice = 'http://schema.org/partOfInvoice';
/**
 * partOfOrder
 *
 * The overall order the items in this delivery were included in.
 *
 * http://schema.org/partOfOrder
 */
var partOfOrder = 'http://schema.org/partOfOrder';
/**
 * partOfSeason
 *
 * The season to which this episode belongs.
 *
 * http://schema.org/partOfSeason
 */
var partOfSeason = 'http://schema.org/partOfSeason';
/**
 * partOfSystem
 *
 * The anatomical or organ system that this structure is part of.
 *
 * http://schema.org/partOfSystem
 */
var partOfSystem = 'http://schema.org/partOfSystem';
/**
 * partOfTVSeries
 *
 * The TV series to which this episode or season belongs.
 *
 * http://schema.org/partOfTVSeries
 */
var partOfTVSeries = 'http://schema.org/partOfTVSeries';
/**
 * partySize
 *
 * Number of people the reservation should accommodate.
 *
 * http://schema.org/partySize
 */
var partySize = 'http://schema.org/partySize';
/**
 * passengerPriorityStatus
 *
 * The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).
 *
 * http://schema.org/passengerPriorityStatus
 */
var passengerPriorityStatus = 'http://schema.org/passengerPriorityStatus';
/**
 * passengerSequenceNumber
 *
 * The passenger's sequence number as assigned by the airline.
 *
 * http://schema.org/passengerSequenceNumber
 */
var passengerSequenceNumber = 'http://schema.org/passengerSequenceNumber';
/**
 * pathophysiology
 *
 * Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.
 *
 * http://schema.org/pathophysiology
 */
var pathophysiology = 'http://schema.org/pathophysiology';
/**
 * pattern
 *
 * A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.
 *
 * http://schema.org/pattern
 */
var pattern = 'http://schema.org/pattern';
/**
 * payload
 *
 * The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of [[weight]] and [[payload]]\n* Note 2: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\n* Note 3: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\n* Note 4: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/payload
 */
var payload = 'http://schema.org/payload';
/**
 * paymentAccepted
 *
 * Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.
 *
 * http://schema.org/paymentAccepted
 */
var paymentAccepted = 'http://schema.org/paymentAccepted';
/**
 * paymentDue
 *
 * The date that payment is due.
 *
 * http://schema.org/paymentDue
 */
var paymentDue = 'http://schema.org/paymentDue';
/**
 * paymentMethod
 *
 * The name of the credit card or other method of payment for the order.
 *
 * http://schema.org/paymentMethod
 */
var paymentMethod = 'http://schema.org/paymentMethod';
/**
 * paymentMethodId
 *
 * An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
 *
 * http://schema.org/paymentMethodId
 */
var paymentMethodId = 'http://schema.org/paymentMethodId';
/**
 * paymentStatus
 *
 * The status of payment; whether the invoice has been paid or not.
 *
 * http://schema.org/paymentStatus
 */
var paymentStatus = 'http://schema.org/paymentStatus';
/**
 * paymentUrl
 *
 * The URL for sending a payment.
 *
 * http://schema.org/paymentUrl
 */
var paymentUrl = 'http://schema.org/paymentUrl';
/**
 * penciler
 *
 * The individual who draws the primary narrative artwork.
 *
 * http://schema.org/penciler
 */
var penciler = 'http://schema.org/penciler';
/**
 * percentile10
 *
 * The 10th percentile value.
 *
 * http://schema.org/percentile10
 */
var percentile10 = 'http://schema.org/percentile10';
/**
 * percentile25
 *
 * The 25th percentile value.
 *
 * http://schema.org/percentile25
 */
var percentile25 = 'http://schema.org/percentile25';
/**
 * percentile75
 *
 * The 75th percentile value.
 *
 * http://schema.org/percentile75
 */
var percentile75 = 'http://schema.org/percentile75';
/**
 * percentile90
 *
 * The 90th percentile value.
 *
 * http://schema.org/percentile90
 */
var percentile90 = 'http://schema.org/percentile90';
/**
 * performerIn
 *
 * Event that this person is a performer or participant in.
 *
 * http://schema.org/performerIn
 */
var performerIn = 'http://schema.org/performerIn';
/**
 * performers
 *
 * The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.
 *
 * http://schema.org/performers
 */
var performers = 'http://schema.org/performers';
/**
 * permissionType
 *
 * The type of permission granted the person, organization, or audience.
 *
 * http://schema.org/permissionType
 */
var permissionType = 'http://schema.org/permissionType';
/**
 * permissions
 *
 * Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
 *
 * http://schema.org/permissions
 */
var permissions = 'http://schema.org/permissions';
/**
 * permitAudience
 *
 * The target audience for this permit.
 *
 * http://schema.org/permitAudience
 */
var permitAudience = 'http://schema.org/permitAudience';
/**
 * permittedUsage
 *
 * Indications regarding the permitted usage of the accommodation.
 *
 * http://schema.org/permittedUsage
 */
var permittedUsage = 'http://schema.org/permittedUsage';
/**
 * petsAllowed
 *
 * Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.
 *
 * http://schema.org/petsAllowed
 */
var petsAllowed = 'http://schema.org/petsAllowed';
/**
 * phoneticText
 *
 * Representation of a text [[textValue]] using the specified [[speechToTextMarkup]]. For example the city name of Houston in IPA: /ˈhjuːstən/.
 *
 * http://schema.org/phoneticText
 */
var phoneticText = 'http://schema.org/phoneticText';
/**
 * photos
 *
 * Photographs of this place.
 *
 * http://schema.org/photos
 */
var photos = 'http://schema.org/photos';
/**
 * physicalRequirement
 *
 * A description of the types of physical activity associated with the job. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.
 *
 * http://schema.org/physicalRequirement
 */
var physicalRequirement = 'http://schema.org/physicalRequirement';
/**
 * physiologicalBenefits
 *
 * Specific physiologic benefits associated to the plan.
 *
 * http://schema.org/physiologicalBenefits
 */
var physiologicalBenefits = 'http://schema.org/physiologicalBenefits';
/**
 * pickupLocation
 *
 * Where a taxi will pick up a passenger or a rental car can be picked up.
 *
 * http://schema.org/pickupLocation
 */
var pickupLocation = 'http://schema.org/pickupLocation';
/**
 * pickupTime
 *
 * When a taxi will pick up a passenger or a rental car can be picked up.
 *
 * http://schema.org/pickupTime
 */
var pickupTime = 'http://schema.org/pickupTime';
/**
 * playMode
 *
 * Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
 *
 * http://schema.org/playMode
 */
var playMode = 'http://schema.org/playMode';
/**
 * playerType
 *
 * Player type required&#x2014;for example, Flash or Silverlight.
 *
 * http://schema.org/playerType
 */
var playerType = 'http://schema.org/playerType';
/**
 * playersOnline
 *
 * Number of players on the server.
 *
 * http://schema.org/playersOnline
 */
var playersOnline = 'http://schema.org/playersOnline';
/**
 * polygon
 *
 * A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.
 *
 * http://schema.org/polygon
 */
var polygon = 'http://schema.org/polygon';
/**
 * populationType
 *
 * Indicates the populationType common to all members of a [[StatisticalPopulation]] or all cases within the scope of a [[StatisticalVariable]].
 *
 * http://schema.org/populationType
 */
var populationType = 'http://schema.org/populationType';
/**
 * positiveNotes
 *
 * Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.
 *
 * In the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.
 *
 * The property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).
 *
 * http://schema.org/positiveNotes
 */
var positiveNotes = 'http://schema.org/positiveNotes';
/**
 * possibleComplication
 *
 * A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.
 *
 * http://schema.org/possibleComplication
 */
var possibleComplication = 'http://schema.org/possibleComplication';
/**
 * possibleTreatment
 *
 * A possible treatment to address this condition, sign or symptom.
 *
 * http://schema.org/possibleTreatment
 */
var possibleTreatment = 'http://schema.org/possibleTreatment';
/**
 * postOfficeBoxNumber
 *
 * The post office box number for PO box addresses.
 *
 * http://schema.org/postOfficeBoxNumber
 */
var postOfficeBoxNumber = 'http://schema.org/postOfficeBoxNumber';
/**
 * postOp
 *
 * A description of the postoperative procedures, care, and/or followups for this device.
 *
 * http://schema.org/postOp
 */
var postOp = 'http://schema.org/postOp';
/**
 * postalCode
 *
 * The postal code. For example, 94043.
 *
 * http://schema.org/postalCode
 */
var postalCode = 'http://schema.org/postalCode';
/**
 * postalCodeBegin
 *
 * First postal code in a range (included).
 *
 * http://schema.org/postalCodeBegin
 */
var postalCodeBegin = 'http://schema.org/postalCodeBegin';
/**
 * postalCodeEnd
 *
 * Last postal code in the range (included). Needs to be after [[postalCodeBegin]].
 *
 * http://schema.org/postalCodeEnd
 */
var postalCodeEnd = 'http://schema.org/postalCodeEnd';
/**
 * postalCodePrefix
 *
 * A defined range of postal codes indicated by a common textual prefix. Used for non-numeric systems such as UK.
 *
 * http://schema.org/postalCodePrefix
 */
var postalCodePrefix = 'http://schema.org/postalCodePrefix';
/**
 * postalCodeRange
 *
 * A defined range of postal codes.
 *
 * http://schema.org/postalCodeRange
 */
var postalCodeRange = 'http://schema.org/postalCodeRange';
/**
 * potentialAction
 *
 * Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
 *
 * http://schema.org/potentialAction
 */
var potentialAction = 'http://schema.org/potentialAction';
/**
 * potentialUse
 *
 * Intended use of the BioChemEntity by humans.
 *
 * http://schema.org/potentialUse
 */
var potentialUse = 'http://schema.org/potentialUse';
/**
 * preOp
 *
 * A description of the workup, testing, and other preparations required before implanting this device.
 *
 * http://schema.org/preOp
 */
var preOp = 'http://schema.org/preOp';
/**
 * predecessorOf
 *
 * A pointer from a previous, often discontinued variant of the product to its newer variant.
 *
 * http://schema.org/predecessorOf
 */
var predecessorOf = 'http://schema.org/predecessorOf';
/**
 * pregnancyCategory
 *
 * Pregnancy category of this drug.
 *
 * http://schema.org/pregnancyCategory
 */
var pregnancyCategory = 'http://schema.org/pregnancyCategory';
/**
 * pregnancyWarning
 *
 * Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.
 *
 * http://schema.org/pregnancyWarning
 */
var pregnancyWarning = 'http://schema.org/pregnancyWarning';
/**
 * prepTime
 *
 * The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
 *
 * http://schema.org/prepTime
 */
var prepTime = 'http://schema.org/prepTime';
/**
 * preparation
 *
 * Typical preparation that a patient must undergo before having the procedure performed.
 *
 * http://schema.org/preparation
 */
var preparation = 'http://schema.org/preparation';
/**
 * prescribingInfo
 *
 * Link to prescribing information for the drug.
 *
 * http://schema.org/prescribingInfo
 */
var prescribingInfo = 'http://schema.org/prescribingInfo';
/**
 * prescriptionStatus
 *
 * Indicates the status of drug prescription, e.g. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.
 *
 * http://schema.org/prescriptionStatus
 */
var prescriptionStatus = 'http://schema.org/prescriptionStatus';
/**
 * previousItem
 *
 * A link to the ListItem that precedes the current one.
 *
 * http://schema.org/previousItem
 */
var previousItem = 'http://schema.org/previousItem';
/**
 * previousStartDate
 *
 * Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.
 *
 * http://schema.org/previousStartDate
 */
var previousStartDate = 'http://schema.org/previousStartDate';
/**
 * price
 *
 * The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n\nUsage guidelines:\n\n* Use the [[priceCurrency]] property (with standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR") instead of including [ambiguous symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) such as '$' in the value.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n* Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.
 *
 *
 * http://schema.org/price
 */
var price = 'http://schema.org/price';
/**
 * priceComponent
 *
 * This property links to all [[UnitPriceSpecification]] nodes that apply in parallel for the [[CompoundPriceSpecification]] node.
 *
 * http://schema.org/priceComponent
 */
var priceComponent = 'http://schema.org/priceComponent';
/**
 * priceComponentType
 *
 * Identifies a price component (for example, a line item on an invoice), part of the total price for an offer.
 *
 * http://schema.org/priceComponentType
 */
var priceComponentType = 'http://schema.org/priceComponentType';
/**
 * priceCurrency
 *
 * The currency of the price, or a price component when attached to [[PriceSpecification]] and its subtypes.\n\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. "Ithaca HOUR".
 *
 * http://schema.org/priceCurrency
 */
var priceCurrency = 'http://schema.org/priceCurrency';
/**
 * priceRange
 *
 * The price range of the business, for example ```$$$```.
 *
 * http://schema.org/priceRange
 */
var priceRange = 'http://schema.org/priceRange';
/**
 * priceSpecification
 *
 * One or more detailed price specifications, indicating the unit price and delivery or payment charges.
 *
 * http://schema.org/priceSpecification
 */
var priceSpecification = 'http://schema.org/priceSpecification';
/**
 * priceType
 *
 * Defines the type of a price specified for an offered product, for example a list price, a (temporary) sale price or a manufacturer suggested retail price. If multiple prices are specified for an offer the [[priceType]] property can be used to identify the type of each such specified price. The value of priceType can be specified as a value from enumeration PriceTypeEnumeration or as a free form text string for price types that are not already predefined in PriceTypeEnumeration.
 *
 * http://schema.org/priceType
 */
var priceType = 'http://schema.org/priceType';
/**
 * priceValidUntil
 *
 * The date after which the price is no longer available.
 *
 * http://schema.org/priceValidUntil
 */
var priceValidUntil = 'http://schema.org/priceValidUntil';
/**
 * primaryImageOfPage
 *
 * Indicates the main image on the page.
 *
 * http://schema.org/primaryImageOfPage
 */
var primaryImageOfPage = 'http://schema.org/primaryImageOfPage';
/**
 * primaryPrevention
 *
 * A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.
 *
 * http://schema.org/primaryPrevention
 */
var primaryPrevention = 'http://schema.org/primaryPrevention';
/**
 * printColumn
 *
 * The number of the column in which the NewsArticle appears in the print edition.
 *
 * http://schema.org/printColumn
 */
var printColumn = 'http://schema.org/printColumn';
/**
 * printEdition
 *
 * The edition of the print product in which the NewsArticle appears.
 *
 * http://schema.org/printEdition
 */
var printEdition = 'http://schema.org/printEdition';
/**
 * printPage
 *
 * If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).
 *
 * http://schema.org/printPage
 */
var printPage = 'http://schema.org/printPage';
/**
 * printSection
 *
 * If this NewsArticle appears in print, this field indicates the print section in which the article appeared.
 *
 * http://schema.org/printSection
 */
var printSection = 'http://schema.org/printSection';
/**
 * procedure
 *
 * A description of the procedure involved in setting up, using, and/or installing the device.
 *
 * http://schema.org/procedure
 */
var procedure = 'http://schema.org/procedure';
/**
 * procedureType
 *
 * The type of procedure, for example Surgical, Noninvasive, or Percutaneous.
 *
 * http://schema.org/procedureType
 */
var procedureType = 'http://schema.org/procedureType';
/**
 * processingTime
 *
 * Estimated processing time for the service using this channel.
 *
 * http://schema.org/processingTime
 */
var processingTime = 'http://schema.org/processingTime';
/**
 * processorRequirements
 *
 * Processor architecture required to run the application (e.g. IA64).
 *
 * http://schema.org/processorRequirements
 */
var processorRequirements = 'http://schema.org/processorRequirements';
/**
 * producer
 *
 * The person or organization who produced the work (e.g. music album, movie, TV/radio series etc.).
 *
 * http://schema.org/producer
 */
var producer = 'http://schema.org/producer';
/**
 * produces
 *
 * The tangible thing generated by the service, e.g. a passport, permit, etc.
 *
 * http://schema.org/produces
 */
var produces = 'http://schema.org/produces';
/**
 * productGroupID
 *
 * Indicates a textual identifier for a ProductGroup.
 *
 * http://schema.org/productGroupID
 */
var productGroupID = 'http://schema.org/productGroupID';
/**
 * productID
 *
 * The product identifier, such as ISBN. For example: ``` meta itemprop="productID" content="isbn:123-456-789" ```.
 *
 * http://schema.org/productID
 */
var productID = 'http://schema.org/productID';
/**
 * productReturnDays
 *
 * The productReturnDays property indicates the number of days (from purchase) within which relevant product return policy is applicable.
 *
 * http://schema.org/productReturnDays
 */
var productReturnDays = 'http://schema.org/productReturnDays';
/**
 * productReturnLink
 *
 * Indicates a Web page or service by URL, for product return.
 *
 * http://schema.org/productReturnLink
 */
var productReturnLink = 'http://schema.org/productReturnLink';
/**
 * productSupported
 *
 * The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones").
 *
 * http://schema.org/productSupported
 */
var productSupported = 'http://schema.org/productSupported';
/**
 * productionCompany
 *
 * The production company or studio responsible for the item, e.g. series, video game, episode etc.
 *
 * http://schema.org/productionCompany
 */
var productionCompany = 'http://schema.org/productionCompany';
/**
 * productionDate
 *
 * The date of production of the item, e.g. vehicle.
 *
 * http://schema.org/productionDate
 */
var productionDate = 'http://schema.org/productionDate';
/**
 * proficiencyLevel
 *
 * Proficiency needed for this content; expected values: 'Beginner', 'Expert'.
 *
 * http://schema.org/proficiencyLevel
 */
var proficiencyLevel = 'http://schema.org/proficiencyLevel';
/**
 * programMembershipUsed
 *
 * Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.
 *
 * http://schema.org/programMembershipUsed
 */
var programMembershipUsed = 'http://schema.org/programMembershipUsed';
/**
 * programName
 *
 * The program providing the membership.
 *
 * http://schema.org/programName
 */
var programName = 'http://schema.org/programName';
/**
 * programPrerequisites
 *
 * Prerequisites for enrolling in the program.
 *
 * http://schema.org/programPrerequisites
 */
var programPrerequisites = 'http://schema.org/programPrerequisites';
/**
 * programType
 *
 * The type of educational or occupational program. For example, classroom, internship, alternance, etc.
 *
 * http://schema.org/programType
 */
var programType = 'http://schema.org/programType';
/**
 * programmingLanguage
 *
 * The computer programming language.
 *
 * http://schema.org/programmingLanguage
 */
var programmingLanguage = 'http://schema.org/programmingLanguage';
/**
 * programmingModel
 *
 * Indicates whether API is managed or unmanaged.
 *
 * http://schema.org/programmingModel
 */
var programmingModel = 'http://schema.org/programmingModel';
/**
 * propertyID
 *
 * A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
 * (1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific ID of the property), or (3)
 * a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
 * Standards bodies should promote a standard prefix for the identifiers of properties from their standards.
 *
 * http://schema.org/propertyID
 */
var propertyID = 'http://schema.org/propertyID';
/**
 * proprietaryName
 *
 * Proprietary name given to the diet plan, typically by its originator or creator.
 *
 * http://schema.org/proprietaryName
 */
var proprietaryName = 'http://schema.org/proprietaryName';
/**
 * proteinContent
 *
 * The number of grams of protein.
 *
 * http://schema.org/proteinContent
 */
var proteinContent = 'http://schema.org/proteinContent';
/**
 * providerMobility
 *
 * Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
 *
 * http://schema.org/providerMobility
 */
var providerMobility = 'http://schema.org/providerMobility';
/**
 * providesService
 *
 * The service provided by this channel.
 *
 * http://schema.org/providesService
 */
var providesService = 'http://schema.org/providesService';
/**
 * publicAccess
 *
 * A flag to signal that the [[Place]] is open to public visitors.  If this property is omitted there is no assumed default boolean value
 *
 * http://schema.org/publicAccess
 */
var publicAccess = 'http://schema.org/publicAccess';
/**
 * publicTransportClosuresInfo
 *
 * Information about public transport closures.
 *
 * http://schema.org/publicTransportClosuresInfo
 */
var publicTransportClosuresInfo = 'http://schema.org/publicTransportClosuresInfo';
/**
 * publication
 *
 * A publication event associated with the item.
 *
 * http://schema.org/publication
 */
var publication = 'http://schema.org/publication';
/**
 * publicationType
 *
 * The type of the medical article, taken from the US NLM MeSH publication type catalog. See also [MeSH documentation](http://www.nlm.nih.gov/mesh/pubtypes.html).
 *
 * http://schema.org/publicationType
 */
var publicationType = 'http://schema.org/publicationType';
/**
 * publishedBy
 *
 * An agent associated with the publication event.
 *
 * http://schema.org/publishedBy
 */
var publishedBy = 'http://schema.org/publishedBy';
/**
 * publishedOn
 *
 * A broadcast service associated with the publication event.
 *
 * http://schema.org/publishedOn
 */
var publishedOn = 'http://schema.org/publishedOn';
/**
 * publisher
 *
 * The publisher of the creative work.
 *
 * http://schema.org/publisher
 */
var publisher = 'http://schema.org/publisher';
/**
 * publisherImprint
 *
 * The publishing division which published the comic.
 *
 * http://schema.org/publisherImprint
 */
var publisherImprint = 'http://schema.org/publisherImprint';
/**
 * purchaseDate
 *
 * The date the item, e.g. vehicle, was purchased by the current owner.
 *
 * http://schema.org/purchaseDate
 */
var purchaseDate = 'http://schema.org/purchaseDate';
/**
 * qualifications
 *
 * Specific qualifications required for this role or Occupation.
 *
 * http://schema.org/qualifications
 */
var qualifications = 'http://schema.org/qualifications';
/**
 * quarantineGuidelines
 *
 * Guidelines about quarantine rules, e.g. in the context of a pandemic.
 *
 * http://schema.org/quarantineGuidelines
 */
var quarantineGuidelines = 'http://schema.org/quarantineGuidelines';
/**
 * query
 *
 * A sub property of instrument. The query used on this action.
 *
 * http://schema.org/query
 */
var query = 'http://schema.org/query';
/**
 * quest
 *
 * The task that a player-controlled character, or group of characters may complete in order to gain a reward.
 *
 * http://schema.org/quest
 */
var quest = 'http://schema.org/quest';
/**
 * question
 *
 * A sub property of object. A question.
 *
 * http://schema.org/question
 */
var question = 'http://schema.org/question';
/**
 * rangeIncludes
 *
 * Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.
 *
 * http://schema.org/rangeIncludes
 */
var rangeIncludes = 'http://schema.org/rangeIncludes';
/**
 * ratingCount
 *
 * The count of total number of ratings.
 *
 * http://schema.org/ratingCount
 */
var ratingCount = 'http://schema.org/ratingCount';
/**
 * ratingExplanation
 *
 * A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with "fact check" markup using [[ClaimReview]].
 *
 * http://schema.org/ratingExplanation
 */
var ratingExplanation = 'http://schema.org/ratingExplanation';
/**
 * ratingValue
 *
 * The rating for the content.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
 *
 * http://schema.org/ratingValue
 */
var ratingValue = 'http://schema.org/ratingValue';
/**
 * readBy
 *
 * A person who reads (performs) the audiobook.
 *
 * http://schema.org/readBy
 */
var readBy = 'http://schema.org/readBy';
/**
 * readonlyValue
 *
 * Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
 *
 * http://schema.org/readonlyValue
 */
var readonlyValue = 'http://schema.org/readonlyValue';
/**
 * realEstateAgent
 *
 * A sub property of participant. The real estate agent involved in the action.
 *
 * http://schema.org/realEstateAgent
 */
var realEstateAgent = 'http://schema.org/realEstateAgent';
/**
 * recipe
 *
 * A sub property of instrument. The recipe/instructions used to perform the action.
 *
 * http://schema.org/recipe
 */
var recipe = 'http://schema.org/recipe';
/**
 * recipeCategory
 *
 * The category of the recipe—for example, appetizer, entree, etc.
 *
 * http://schema.org/recipeCategory
 */
var recipeCategory = 'http://schema.org/recipeCategory';
/**
 * recipeCuisine
 *
 * The cuisine of the recipe (for example, French or Ethiopian).
 *
 * http://schema.org/recipeCuisine
 */
var recipeCuisine = 'http://schema.org/recipeCuisine';
/**
 * recipeInstructions
 *
 * A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.
 *
 * http://schema.org/recipeInstructions
 */
var recipeInstructions = 'http://schema.org/recipeInstructions';
/**
 * recipeYield
 *
 * The quantity produced by the recipe (for example, number of people served, number of servings, etc).
 *
 * http://schema.org/recipeYield
 */
var recipeYield = 'http://schema.org/recipeYield';
/**
 * recognizedBy
 *
 * An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.
 *
 * http://schema.org/recognizedBy
 */
var recognizedBy = 'http://schema.org/recognizedBy';
/**
 * recognizingAuthority
 *
 * If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
 *
 * http://schema.org/recognizingAuthority
 */
var recognizingAuthority = 'http://schema.org/recognizingAuthority';
/**
 * recommendationStrength
 *
 * Strength of the guideline's recommendation (e.g. 'class I').
 *
 * http://schema.org/recommendationStrength
 */
var recommendationStrength = 'http://schema.org/recommendationStrength';
/**
 * recommendedIntake
 *
 * Recommended intake of this supplement for a given population as defined by a specific recommending authority.
 *
 * http://schema.org/recommendedIntake
 */
var recommendedIntake = 'http://schema.org/recommendedIntake';
/**
 * recordLabel
 *
 * The label that issued the release.
 *
 * http://schema.org/recordLabel
 */
var recordLabel = 'http://schema.org/recordLabel';
/**
 * recourseLoan
 *
 * The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.
 *
 * http://schema.org/recourseLoan
 */
var recourseLoan = 'http://schema.org/recourseLoan';
/**
 * referenceQuantity
 *
 * The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.
 *
 * http://schema.org/referenceQuantity
 */
var referenceQuantity = 'http://schema.org/referenceQuantity';
/**
 * referencesOrder
 *
 * The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.
 *
 * http://schema.org/referencesOrder
 */
var referencesOrder = 'http://schema.org/referencesOrder';
/**
 * refundType
 *
 * A refund type, from an enumerated list.
 *
 * http://schema.org/refundType
 */
var refundType = 'http://schema.org/refundType';
/**
 * regionDrained
 *
 * The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.
 *
 * http://schema.org/regionDrained
 */
var regionDrained = 'http://schema.org/regionDrained';
/**
 * regionsAllowed
 *
 * The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in [ISO 3166 format](http://en.wikipedia.org/wiki/ISO_3166).
 *
 * http://schema.org/regionsAllowed
 */
var regionsAllowed = 'http://schema.org/regionsAllowed';
/**
 * relatedAnatomy
 *
 * Anatomical systems or structures that relate to the superficial anatomy.
 *
 * http://schema.org/relatedAnatomy
 */
var relatedAnatomy = 'http://schema.org/relatedAnatomy';
/**
 * relatedCondition
 *
 * A medical condition associated with this anatomy.
 *
 * http://schema.org/relatedCondition
 */
var relatedCondition = 'http://schema.org/relatedCondition';
/**
 * relatedDrug
 *
 * Any other drug related to this one, for example commonly-prescribed alternatives.
 *
 * http://schema.org/relatedDrug
 */
var relatedDrug = 'http://schema.org/relatedDrug';
/**
 * relatedLink
 *
 * A link related to this web page, for example to other related web pages.
 *
 * http://schema.org/relatedLink
 */
var relatedLink = 'http://schema.org/relatedLink';
/**
 * relatedStructure
 *
 * Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.
 *
 * http://schema.org/relatedStructure
 */
var relatedStructure = 'http://schema.org/relatedStructure';
/**
 * relatedTherapy
 *
 * A medical therapy related to this anatomy.
 *
 * http://schema.org/relatedTherapy
 */
var relatedTherapy = 'http://schema.org/relatedTherapy';
/**
 * relatedTo
 *
 * The most generic familial relation.
 *
 * http://schema.org/relatedTo
 */
var relatedTo = 'http://schema.org/relatedTo';
/**
 * releaseDate
 *
 * The release date of a product or product model. This can be used to distinguish the exact variant of a product.
 *
 * http://schema.org/releaseDate
 */
var releaseDate = 'http://schema.org/releaseDate';
/**
 * releaseNotes
 *
 * Description of what changed in this version.
 *
 * http://schema.org/releaseNotes
 */
var releaseNotes = 'http://schema.org/releaseNotes';
/**
 * releasedEvent
 *
 * The place and time the release was issued, expressed as a PublicationEvent.
 *
 * http://schema.org/releasedEvent
 */
var releasedEvent = 'http://schema.org/releasedEvent';
/**
 * relevantOccupation
 *
 * The Occupation for the JobPosting.
 *
 * http://schema.org/relevantOccupation
 */
var relevantOccupation = 'http://schema.org/relevantOccupation';
/**
 * relevantSpecialty
 *
 * If applicable, a medical specialty in which this entity is relevant.
 *
 * http://schema.org/relevantSpecialty
 */
var relevantSpecialty = 'http://schema.org/relevantSpecialty';
/**
 * remainingAttendeeCapacity
 *
 * The number of attendee places for an event that remain unallocated.
 *
 * http://schema.org/remainingAttendeeCapacity
 */
var remainingAttendeeCapacity = 'http://schema.org/remainingAttendeeCapacity';
/**
 * renegotiableLoan
 *
 * Whether the terms for payment of interest can be renegotiated during the life of the loan.
 *
 * http://schema.org/renegotiableLoan
 */
var renegotiableLoan = 'http://schema.org/renegotiableLoan';
/**
 * repeatCount
 *
 * Defines the number of times a recurring [[Event]] will take place.
 *
 * http://schema.org/repeatCount
 */
var repeatCount = 'http://schema.org/repeatCount';
/**
 * repeatFrequency
 *
 * Defines the frequency at which [[Event]]s will occur according to a schedule [[Schedule]]. The intervals between
 *       events should be defined as a [[Duration]] of time.
 *
 * http://schema.org/repeatFrequency
 */
var repeatFrequency = 'http://schema.org/repeatFrequency';
/**
 * repetitions
 *
 * Number of times one should repeat the activity.
 *
 * http://schema.org/repetitions
 */
var repetitions = 'http://schema.org/repetitions';
/**
 * replacee
 *
 * A sub property of object. The object that is being replaced.
 *
 * http://schema.org/replacee
 */
var replacee = 'http://schema.org/replacee';
/**
 * replacer
 *
 * A sub property of object. The object that replaces.
 *
 * http://schema.org/replacer
 */
var replacer = 'http://schema.org/replacer';
/**
 * replyToUrl
 *
 * The URL at which a reply may be posted to the specified UserComment.
 *
 * http://schema.org/replyToUrl
 */
var replyToUrl = 'http://schema.org/replyToUrl';
/**
 * reportNumber
 *
 * The number or other unique designator assigned to a Report by the publishing organization.
 *
 * http://schema.org/reportNumber
 */
var reportNumber = 'http://schema.org/reportNumber';
/**
 * representativeOfPage
 *
 * Indicates whether this image is representative of the content of the page.
 *
 * http://schema.org/representativeOfPage
 */
var representativeOfPage = 'http://schema.org/representativeOfPage';
/**
 * requiredCollateral
 *
 * Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)
 *
 * http://schema.org/requiredCollateral
 */
var requiredCollateral = 'http://schema.org/requiredCollateral';
/**
 * requiredGender
 *
 * Audiences defined by a person's gender.
 *
 * http://schema.org/requiredGender
 */
var requiredGender = 'http://schema.org/requiredGender';
/**
 * requiredMaxAge
 *
 * Audiences defined by a person's maximum age.
 *
 * http://schema.org/requiredMaxAge
 */
var requiredMaxAge = 'http://schema.org/requiredMaxAge';
/**
 * requiredMinAge
 *
 * Audiences defined by a person's minimum age.
 *
 * http://schema.org/requiredMinAge
 */
var requiredMinAge = 'http://schema.org/requiredMinAge';
/**
 * requiredQuantity
 *
 * The required quantity of the item(s).
 *
 * http://schema.org/requiredQuantity
 */
var requiredQuantity = 'http://schema.org/requiredQuantity';
/**
 * requirements
 *
 * Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).
 *
 * http://schema.org/requirements
 */
var requirements = 'http://schema.org/requirements';
/**
 * requiresSubscription
 *
 * Indicates if use of the media require a subscription  (either paid or free). Allowed values are ```true``` or ```false``` (note that an earlier version had 'yes', 'no').
 *
 * http://schema.org/requiresSubscription
 */
var requiresSubscription = 'http://schema.org/requiresSubscription';
/**
 * reservationFor
 *
 * The thing -- flight, event, restaurant, etc. being reserved.
 *
 * http://schema.org/reservationFor
 */
var reservationFor = 'http://schema.org/reservationFor';
/**
 * reservationId
 *
 * A unique identifier for the reservation.
 *
 * http://schema.org/reservationId
 */
var reservationId = 'http://schema.org/reservationId';
/**
 * reservationStatus
 *
 * The current status of the reservation.
 *
 * http://schema.org/reservationStatus
 */
var reservationStatus = 'http://schema.org/reservationStatus';
/**
 * reservedTicket
 *
 * A ticket associated with the reservation.
 *
 * http://schema.org/reservedTicket
 */
var reservedTicket = 'http://schema.org/reservedTicket';
/**
 * responsibilities
 *
 * Responsibilities associated with this role or Occupation.
 *
 * http://schema.org/responsibilities
 */
var responsibilities = 'http://schema.org/responsibilities';
/**
 * restPeriods
 *
 * How often one should break from the activity.
 *
 * http://schema.org/restPeriods
 */
var restPeriods = 'http://schema.org/restPeriods';
/**
 * restockingFee
 *
 * Use [[MonetaryAmount]] to specify a fixed restocking fee for product returns, or use [[Number]] to specify a percentage of the product price paid by the customer.
 *
 * http://schema.org/restockingFee
 */
var restockingFee = 'http://schema.org/restockingFee';
/**
 * resultComment
 *
 * A sub property of result. The Comment created or sent as a result of this action.
 *
 * http://schema.org/resultComment
 */
var resultComment = 'http://schema.org/resultComment';
/**
 * resultReview
 *
 * A sub property of result. The review that resulted in the performing of the action.
 *
 * http://schema.org/resultReview
 */
var resultReview = 'http://schema.org/resultReview';
/**
 * returnFees
 *
 * The type of return fees for purchased products (for any return reason).
 *
 * http://schema.org/returnFees
 */
var returnFees = 'http://schema.org/returnFees';
/**
 * returnLabelSource
 *
 * The method (from an enumeration) by which the customer obtains a return shipping label for a product returned for any reason.
 *
 * http://schema.org/returnLabelSource
 */
var returnLabelSource = 'http://schema.org/returnLabelSource';
/**
 * returnMethod
 *
 * The type of return method offered, specified from an enumeration.
 *
 * http://schema.org/returnMethod
 */
var returnMethod = 'http://schema.org/returnMethod';
/**
 * returnPolicyCategory
 *
 * Specifies an applicable return policy (from an enumeration).
 *
 * http://schema.org/returnPolicyCategory
 */
var returnPolicyCategory = 'http://schema.org/returnPolicyCategory';
/**
 * returnPolicyCountry
 *
 * The country where the product has to be sent to for returns, for example "Ireland" using the [[name]] property of [[Country]]. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1). Note that this can be different from the country where the product was originally shipped from or sent to.
 *
 * http://schema.org/returnPolicyCountry
 */
var returnPolicyCountry = 'http://schema.org/returnPolicyCountry';
/**
 * returnPolicySeasonalOverride
 *
 * Seasonal override of a return policy.
 *
 * http://schema.org/returnPolicySeasonalOverride
 */
var returnPolicySeasonalOverride = 'http://schema.org/returnPolicySeasonalOverride';
/**
 * returnShippingFeesAmount
 *
 * Amount of shipping costs for product returns (for any reason). Applicable when property [[returnFees]] equals [[ReturnShippingFees]].
 *
 * http://schema.org/returnShippingFeesAmount
 */
var returnShippingFeesAmount = 'http://schema.org/returnShippingFeesAmount';
/**
 * reviewAspect
 *
 * This Review or Rating is relevant to this part or facet of the itemReviewed.
 *
 * http://schema.org/reviewAspect
 */
var reviewAspect = 'http://schema.org/reviewAspect';
/**
 * reviewBody
 *
 * The actual body of the review.
 *
 * http://schema.org/reviewBody
 */
var reviewBody = 'http://schema.org/reviewBody';
/**
 * reviewCount
 *
 * The count of total number of reviews.
 *
 * http://schema.org/reviewCount
 */
var reviewCount = 'http://schema.org/reviewCount';
/**
 * reviewRating
 *
 * The rating given in this review. Note that reviews can themselves be rated. The ```reviewRating``` applies to rating given by the review. The [[aggregateRating]] property applies to the review itself, as a creative work.
 *
 * http://schema.org/reviewRating
 */
var reviewRating = 'http://schema.org/reviewRating';
/**
 * reviewedBy
 *
 * People or organizations that have reviewed the content on this web page for accuracy and/or completeness.
 *
 * http://schema.org/reviewedBy
 */
var reviewedBy = 'http://schema.org/reviewedBy';
/**
 * reviews
 *
 * Review of the item.
 *
 * http://schema.org/reviews
 */
var reviews = 'http://schema.org/reviews';
/**
 * riskFactor
 *
 * A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.
 *
 * http://schema.org/riskFactor
 */
var riskFactor = 'http://schema.org/riskFactor';
/**
 * risks
 *
 * Specific physiologic risks associated to the diet plan.
 *
 * http://schema.org/risks
 */
var risks = 'http://schema.org/risks';
/**
 * roofLoad
 *
 * The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]]\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/roofLoad
 */
var roofLoad = 'http://schema.org/roofLoad';
/**
 * rsvpResponse
 *
 * The response (yes, no, maybe) to the RSVP.
 *
 * http://schema.org/rsvpResponse
 */
var rsvpResponse = 'http://schema.org/rsvpResponse';
/**
 * runsTo
 *
 * The vasculature the lymphatic structure runs, or efferents, to.
 *
 * http://schema.org/runsTo
 */
var runsTo = 'http://schema.org/runsTo';
/**
 * runtime
 *
 * Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).
 *
 * http://schema.org/runtime
 */
var runtime = 'http://schema.org/runtime';
/**
 * rxcui
 *
 * The RxCUI drug identifier from RXNORM.
 *
 * http://schema.org/rxcui
 */
var rxcui = 'http://schema.org/rxcui';
/**
 * safetyConsideration
 *
 * Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
 *
 * http://schema.org/safetyConsideration
 */
var safetyConsideration = 'http://schema.org/safetyConsideration';
/**
 * salaryCurrency
 *
 * The currency (coded using [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)) used for the main salary information in this job posting or for this employee.
 *
 * http://schema.org/salaryCurrency
 */
var salaryCurrency = 'http://schema.org/salaryCurrency';
/**
 * salaryUponCompletion
 *
 * The expected salary upon completing the training.
 *
 * http://schema.org/salaryUponCompletion
 */
var salaryUponCompletion = 'http://schema.org/salaryUponCompletion';
/**
 * sameAs
 *
 * URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
 *
 * http://schema.org/sameAs
 */
var sameAs = 'http://schema.org/sameAs';
/**
 * sampleType
 *
 * What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
 *
 * http://schema.org/sampleType
 */
var sampleType = 'http://schema.org/sampleType';
/**
 * saturatedFatContent
 *
 * The number of grams of saturated fat.
 *
 * http://schema.org/saturatedFatContent
 */
var saturatedFatContent = 'http://schema.org/saturatedFatContent';
/**
 * scheduleTimezone
 *
 * Indicates the timezone for which the time(s) indicated in the [[Schedule]] are given. The value provided should be among those listed in the IANA Time Zone Database.
 *
 * http://schema.org/scheduleTimezone
 */
var scheduleTimezone = 'http://schema.org/scheduleTimezone';
/**
 * scheduledPaymentDate
 *
 * The date the invoice is scheduled to be paid.
 *
 * http://schema.org/scheduledPaymentDate
 */
var scheduledPaymentDate = 'http://schema.org/scheduledPaymentDate';
/**
 * scheduledTime
 *
 * The time the object is scheduled to.
 *
 * http://schema.org/scheduledTime
 */
var scheduledTime = 'http://schema.org/scheduledTime';
/**
 * schemaVersion
 *
 * Indicates (by URL or string) a particular version of a schema used in some CreativeWork. This property was created primarily to
 *     indicate the use of a specific schema.org release, e.g. ```10.0``` as a simple string, or more explicitly via URL, ```http://schema.org/docs/releases.html#v10.0```. There may be situations in which other schemas might usefully be referenced this way, e.g. ```http://dublincore.org/specifications/dublin-core/dces/1999-07-02/``` but this has not been carefully explored in the community.
 *
 * http://schema.org/schemaVersion
 */
var schemaVersion = 'http://schema.org/schemaVersion';
/**
 * schoolClosuresInfo
 *
 * Information about school closures.
 *
 * http://schema.org/schoolClosuresInfo
 */
var schoolClosuresInfo = 'http://schema.org/schoolClosuresInfo';
/**
 * screenCount
 *
 * The number of screens in the movie theater.
 *
 * http://schema.org/screenCount
 */
var screenCount = 'http://schema.org/screenCount';
/**
 * screenshot
 *
 * A link to a screenshot image of the app.
 *
 * http://schema.org/screenshot
 */
var screenshot = 'http://schema.org/screenshot';
/**
 * sdDatePublished
 *
 * Indicates the date on which the current structured data was generated / published. Typically used alongside [[sdPublisher]]
 *
 * http://schema.org/sdDatePublished
 */
var sdDatePublished = 'http://schema.org/sdDatePublished';
/**
 * sdLicense
 *
 * A license document that applies to this structured data, typically indicated by URL.
 *
 * http://schema.org/sdLicense
 */
var sdLicense = 'http://schema.org/sdLicense';
/**
 * sdPublisher
 *
 * Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The
 * [[sdPublisher]] property helps make such practices more explicit.
 *
 * http://schema.org/sdPublisher
 */
var sdPublisher = 'http://schema.org/sdPublisher';
/**
 * seasonNumber
 *
 * Position of the season within an ordered group of seasons.
 *
 * http://schema.org/seasonNumber
 */
var seasonNumber = 'http://schema.org/seasonNumber';
/**
 * seasons
 *
 * A season in a media series.
 *
 * http://schema.org/seasons
 */
var seasons = 'http://schema.org/seasons';
/**
 * seatNumber
 *
 * The location of the reserved seat (e.g., 27).
 *
 * http://schema.org/seatNumber
 */
var seatNumber = 'http://schema.org/seatNumber';
/**
 * seatRow
 *
 * The row location of the reserved seat (e.g., B).
 *
 * http://schema.org/seatRow
 */
var seatRow = 'http://schema.org/seatRow';
/**
 * seatSection
 *
 * The section location of the reserved seat (e.g. Orchestra).
 *
 * http://schema.org/seatSection
 */
var seatSection = 'http://schema.org/seatSection';
/**
 * seatingCapacity
 *
 * The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.\n\nTypical unit code(s): C62 for persons
 *
 * http://schema.org/seatingCapacity
 */
var seatingCapacity = 'http://schema.org/seatingCapacity';
/**
 * seatingType
 *
 * The type/class of the seat.
 *
 * http://schema.org/seatingType
 */
var seatingType = 'http://schema.org/seatingType';
/**
 * secondaryPrevention
 *
 * A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.
 *
 * http://schema.org/secondaryPrevention
 */
var secondaryPrevention = 'http://schema.org/secondaryPrevention';
/**
 * securityClearanceRequirement
 *
 * A description of any security clearance requirements of the job.
 *
 * http://schema.org/securityClearanceRequirement
 */
var securityClearanceRequirement = 'http://schema.org/securityClearanceRequirement';
/**
 * securityScreening
 *
 * The type of security screening the passenger is subject to.
 *
 * http://schema.org/securityScreening
 */
var securityScreening = 'http://schema.org/securityScreening';
/**
 * seeks
 *
 * A pointer to products or services sought by the organization or person (demand).
 *
 * http://schema.org/seeks
 */
var seeks = 'http://schema.org/seeks';
/**
 * sender
 *
 * A sub property of participant. The participant who is at the sending end of the action.
 *
 * http://schema.org/sender
 */
var sender = 'http://schema.org/sender';
/**
 * sensoryRequirement
 *
 * A description of any sensory requirements and levels necessary to function on the job, including hearing and vision. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.
 *
 * http://schema.org/sensoryRequirement
 */
var sensoryRequirement = 'http://schema.org/sensoryRequirement';
/**
 * sensoryUnit
 *
 * The neurological pathway extension that inputs and sends information to the brain or spinal cord.
 *
 * http://schema.org/sensoryUnit
 */
var sensoryUnit = 'http://schema.org/sensoryUnit';
/**
 * seriousAdverseOutcome
 *
 * A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.
 *
 * http://schema.org/seriousAdverseOutcome
 */
var seriousAdverseOutcome = 'http://schema.org/seriousAdverseOutcome';
/**
 * serverStatus
 *
 * Status of a game server.
 *
 * http://schema.org/serverStatus
 */
var serverStatus = 'http://schema.org/serverStatus';
/**
 * servesCuisine
 *
 * The cuisine of the restaurant.
 *
 * http://schema.org/servesCuisine
 */
var servesCuisine = 'http://schema.org/servesCuisine';
/**
 * serviceAudience
 *
 * The audience eligible for this service.
 *
 * http://schema.org/serviceAudience
 */
var serviceAudience = 'http://schema.org/serviceAudience';
/**
 * serviceLocation
 *
 * The location (e.g. civic structure, local business, etc.) where a person can go to access the service.
 *
 * http://schema.org/serviceLocation
 */
var serviceLocation = 'http://schema.org/serviceLocation';
/**
 * serviceOperator
 *
 * The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.
 *
 * http://schema.org/serviceOperator
 */
var serviceOperator = 'http://schema.org/serviceOperator';
/**
 * servicePhone
 *
 * The phone number to use to access the service.
 *
 * http://schema.org/servicePhone
 */
var servicePhone = 'http://schema.org/servicePhone';
/**
 * servicePostalAddress
 *
 * The address for accessing the service by mail.
 *
 * http://schema.org/servicePostalAddress
 */
var servicePostalAddress = 'http://schema.org/servicePostalAddress';
/**
 * serviceSmsNumber
 *
 * The number to access the service by text message.
 *
 * http://schema.org/serviceSmsNumber
 */
var serviceSmsNumber = 'http://schema.org/serviceSmsNumber';
/**
 * serviceType
 *
 * The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
 *
 * http://schema.org/serviceType
 */
var serviceType = 'http://schema.org/serviceType';
/**
 * serviceUrl
 *
 * The website to access the service.
 *
 * http://schema.org/serviceUrl
 */
var serviceUrl = 'http://schema.org/serviceUrl';
/**
 * servingSize
 *
 * The serving size, in terms of the number of volume or mass.
 *
 * http://schema.org/servingSize
 */
var servingSize = 'http://schema.org/servingSize';
/**
 * sha256
 *
 * The [SHA-2](https://en.wikipedia.org/wiki/SHA-2) SHA256 hash of the content of the item. For example, a zero-length input has value 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'
 *
 * http://schema.org/sha256
 */
var sha256 = 'http://schema.org/sha256';
/**
 * sharedContent
 *
 * A CreativeWork such as an image, video, or audio clip shared as part of this posting.
 *
 * http://schema.org/sharedContent
 */
var sharedContent = 'http://schema.org/sharedContent';
/**
 * shippingDestination
 *
 * indicates (possibly multiple) shipping destinations. These can be defined in several ways, e.g. postalCode ranges.
 *
 * http://schema.org/shippingDestination
 */
var shippingDestination = 'http://schema.org/shippingDestination';
/**
 * shippingDetails
 *
 * Indicates information about the shipping policies and options associated with an [[Offer]].
 *
 * http://schema.org/shippingDetails
 */
var shippingDetails = 'http://schema.org/shippingDetails';
/**
 * shippingLabel
 *
 * Label to match an [[OfferShippingDetails]] with a [[ShippingRateSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).
 *
 * http://schema.org/shippingLabel
 */
var shippingLabel = 'http://schema.org/shippingLabel';
/**
 * shippingOrigin
 *
 * Indicates the origin of a shipment, i.e. where it should be coming from.
 *
 * http://schema.org/shippingOrigin
 */
var shippingOrigin = 'http://schema.org/shippingOrigin';
/**
 * shippingRate
 *
 * The shipping rate is the cost of shipping to the specified destination. Typically, the maxValue and currency values (of the [[MonetaryAmount]]) are most appropriate.
 *
 * http://schema.org/shippingRate
 */
var shippingRate = 'http://schema.org/shippingRate';
/**
 * shippingSettingsLink
 *
 * Link to a page containing [[ShippingRateSettings]] and [[DeliveryTimeSettings]] details.
 *
 * http://schema.org/shippingSettingsLink
 */
var shippingSettingsLink = 'http://schema.org/shippingSettingsLink';
/**
 * siblings
 *
 * A sibling of the person.
 *
 * http://schema.org/siblings
 */
var siblings = 'http://schema.org/siblings';
/**
 * signDetected
 *
 * A sign detected by the test.
 *
 * http://schema.org/signDetected
 */
var signDetected = 'http://schema.org/signDetected';
/**
 * signOrSymptom
 *
 * A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.
 *
 * http://schema.org/signOrSymptom
 */
var signOrSymptom = 'http://schema.org/signOrSymptom';
/**
 * significance
 *
 * The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.
 *
 * http://schema.org/significance
 */
var significance = 'http://schema.org/significance';
/**
 * significantLinks
 *
 * The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
 *
 * http://schema.org/significantLinks
 */
var significantLinks = 'http://schema.org/significantLinks';
/**
 * size
 *
 * A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable.
 *
 * http://schema.org/size
 */
var size = 'http://schema.org/size';
/**
 * sizeGroup
 *
 * The size group (also known as "size type") for a product's size. Size groups are common in the fashion industry to define size segments and suggested audiences for wearable products. Multiple values can be combined, for example "men's big and tall", "petite maternity" or "regular"
 *
 * http://schema.org/sizeGroup
 */
var sizeGroup = 'http://schema.org/sizeGroup';
/**
 * sizeSystem
 *
 * The size system used to identify a product's size. Typically either a standard (for example, "GS1" or "ISO-EN13402"), country code (for example "US" or "JP"), or a measuring system (for example "Metric" or "Imperial").
 *
 * http://schema.org/sizeSystem
 */
var sizeSystem = 'http://schema.org/sizeSystem';
/**
 * skills
 *
 * A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is desired or required to fulfill this role or to work in this occupation.
 *
 * http://schema.org/skills
 */
var skills = 'http://schema.org/skills';
/**
 * sku
 *
 * The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
 *
 * http://schema.org/sku
 */
var sku = 'http://schema.org/sku';
/**
 * slogan
 *
 * A slogan or motto associated with the item.
 *
 * http://schema.org/slogan
 */
var slogan = 'http://schema.org/slogan';
/**
 * smiles
 *
 * A specification in form of a line notation for describing the structure of chemical species using short ASCII strings.  Double bond stereochemistry \ indicators may need to be escaped in the string in formats where the backslash is an escape character.
 *
 * http://schema.org/smiles
 */
var smiles = 'http://schema.org/smiles';
/**
 * smokingAllowed
 *
 * Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
 *
 * http://schema.org/smokingAllowed
 */
var smokingAllowed = 'http://schema.org/smokingAllowed';
/**
 * sodiumContent
 *
 * The number of milligrams of sodium.
 *
 * http://schema.org/sodiumContent
 */
var sodiumContent = 'http://schema.org/sodiumContent';
/**
 * softwareAddOn
 *
 * Additional content for a software application.
 *
 * http://schema.org/softwareAddOn
 */
var softwareAddOn = 'http://schema.org/softwareAddOn';
/**
 * softwareHelp
 *
 * Software application help.
 *
 * http://schema.org/softwareHelp
 */
var softwareHelp = 'http://schema.org/softwareHelp';
/**
 * softwareVersion
 *
 * Version of the software instance.
 *
 * http://schema.org/softwareVersion
 */
var softwareVersion = 'http://schema.org/softwareVersion';
/**
 * sourceOrganization
 *
 * The Organization on whose behalf the creator was working.
 *
 * http://schema.org/sourceOrganization
 */
var sourceOrganization = 'http://schema.org/sourceOrganization';
/**
 * sourcedFrom
 *
 * The neurological pathway that originates the neurons.
 *
 * http://schema.org/sourcedFrom
 */
var sourcedFrom = 'http://schema.org/sourcedFrom';
/**
 * spatial
 *
 * The "spatial" property can be used in cases when more specific properties
 * (e.g. [[locationCreated]], [[spatialCoverage]], [[contentLocation]]) are not known to be appropriate.
 *
 * http://schema.org/spatial
 */
var spatial = 'http://schema.org/spatial';
/**
 * speakable
 *
 * Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.
 *
 * The *speakable* property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:
 *
 * 1.) *id-value* URL references - uses *id-value* of an element in the page being annotated. The simplest use of *speakable* has (potentially relative) URL values, referencing identified sections of the document concerned.
 *
 * 2.) CSS Selectors - addresses content in the annotated page, e.g. via class attribute. Use the [[cssSelector]] property.
 *
 * 3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the [[xpath]] property.
 *
 *
 * For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
 * we define a supporting type, [[SpeakableSpecification]]  which is defined to be a possible value of the *speakable* property.
 *
 *
 * http://schema.org/speakable
 */
var speakable = 'http://schema.org/speakable';
/**
 * specialCommitments
 *
 * Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.
 *
 * http://schema.org/specialCommitments
 */
var specialCommitments = 'http://schema.org/specialCommitments';
/**
 * specialOpeningHoursSpecification
 *
 * The special opening hours of a certain place.\n\nUse this to explicitly override general opening hours brought in scope by [[openingHoursSpecification]] or [[openingHours]].
 *
 *
 * http://schema.org/specialOpeningHoursSpecification
 */
var specialOpeningHoursSpecification = 'http://schema.org/specialOpeningHoursSpecification';
/**
 * specialty
 *
 * One of the domain specialities to which this web page's content applies.
 *
 * http://schema.org/specialty
 */
var specialty = 'http://schema.org/specialty';
/**
 * speechToTextMarkup
 *
 * Form of markup used. eg. [SSML](https://www.w3.org/TR/speech-synthesis11) or [IPA](https://www.wikidata.org/wiki/Property:P898).
 *
 * http://schema.org/speechToTextMarkup
 */
var speechToTextMarkup = 'http://schema.org/speechToTextMarkup';
/**
 * speed
 *
 * The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by [[maxValue]]) should be the maximum speed achievable under regular conditions.\n\nTypical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot\n\n*Note 1: Use [[minValue]] and [[maxValue]] to indicate the range. Typically, the minimal value is zero.\n* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the [[valueReference]] property.
 *
 * http://schema.org/speed
 */
var speed = 'http://schema.org/speed';
/**
 * spokenByCharacter
 *
 * The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.
 *
 * http://schema.org/spokenByCharacter
 */
var spokenByCharacter = 'http://schema.org/spokenByCharacter';
/**
 * sport
 *
 * A type of sport (e.g. Baseball).
 *
 * http://schema.org/sport
 */
var sport = 'http://schema.org/sport';
/**
 * sportsActivityLocation
 *
 * A sub property of location. The sports activity location where this action occurred.
 *
 * http://schema.org/sportsActivityLocation
 */
var sportsActivityLocation = 'http://schema.org/sportsActivityLocation';
/**
 * sportsEvent
 *
 * A sub property of location. The sports event where this action occurred.
 *
 * http://schema.org/sportsEvent
 */
var sportsEvent = 'http://schema.org/sportsEvent';
/**
 * sportsTeam
 *
 * A sub property of participant. The sports team that participated on this action.
 *
 * http://schema.org/sportsTeam
 */
var sportsTeam = 'http://schema.org/sportsTeam';
/**
 * spouse
 *
 * The person's spouse.
 *
 * http://schema.org/spouse
 */
var spouse = 'http://schema.org/spouse';
/**
 * stage
 *
 * The stage of the condition, if applicable.
 *
 * http://schema.org/stage
 */
var stage = 'http://schema.org/stage';
/**
 * stageAsNumber
 *
 * The stage represented as a number, e.g. 3.
 *
 * http://schema.org/stageAsNumber
 */
var stageAsNumber = 'http://schema.org/stageAsNumber';
/**
 * starRating
 *
 * An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
 *
 * http://schema.org/starRating
 */
var starRating = 'http://schema.org/starRating';
/**
 * startDate
 *
 * The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).
 *
 * http://schema.org/startDate
 */
var startDate = 'http://schema.org/startDate';
/**
 * startOffset
 *
 * The start time of the clip expressed as the number of seconds from the beginning of the work.
 *
 * http://schema.org/startOffset
 */
var startOffset = 'http://schema.org/startOffset';
/**
 * startTime
 *
 * The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. E.g. John wrote a book from *January* to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
 *
 * http://schema.org/startTime
 */
var startTime = 'http://schema.org/startTime';
/**
 * statType
 *
 * Indicates the kind of statistic represented by a [[StatisticalVariable]], e.g. mean, count etc. The value of statType is a property, either from within Schema.org (e.g. [[count]], [[median]], [[marginOfError]], [[maxValue]], [[minValue]]) or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org.
 *
 * http://schema.org/statType
 */
var statType = 'http://schema.org/statType';
/**
 * status
 *
 * The status of the study (enumerated).
 *
 * http://schema.org/status
 */
var status = 'http://schema.org/status';
/**
 * steeringPosition
 *
 * The position of the steering wheel or similar device (mostly for cars).
 *
 * http://schema.org/steeringPosition
 */
var steeringPosition = 'http://schema.org/steeringPosition';
/**
 * stepValue
 *
 * The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
 *
 * http://schema.org/stepValue
 */
var stepValue = 'http://schema.org/stepValue';
/**
 * steps
 *
 * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
 *
 * http://schema.org/steps
 */
var steps = 'http://schema.org/steps';
/**
 * storageRequirements
 *
 * Storage requirements (free space required).
 *
 * http://schema.org/storageRequirements
 */
var storageRequirements = 'http://schema.org/storageRequirements';
/**
 * streetAddress
 *
 * The street address. For example, 1600 Amphitheatre Pkwy.
 *
 * http://schema.org/streetAddress
 */
var streetAddress = 'http://schema.org/streetAddress';
/**
 * strengthUnit
 *
 * The units of an active ingredient's strength, e.g. mg.
 *
 * http://schema.org/strengthUnit
 */
var strengthUnit = 'http://schema.org/strengthUnit';
/**
 * strengthValue
 *
 * The value of an active ingredient's strength, e.g. 325.
 *
 * http://schema.org/strengthValue
 */
var strengthValue = 'http://schema.org/strengthValue';
/**
 * structuralClass
 *
 * The name given to how bone physically connects to each other.
 *
 * http://schema.org/structuralClass
 */
var structuralClass = 'http://schema.org/structuralClass';
/**
 * study
 *
 * A medical study or trial related to this entity.
 *
 * http://schema.org/study
 */
var study = 'http://schema.org/study';
/**
 * studyDesign
 *
 * Specifics about the observational study design (enumerated).
 *
 * http://schema.org/studyDesign
 */
var studyDesign = 'http://schema.org/studyDesign';
/**
 * studyLocation
 *
 * The location in which the study is taking/took place.
 *
 * http://schema.org/studyLocation
 */
var studyLocation = 'http://schema.org/studyLocation';
/**
 * studySubject
 *
 * A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.
 *
 * http://schema.org/studySubject
 */
var studySubject = 'http://schema.org/studySubject';
/**
 * stupidProperty
 *
 * This is a StupidProperty! - for testing only
 *
 * http://schema.org/stupidProperty
 */
var stupidProperty = 'http://schema.org/stupidProperty';
/**
 * subEvents
 *
 * Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.
 *
 * http://schema.org/subEvents
 */
var subEvents = 'http://schema.org/subEvents';
/**
 * subReservation
 *
 * The individual reservations included in the package. Typically a repeated property.
 *
 * http://schema.org/subReservation
 */
var subReservation = 'http://schema.org/subReservation';
/**
 * subStageSuffix
 *
 * The substage, e.g. 'a' for Stage IIIa.
 *
 * http://schema.org/subStageSuffix
 */
var subStageSuffix = 'http://schema.org/subStageSuffix';
/**
 * subStructure
 *
 * Component (sub-)structure(s) that comprise this anatomical structure.
 *
 * http://schema.org/subStructure
 */
var subStructure = 'http://schema.org/subStructure';
/**
 * subTest
 *
 * A component test of the panel.
 *
 * http://schema.org/subTest
 */
var subTest = 'http://schema.org/subTest';
/**
 * subtitleLanguage
 *
 * Languages in which subtitles/captions are available, in [IETF BCP 47 standard format](http://tools.ietf.org/html/bcp47).
 *
 * http://schema.org/subtitleLanguage
 */
var subtitleLanguage = 'http://schema.org/subtitleLanguage';
/**
 * successorOf
 *
 * A pointer from a newer variant of a product  to its previous, often discontinued predecessor.
 *
 * http://schema.org/successorOf
 */
var successorOf = 'http://schema.org/successorOf';
/**
 * sugarContent
 *
 * The number of grams of sugar.
 *
 * http://schema.org/sugarContent
 */
var sugarContent = 'http://schema.org/sugarContent';
/**
 * suggestedAge
 *
 * The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.
 *
 * http://schema.org/suggestedAge
 */
var suggestedAge = 'http://schema.org/suggestedAge';
/**
 * suggestedGender
 *
 * The suggested gender of the intended person or audience, for example "male", "female", or "unisex".
 *
 * http://schema.org/suggestedGender
 */
var suggestedGender = 'http://schema.org/suggestedGender';
/**
 * suggestedMaxAge
 *
 * Maximum recommended age in years for the audience or user.
 *
 * http://schema.org/suggestedMaxAge
 */
var suggestedMaxAge = 'http://schema.org/suggestedMaxAge';
/**
 * suggestedMeasurement
 *
 * A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.
 *
 * http://schema.org/suggestedMeasurement
 */
var suggestedMeasurement = 'http://schema.org/suggestedMeasurement';
/**
 * suggestedMinAge
 *
 * Minimum recommended age in years for the audience or user.
 *
 * http://schema.org/suggestedMinAge
 */
var suggestedMinAge = 'http://schema.org/suggestedMinAge';
/**
 * suitableForDiet
 *
 * Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.
 *
 * http://schema.org/suitableForDiet
 */
var suitableForDiet = 'http://schema.org/suitableForDiet';
/**
 * supersededBy
 *
 * Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
 *
 * http://schema.org/supersededBy
 */
var supersededBy = 'http://schema.org/supersededBy';
/**
 * supplyTo
 *
 * The area to which the artery supplies blood.
 *
 * http://schema.org/supplyTo
 */
var supplyTo = 'http://schema.org/supplyTo';
/**
 * supportingData
 *
 * Supporting data for a SoftwareApplication.
 *
 * http://schema.org/supportingData
 */
var supportingData = 'http://schema.org/supportingData';
/**
 * surface
 *
 * A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.
 *
 * http://schema.org/surface
 */
var surface = 'http://schema.org/surface';
/**
 * syllabusSections
 *
 * Indicates (typically several) Syllabus entities that lay out what each section of the overall course will cover.
 *
 * http://schema.org/syllabusSections
 */
var syllabusSections = 'http://schema.org/syllabusSections';
/**
 * target
 *
 * Indicates a target EntryPoint, or url, for an Action.
 *
 * http://schema.org/target
 */
var target = 'http://schema.org/target';
/**
 * targetDescription
 *
 * The description of a node in an established educational framework.
 *
 * http://schema.org/targetDescription
 */
var targetDescription = 'http://schema.org/targetDescription';
/**
 * targetName
 *
 * The name of a node in an established educational framework.
 *
 * http://schema.org/targetName
 */
var targetName = 'http://schema.org/targetName';
/**
 * targetPlatform
 *
 * Type of app development: phone, Metro style, desktop, XBox, etc.
 *
 * http://schema.org/targetPlatform
 */
var targetPlatform = 'http://schema.org/targetPlatform';
/**
 * targetPopulation
 *
 * Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
 *
 * http://schema.org/targetPopulation
 */
var targetPopulation = 'http://schema.org/targetPopulation';
/**
 * targetProduct
 *
 * Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.
 *
 * http://schema.org/targetProduct
 */
var targetProduct = 'http://schema.org/targetProduct';
/**
 * targetUrl
 *
 * The URL of a node in an established educational framework.
 *
 * http://schema.org/targetUrl
 */
var targetUrl = 'http://schema.org/targetUrl';
/**
 * taxID
 *
 * The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
 *
 * http://schema.org/taxID
 */
var taxID = 'http://schema.org/taxID';
/**
 * taxonRank
 *
 * The taxonomic rank of this taxon given preferably as a URI from a controlled vocabulary – typically the ranks from TDWG TaxonRank ontology or equivalent Wikidata URIs.
 *
 * http://schema.org/taxonRank
 */
var taxonRank = 'http://schema.org/taxonRank';
/**
 * taxonomicRange
 *
 * The taxonomic grouping of the organism that expresses, encodes, or in some way related to the BioChemEntity.
 *
 * http://schema.org/taxonomicRange
 */
var taxonomicRange = 'http://schema.org/taxonomicRange';
/**
 * teaches
 *
 * The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term.
 *
 * http://schema.org/teaches
 */
var teaches = 'http://schema.org/teaches';
/**
 * telephone
 *
 * The telephone number.
 *
 * http://schema.org/telephone
 */
var telephone = 'http://schema.org/telephone';
/**
 * temporal
 *
 * The "temporal" property can be used in cases where more specific properties
 * (e.g. [[temporalCoverage]], [[dateCreated]], [[dateModified]], [[datePublished]]) are not known to be appropriate.
 *
 * http://schema.org/temporal
 */
var temporal = 'http://schema.org/temporal';
/**
 * termDuration
 *
 * The amount of time in a term as defined by the institution. A term is a length of time where students take one or more classes. Semesters and quarters are common units for term.
 *
 * http://schema.org/termDuration
 */
var termDuration = 'http://schema.org/termDuration';
/**
 * termsOfService
 *
 * Human-readable terms of service documentation.
 *
 * http://schema.org/termsOfService
 */
var termsOfService = 'http://schema.org/termsOfService';
/**
 * termsPerYear
 *
 * The number of times terms of study are offered per year. Semesters and quarters are common units for term. For example, if the student can only take 2 semesters for the program in one year, then termsPerYear should be 2.
 *
 * http://schema.org/termsPerYear
 */
var termsPerYear = 'http://schema.org/termsPerYear';
/**
 * text
 *
 * The textual content of this CreativeWork.
 *
 * http://schema.org/text
 */
var text = 'http://schema.org/text';
/**
 * textValue
 *
 * Text value being annotated.
 *
 * http://schema.org/textValue
 */
var textValue = 'http://schema.org/textValue';
/**
 * thumbnail
 *
 * Thumbnail image for an image or video.
 *
 * http://schema.org/thumbnail
 */
var thumbnail = 'http://schema.org/thumbnail';
/**
 * thumbnailUrl
 *
 * A thumbnail image relevant to the Thing.
 *
 * http://schema.org/thumbnailUrl
 */
var thumbnailUrl = 'http://schema.org/thumbnailUrl';
/**
 * tickerSymbol
 *
 * The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO 15022.
 *
 * http://schema.org/tickerSymbol
 */
var tickerSymbol = 'http://schema.org/tickerSymbol';
/**
 * ticketNumber
 *
 * The unique identifier for the ticket.
 *
 * http://schema.org/ticketNumber
 */
var ticketNumber = 'http://schema.org/ticketNumber';
/**
 * ticketToken
 *
 * Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.
 *
 * http://schema.org/ticketToken
 */
var ticketToken = 'http://schema.org/ticketToken';
/**
 * ticketedSeat
 *
 * The seat associated with the ticket.
 *
 * http://schema.org/ticketedSeat
 */
var ticketedSeat = 'http://schema.org/ticketedSeat';
/**
 * timeOfDay
 *
 * The time of day the program normally runs. For example, "evenings".
 *
 * http://schema.org/timeOfDay
 */
var timeOfDay = 'http://schema.org/timeOfDay';
/**
 * timeRequired
 *
 * Approximate or typical time it usually takes to work with or through the content of this work for the typical or target audience.
 *
 * http://schema.org/timeRequired
 */
var timeRequired = 'http://schema.org/timeRequired';
/**
 * timeToComplete
 *
 * The expected length of time to complete the program if attending full-time.
 *
 * http://schema.org/timeToComplete
 */
var timeToComplete = 'http://schema.org/timeToComplete';
/**
 * tissueSample
 *
 * The type of tissue sample required for the test.
 *
 * http://schema.org/tissueSample
 */
var tissueSample = 'http://schema.org/tissueSample';
/**
 * title
 *
 * The title of the job.
 *
 * http://schema.org/title
 */
var title = 'http://schema.org/title';
/**
 * titleEIDR
 *
 * An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing at the most general/abstract level, a work of film or television.
 *
 * For example, the motion picture known as "Ghostbusters" has a titleEIDR of  "10.5240/7EC7-228A-510A-053E-CBB8-J". This title (or work) may have several variants, which EIDR calls "edits". See [[editEIDR]].
 *
 * Since schema.org types like [[Movie]], [[TVEpisode]], [[TVSeason]], and [[TVSeries]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.
 *
 *
 * http://schema.org/titleEIDR
 */
var titleEIDR = 'http://schema.org/titleEIDR';
/**
 * toLocation
 *
 * A sub property of location. The final location of the object or the agent after the action.
 *
 * http://schema.org/toLocation
 */
var toLocation = 'http://schema.org/toLocation';
/**
 * toRecipient
 *
 * A sub property of recipient. The recipient who was directly sent the message.
 *
 * http://schema.org/toRecipient
 */
var toRecipient = 'http://schema.org/toRecipient';
/**
 * tocContinuation
 *
 * A [[HyperTocEntry]] can have a [[tocContinuation]] indicated, which is another [[HyperTocEntry]] that would be the default next item to play or render.
 *
 * http://schema.org/tocContinuation
 */
var tocContinuation = 'http://schema.org/tocContinuation';
/**
 * tocEntry
 *
 * Indicates a [[HyperTocEntry]] in a [[HyperToc]].
 *
 * http://schema.org/tocEntry
 */
var tocEntry = 'http://schema.org/tocEntry';
/**
 * tongueWeight
 *
 * The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/tongueWeight
 */
var tongueWeight = 'http://schema.org/tongueWeight';
/**
 * tool
 *
 * A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
 *
 * http://schema.org/tool
 */
var tool = 'http://schema.org/tool';
/**
 * torque
 *
 * The torque (turning force) of the vehicle's engine.\n\nTypical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch\n\n* Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the [[valueReference]] property.\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/torque
 */
var torque = 'http://schema.org/torque';
/**
 * totalHistoricalEnrollment
 *
 * The total number of students that have enrolled in the history of the course.
 *
 * http://schema.org/totalHistoricalEnrollment
 */
var totalHistoricalEnrollment = 'http://schema.org/totalHistoricalEnrollment';
/**
 * totalJobOpenings
 *
 * The number of positions open for this job posting. Use a positive integer. Do not use if the number of positions is unclear or not known.
 *
 * http://schema.org/totalJobOpenings
 */
var totalJobOpenings = 'http://schema.org/totalJobOpenings';
/**
 * totalPaymentDue
 *
 * The total amount due.
 *
 * http://schema.org/totalPaymentDue
 */
var totalPaymentDue = 'http://schema.org/totalPaymentDue';
/**
 * totalPrice
 *
 * The total price for the reservation or ticket, including applicable taxes, shipping, etc.\n\nUsage guidelines:\n\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
 *
 * http://schema.org/totalPrice
 */
var totalPrice = 'http://schema.org/totalPrice';
/**
 * totalTime
 *
 * The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
 *
 * http://schema.org/totalTime
 */
var totalTime = 'http://schema.org/totalTime';
/**
 * tourBookingPage
 *
 * A page providing information on how to book a tour of some [[Place]], such as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, as well as other kinds of tours as appropriate.
 *
 * http://schema.org/tourBookingPage
 */
var tourBookingPage = 'http://schema.org/tourBookingPage';
/**
 * touristType
 *
 * Attraction suitable for type(s) of tourist. E.g. children, visitors from a particular country, etc.
 *
 * http://schema.org/touristType
 */
var touristType = 'http://schema.org/touristType';
/**
 * trackingNumber
 *
 * Shipper tracking number.
 *
 * http://schema.org/trackingNumber
 */
var trackingNumber = 'http://schema.org/trackingNumber';
/**
 * trackingUrl
 *
 * Tracking url for the parcel delivery.
 *
 * http://schema.org/trackingUrl
 */
var trackingUrl = 'http://schema.org/trackingUrl';
/**
 * tracks
 *
 * A music recording (track)&#x2014;usually a single song.
 *
 * http://schema.org/tracks
 */
var tracks = 'http://schema.org/tracks';
/**
 * trailer
 *
 * The trailer of a movie or TV/radio series, season, episode, etc.
 *
 * http://schema.org/trailer
 */
var trailer = 'http://schema.org/trailer';
/**
 * trailerWeight
 *
 * The permitted weight of a trailer attached to the vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/trailerWeight
 */
var trailerWeight = 'http://schema.org/trailerWeight';
/**
 * trainName
 *
 * The name of the train (e.g. The Orient Express).
 *
 * http://schema.org/trainName
 */
var trainName = 'http://schema.org/trainName';
/**
 * trainNumber
 *
 * The unique identifier for the train.
 *
 * http://schema.org/trainNumber
 */
var trainNumber = 'http://schema.org/trainNumber';
/**
 * trainingSalary
 *
 * The estimated salary earned while in the program.
 *
 * http://schema.org/trainingSalary
 */
var trainingSalary = 'http://schema.org/trainingSalary';
/**
 * transFatContent
 *
 * The number of grams of trans fat.
 *
 * http://schema.org/transFatContent
 */
var transFatContent = 'http://schema.org/transFatContent';
/**
 * transcript
 *
 * If this MediaObject is an AudioObject or VideoObject, the transcript of that object.
 *
 * http://schema.org/transcript
 */
var transcript = 'http://schema.org/transcript';
/**
 * transitTime
 *
 * The typical delay the order has been sent for delivery and the goods reach the final customer. Typical properties: minValue, maxValue, unitCode (d for DAY).
 *
 * http://schema.org/transitTime
 */
var transitTime = 'http://schema.org/transitTime';
/**
 * transitTimeLabel
 *
 * Label to match an [[OfferShippingDetails]] with a [[DeliveryTimeSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).
 *
 * http://schema.org/transitTimeLabel
 */
var transitTimeLabel = 'http://schema.org/transitTimeLabel';
/**
 * translator
 *
 * Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
 *
 * http://schema.org/translator
 */
var translator = 'http://schema.org/translator';
/**
 * transmissionMethod
 *
 * How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.
 *
 * http://schema.org/transmissionMethod
 */
var transmissionMethod = 'http://schema.org/transmissionMethod';
/**
 * travelBans
 *
 * Information about travel bans, e.g. in the context of a pandemic.
 *
 * http://schema.org/travelBans
 */
var travelBans = 'http://schema.org/travelBans';
/**
 * trialDesign
 *
 * Specifics about the trial design (enumerated).
 *
 * http://schema.org/trialDesign
 */
var trialDesign = 'http://schema.org/trialDesign';
/**
 * tributary
 *
 * The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.
 *
 * http://schema.org/tributary
 */
var tributary = 'http://schema.org/tributary';
/**
 * tripOrigin
 *
 * The location of origin of the trip, prior to any destination(s).
 *
 * http://schema.org/tripOrigin
 */
var tripOrigin = 'http://schema.org/tripOrigin';
/**
 * typeOfBed
 *
 * The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.
 *
 * http://schema.org/typeOfBed
 */
var typeOfBed = 'http://schema.org/typeOfBed';
/**
 * typeOfGood
 *
 * The product that this structured value is referring to.
 *
 * http://schema.org/typeOfGood
 */
var typeOfGood = 'http://schema.org/typeOfGood';
/**
 * typicalAgeRange
 *
 * The typical expected age range, e.g. '7-9', '11-'.
 *
 * http://schema.org/typicalAgeRange
 */
var typicalAgeRange = 'http://schema.org/typicalAgeRange';
/**
 * typicalCreditsPerTerm
 *
 * The number of credits or units a full-time student would be expected to take in 1 term however 'term' is defined by the institution.
 *
 * http://schema.org/typicalCreditsPerTerm
 */
var typicalCreditsPerTerm = 'http://schema.org/typicalCreditsPerTerm';
/**
 * typicalTest
 *
 * A medical test typically performed given this condition.
 *
 * http://schema.org/typicalTest
 */
var typicalTest = 'http://schema.org/typicalTest';
/**
 * underName
 *
 * The person or organization the reservation or ticket is for.
 *
 * http://schema.org/underName
 */
var underName = 'http://schema.org/underName';
/**
 * unitCode
 *
 * The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
 *
 * http://schema.org/unitCode
 */
var unitCode = 'http://schema.org/unitCode';
/**
 * unitText
 *
 * A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
 * <a href='unitCode'>unitCode</a>.
 *
 * http://schema.org/unitText
 */
var unitText = 'http://schema.org/unitText';
/**
 * unnamedSourcesPolicy
 *
 * For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.
 *
 * http://schema.org/unnamedSourcesPolicy
 */
var unnamedSourcesPolicy = 'http://schema.org/unnamedSourcesPolicy';
/**
 * unsaturatedFatContent
 *
 * The number of grams of unsaturated fat.
 *
 * http://schema.org/unsaturatedFatContent
 */
var unsaturatedFatContent = 'http://schema.org/unsaturatedFatContent';
/**
 * uploadDate
 *
 * Date when this media object was uploaded to this site.
 *
 * http://schema.org/uploadDate
 */
var uploadDate = 'http://schema.org/uploadDate';
/**
 * upvoteCount
 *
 * The number of upvotes this question, answer or comment has received from the community.
 *
 * http://schema.org/upvoteCount
 */
var upvoteCount = 'http://schema.org/upvoteCount';
/**
 * url
 *
 * URL of the item.
 *
 * http://schema.org/url
 */
var url = 'http://schema.org/url';
/**
 * urlTemplate
 *
 * An url template (RFC6570) that will be used to construct the target of the execution of the action.
 *
 * http://schema.org/urlTemplate
 */
var urlTemplate = 'http://schema.org/urlTemplate';
/**
 * usedToDiagnose
 *
 * A condition the test is used to diagnose.
 *
 * http://schema.org/usedToDiagnose
 */
var usedToDiagnose = 'http://schema.org/usedToDiagnose';
/**
 * userInteractionCount
 *
 * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.
 *
 * http://schema.org/userInteractionCount
 */
var userInteractionCount = 'http://schema.org/userInteractionCount';
/**
 * usesDevice
 *
 * Device used to perform the test.
 *
 * http://schema.org/usesDevice
 */
var usesDevice = 'http://schema.org/usesDevice';
/**
 * usesHealthPlanIdStandard
 *
 * The standard for interpreting the Plan ID. The preferred is "HIOS". See the Centers for Medicare & Medicaid Services for more details.
 *
 * http://schema.org/usesHealthPlanIdStandard
 */
var usesHealthPlanIdStandard = 'http://schema.org/usesHealthPlanIdStandard';
/**
 * utterances
 *
 * Text of an utterances (spoken words, lyrics etc.) that occurs at a certain section of a media object, represented as a [[HyperTocEntry]].
 *
 * http://schema.org/utterances
 */
var utterances = 'http://schema.org/utterances';
/**
 * validFor
 *
 * The duration of validity of a permit or similar thing.
 *
 * http://schema.org/validFor
 */
var validFor = 'http://schema.org/validFor';
/**
 * validFrom
 *
 * The date when the item becomes valid.
 *
 * http://schema.org/validFrom
 */
var validFrom = 'http://schema.org/validFrom';
/**
 * validIn
 *
 * The geographic area where a permit or similar thing is valid.
 *
 * http://schema.org/validIn
 */
var validIn = 'http://schema.org/validIn';
/**
 * validThrough
 *
 * The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.
 *
 * http://schema.org/validThrough
 */
var validThrough = 'http://schema.org/validThrough';
/**
 * validUntil
 *
 * The date when the item is no longer valid.
 *
 * http://schema.org/validUntil
 */
var validUntil = 'http://schema.org/validUntil';
/**
 * value
 *
 * The value of a [[QuantitativeValue]] (including [[Observation]]) or property value node.\n\n* For [[QuantitativeValue]] and [[MonetaryAmount]], the recommended type for values is 'Number'.\n* For [[PropertyValue]], it can be 'Text', 'Number', 'Boolean', or 'StructuredValue'.\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.
 *
 * http://schema.org/value
 */
var value = 'http://schema.org/value';
/**
 * valueAddedTaxIncluded
 *
 * Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.
 *
 * http://schema.org/valueAddedTaxIncluded
 */
var valueAddedTaxIncluded = 'http://schema.org/valueAddedTaxIncluded';
/**
 * valueMaxLength
 *
 * Specifies the allowed range for number of characters in a literal value.
 *
 * http://schema.org/valueMaxLength
 */
var valueMaxLength = 'http://schema.org/valueMaxLength';
/**
 * valueMinLength
 *
 * Specifies the minimum allowed range for number of characters in a literal value.
 *
 * http://schema.org/valueMinLength
 */
var valueMinLength = 'http://schema.org/valueMinLength';
/**
 * valueName
 *
 * Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
 *
 * http://schema.org/valueName
 */
var valueName = 'http://schema.org/valueName';
/**
 * valuePattern
 *
 * Specifies a regular expression for testing literal values according to the HTML spec.
 *
 * http://schema.org/valuePattern
 */
var valuePattern = 'http://schema.org/valuePattern';
/**
 * valueReference
 *
 * A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.
 *
 * http://schema.org/valueReference
 */
var valueReference = 'http://schema.org/valueReference';
/**
 * valueRequired
 *
 * Whether the property must be filled in to complete the action.  Default is false.
 *
 * http://schema.org/valueRequired
 */
var valueRequired = 'http://schema.org/valueRequired';
/**
 * variableMeasured
 *
 * The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue, or more explicitly as a [[StatisticalVariable]].
 *
 * http://schema.org/variableMeasured
 */
var variableMeasured = 'http://schema.org/variableMeasured';
/**
 * variablesMeasured
 *
 * Originally named [[variablesMeasured]], the [[variableMeasured]] property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue.
 *
 * http://schema.org/variablesMeasured
 */
var variablesMeasured = 'http://schema.org/variablesMeasured';
/**
 * variantCover
 *
 * A description of the variant cover
 *     	for the issue, if the issue is a variant printing. For example, "Bryan Hitch
 *     	Variant Cover" or "2nd Printing Variant".
 *
 * http://schema.org/variantCover
 */
var variantCover = 'http://schema.org/variantCover';
/**
 * variesBy
 *
 * Indicates the property or properties by which the variants in a [[ProductGroup]] vary, e.g. their size, color etc. Schema.org properties can be referenced by their short name e.g. "color"; terms defined elsewhere can be referenced with their URIs.
 *
 * http://schema.org/variesBy
 */
var variesBy = 'http://schema.org/variesBy';
/**
 * vatID
 *
 * The Value-added Tax ID of the organization or person.
 *
 * http://schema.org/vatID
 */
var vatID = 'http://schema.org/vatID';
/**
 * vehicleConfiguration
 *
 * A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.
 *
 * http://schema.org/vehicleConfiguration
 */
var vehicleConfiguration = 'http://schema.org/vehicleConfiguration';
/**
 * vehicleEngine
 *
 * Information about the engine or engines of the vehicle.
 *
 * http://schema.org/vehicleEngine
 */
var vehicleEngine = 'http://schema.org/vehicleEngine';
/**
 * vehicleIdentificationNumber
 *
 * The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.
 *
 * http://schema.org/vehicleIdentificationNumber
 */
var vehicleIdentificationNumber = 'http://schema.org/vehicleIdentificationNumber';
/**
 * vehicleInteriorColor
 *
 * The color or color combination of the interior of the vehicle.
 *
 * http://schema.org/vehicleInteriorColor
 */
var vehicleInteriorColor = 'http://schema.org/vehicleInteriorColor';
/**
 * vehicleInteriorType
 *
 * The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.
 *
 * http://schema.org/vehicleInteriorType
 */
var vehicleInteriorType = 'http://schema.org/vehicleInteriorType';
/**
 * vehicleModelDate
 *
 * The release date of a vehicle model (often used to differentiate versions of the same make and model).
 *
 * http://schema.org/vehicleModelDate
 */
var vehicleModelDate = 'http://schema.org/vehicleModelDate';
/**
 * vehicleSeatingCapacity
 *
 * The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.\n\nTypical unit code(s): C62 for persons.
 *
 * http://schema.org/vehicleSeatingCapacity
 */
var vehicleSeatingCapacity = 'http://schema.org/vehicleSeatingCapacity';
/**
 * vehicleSpecialUsage
 *
 * Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.
 *
 * http://schema.org/vehicleSpecialUsage
 */
var vehicleSpecialUsage = 'http://schema.org/vehicleSpecialUsage';
/**
 * vehicleTransmission
 *
 * The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars).
 *
 * http://schema.org/vehicleTransmission
 */
var vehicleTransmission = 'http://schema.org/vehicleTransmission';
/**
 * vendor
 *
 * 'vendor' is an earlier term for 'seller'.
 *
 * http://schema.org/vendor
 */
var vendor = 'http://schema.org/vendor';
/**
 * verificationFactCheckingPolicy
 *
 * Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].
 *
 * http://schema.org/verificationFactCheckingPolicy
 */
var verificationFactCheckingPolicy = 'http://schema.org/verificationFactCheckingPolicy';
/**
 * version
 *
 * The version of the CreativeWork embodied by a specified resource.
 *
 * http://schema.org/version
 */
var version = 'http://schema.org/version';
/**
 * video
 *
 * An embedded video object.
 *
 * http://schema.org/video
 */
var video = 'http://schema.org/video';
/**
 * videoFormat
 *
 * The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).
 *
 * http://schema.org/videoFormat
 */
var videoFormat = 'http://schema.org/videoFormat';
/**
 * videoFrameSize
 *
 * The frame size of the video.
 *
 * http://schema.org/videoFrameSize
 */
var videoFrameSize = 'http://schema.org/videoFrameSize';
/**
 * videoQuality
 *
 * The quality of the video.
 *
 * http://schema.org/videoQuality
 */
var videoQuality = 'http://schema.org/videoQuality';
/**
 * volumeNumber
 *
 * Identifies the volume of publication or multi-part work; for example, "iii" or "2".
 *
 * http://schema.org/volumeNumber
 */
var volumeNumber = 'http://schema.org/volumeNumber';
/**
 * warning
 *
 * Any FDA or other warnings about the drug (text or URL).
 *
 * http://schema.org/warning
 */
var warning = 'http://schema.org/warning';
/**
 * warrantyPromise
 *
 * The warranty promise(s) included in the offer.
 *
 * http://schema.org/warrantyPromise
 */
var warrantyPromise = 'http://schema.org/warrantyPromise';
/**
 * warrantyScope
 *
 * The scope of the warranty promise.
 *
 * http://schema.org/warrantyScope
 */
var warrantyScope = 'http://schema.org/warrantyScope';
/**
 * webCheckinTime
 *
 * The time when a passenger can check into the flight online.
 *
 * http://schema.org/webCheckinTime
 */
var webCheckinTime = 'http://schema.org/webCheckinTime';
/**
 * webFeed
 *
 * The URL for a feed, e.g. associated with a podcast series, blog, or series of date-stamped updates. This is usually RSS or Atom.
 *
 * http://schema.org/webFeed
 */
var webFeed = 'http://schema.org/webFeed';
/**
 * weight
 *
 * The weight of the product or person.
 *
 * http://schema.org/weight
 */
var weight = 'http://schema.org/weight';
/**
 * weightTotal
 *
 * The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.\n\nTypical unit code(s): KGM for kilogram, LBR for pound\n\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.
 *
 * http://schema.org/weightTotal
 */
var weightTotal = 'http://schema.org/weightTotal';
/**
 * wheelbase
 *
 * The distance between the centers of the front and rear wheels.\n\nTypical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet
 *
 * http://schema.org/wheelbase
 */
var wheelbase = 'http://schema.org/wheelbase';
/**
 * width
 *
 * The width of the item.
 *
 * http://schema.org/width
 */
var width = 'http://schema.org/width';
/**
 * winner
 *
 * A sub property of participant. The winner of the action.
 *
 * http://schema.org/winner
 */
var winner = 'http://schema.org/winner';
/**
 * wordCount
 *
 * The number of words in the text of the Article.
 *
 * http://schema.org/wordCount
 */
var wordCount = 'http://schema.org/wordCount';
/**
 * workHours
 *
 * The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).
 *
 * http://schema.org/workHours
 */
var workHours = 'http://schema.org/workHours';
/**
 * workLocation
 *
 * A contact location for a person's place of work.
 *
 * http://schema.org/workLocation
 */
var workLocation = 'http://schema.org/workLocation';
/**
 * workPerformed
 *
 * A work performed in some event, for example a play performed in a TheaterEvent.
 *
 * http://schema.org/workPerformed
 */
var workPerformed = 'http://schema.org/workPerformed';
/**
 * workPresented
 *
 * The movie presented during this event.
 *
 * http://schema.org/workPresented
 */
var workPresented = 'http://schema.org/workPresented';
/**
 * workload
 *
 * Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.
 *
 * http://schema.org/workload
 */
var workload = 'http://schema.org/workload';
/**
 * worksFor
 *
 * Organizations that the person works for.
 *
 * http://schema.org/worksFor
 */
var worksFor = 'http://schema.org/worksFor';
/**
 * worstRating
 *
 * The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.
 *
 * http://schema.org/worstRating
 */
var worstRating = 'http://schema.org/worstRating';
/**
 * xpath
 *
 * An XPath, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
 *
 * http://schema.org/xpath
 */
var xpath = 'http://schema.org/xpath';
/**
 * yearBuilt
 *
 * The year an [[Accommodation]] was constructed. This corresponds to the [YearBuilt field in RESO](https://ddwiki.reso.org/display/DDW17/YearBuilt+Field).
 *
 * http://schema.org/yearBuilt
 */
var yearBuilt = 'http://schema.org/yearBuilt';
/**
 * yearlyRevenue
 *
 * The size of the business in annual revenue.
 *
 * http://schema.org/yearlyRevenue
 */
var yearlyRevenue = 'http://schema.org/yearlyRevenue';
/**
 * yearsInOperation
 *
 * The age of the business.
 *
 * http://schema.org/yearsInOperation
 */
var yearsInOperation = 'http://schema.org/yearsInOperation';
/**
 * actionApplication
 *
 * An application that can complete the request.
 *
 * http://schema.org/actionApplication
 */
var actionApplication = 'http://schema.org/actionApplication';
/**
 * actionOption
 *
 * A sub property of object. The options subject to this action.
 *
 * http://schema.org/actionOption
 */
var actionOption = 'http://schema.org/actionOption';
/**
 * album
 *
 * A music album.
 *
 * http://schema.org/album
 */
var album = 'http://schema.org/album';
/**
 * albumRelease
 *
 * A release of this album.
 *
 * http://schema.org/albumRelease
 */
var albumRelease = 'http://schema.org/albumRelease';
/**
 * alternateName
 *
 * An alias for the item.
 *
 * http://schema.org/alternateName
 */
var alternateName = 'http://schema.org/alternateName';
/**
 * alumni
 *
 * Alumni of an organization.
 *
 * http://schema.org/alumni
 */
var alumni = 'http://schema.org/alumni';
/**
 * alumniOf
 *
 * An organization that the person is an alumni of.
 *
 * http://schema.org/alumniOf
 */
var alumniOf = 'http://schema.org/alumniOf';
/**
 *
 *
 *
 *
 * http://schema.org/archiveHeld
 */
var archiveHeld = 'http://schema.org/archiveHeld';
/**
 * arterialBranch
 *
 * The branches that comprise the arterial structure.
 *
 * http://schema.org/arterialBranch
 */
var arterialBranch = 'http://schema.org/arterialBranch';
/**
 * artworkSurface
 *
 * The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.
 *
 * http://schema.org/artworkSurface
 */
var artworkSurface = 'http://schema.org/artworkSurface';
/**
 * attendee
 *
 * A person or organization attending the event.
 *
 * http://schema.org/attendee
 */
var attendee = 'http://schema.org/attendee';
/**
 * audience
 *
 * An intended audience, i.e. a group for whom something was created.
 *
 * http://schema.org/audience
 */
var audience = 'http://schema.org/audience';
/**
 * availableOnDevice
 *
 * Device required to run the application. Used in cases where a specific make/model is required to run the application.
 *
 * http://schema.org/availableOnDevice
 */
var availableOnDevice = 'http://schema.org/availableOnDevice';
/**
 * award
 *
 * An award won by or for this item.
 *
 * http://schema.org/award
 */
var award = 'http://schema.org/award';
/**
 * blogPost
 *
 * A posting that is part of this blog.
 *
 * http://schema.org/blogPost
 */
var blogPost = 'http://schema.org/blogPost';
/**
 * broker
 *
 * An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
 *
 * http://schema.org/broker
 */
var broker = 'http://schema.org/broker';
/**
 * caption
 *
 * The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the [[encodingFormat]].
 *
 * http://schema.org/caption
 */
var caption = 'http://schema.org/caption';
/**
 * category
 *
 * A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
 *
 * http://schema.org/category
 */
var category = 'http://schema.org/category';
/**
 * childTaxon
 *
 * Closest child taxa of the taxon in question.
 *
 * http://schema.org/childTaxon
 */
var childTaxon = 'http://schema.org/childTaxon';
/**
 * clinicalPharmacology
 *
 * Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
 *
 * http://schema.org/clinicalPharmacology
 */
var clinicalPharmacology = 'http://schema.org/clinicalPharmacology';
/**
 * codeSampleType
 *
 * What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
 *
 * http://schema.org/codeSampleType
 */
var codeSampleType = 'http://schema.org/codeSampleType';
/**
 * colleague
 *
 * A colleague of the person.
 *
 * http://schema.org/colleague
 */
var colleague = 'http://schema.org/colleague';
/**
 * contactPoint
 *
 * A contact point for a person or organization.
 *
 * http://schema.org/contactPoint
 */
var contactPoint = 'http://schema.org/contactPoint';
/**
 * containsPlace
 *
 * The basic containment relation between a place and another that it contains.
 *
 * http://schema.org/containsPlace
 */
var containsPlace = 'http://schema.org/containsPlace';
/**
 * containsSeason
 *
 * A season that is part of the media series.
 *
 * http://schema.org/containsSeason
 */
var containsSeason = 'http://schema.org/containsSeason';
/**
 * contentLocation
 *
 * The location depicted or described in the content. For example, the location in a photograph or painting.
 *
 * http://schema.org/contentLocation
 */
var contentLocation = 'http://schema.org/contentLocation';
/**
 * creator
 *
 * The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.
 *
 * http://schema.org/creator
 */
var creator = 'http://schema.org/creator';
/**
 * dataset
 *
 * A dataset contained in this catalog.
 *
 * http://schema.org/dataset
 */
var dataset = 'http://schema.org/dataset';
/**
 * dateCreated
 *
 * The date on which the CreativeWork was created or the item was added to a DataFeed.
 *
 * http://schema.org/dateCreated
 */
var dateCreated = 'http://schema.org/dateCreated';
/**
 * director
 *
 * A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/director
 */
var director = 'http://schema.org/director';
/**
 * duration
 *
 * The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).
 *
 * http://schema.org/duration
 */
var duration = 'http://schema.org/duration';
/**
 * employee
 *
 * Someone working for this organization.
 *
 * http://schema.org/employee
 */
var employee = 'http://schema.org/employee';
/**
 * encodesBioChemEntity
 *
 * Another BioChemEntity encoded by this one.
 *
 * http://schema.org/encodesBioChemEntity
 */
var encodesBioChemEntity = 'http://schema.org/encodesBioChemEntity';
/**
 * encodesCreativeWork
 *
 * The CreativeWork encoded by this media object.
 *
 * http://schema.org/encodesCreativeWork
 */
var encodesCreativeWork = 'http://schema.org/encodesCreativeWork';
/**
 * encodingFormat
 *
 * Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.
 *
 * In cases where a [[CreativeWork]] has several media type representations, [[encoding]] can be used to indicate each [[MediaObject]] alongside particular [[encodingFormat]] information.
 *
 * Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.
 *
 * http://schema.org/encodingFormat
 */
var encodingFormat = 'http://schema.org/encodingFormat';
/**
 * episode
 *
 * An episode of a TV, radio or game media within a series or season.
 *
 * http://schema.org/episode
 */
var episode = 'http://schema.org/episode';
/**
 * event
 *
 * Upcoming or past event associated with this place, organization, or action.
 *
 * http://schema.org/event
 */
var event = 'http://schema.org/event';
/**
 * exampleOfWork
 *
 * A creative work that this work is an example/instance/realization/derivation of.
 *
 * http://schema.org/exampleOfWork
 */
var exampleOfWork = 'http://schema.org/exampleOfWork';
/**
 * executableLibraryName
 *
 * Library file name, e.g., mscorlib.dll, system.web.dll.
 *
 * http://schema.org/executableLibraryName
 */
var executableLibraryName = 'http://schema.org/executableLibraryName';
/**
 * exerciseCourse
 *
 * A sub property of location. The course where this action was taken.
 *
 * http://schema.org/exerciseCourse
 */
var exerciseCourse = 'http://schema.org/exerciseCourse';
/**
 * founder
 *
 * A person who founded this organization.
 *
 * http://schema.org/founder
 */
var founder = 'http://schema.org/founder';
/**
 * frequency
 *
 * How often the dose is taken, e.g. 'daily'.
 *
 * http://schema.org/frequency
 */
var frequency = 'http://schema.org/frequency';
/**
 * fundedItem
 *
 * Indicates something directly or indirectly funded or sponsored through a [[Grant]]. See also [[ownershipFundingInfo]].
 *
 * http://schema.org/fundedItem
 */
var fundedItem = 'http://schema.org/fundedItem';
/**
 * funding
 *
 * A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].
 *
 * http://schema.org/funding
 */
var funding = 'http://schema.org/funding';
/**
 * game
 *
 * Video game which is played on this server.
 *
 * http://schema.org/game
 */
var game = 'http://schema.org/game';
/**
 * gameServer
 *
 * The server on which  it is possible to play the game.
 *
 * http://schema.org/gameServer
 */
var gameServer = 'http://schema.org/gameServer';
/**
 * genre
 *
 * Genre of the creative work, broadcast channel or group.
 *
 * http://schema.org/genre
 */
var genre = 'http://schema.org/genre';
/**
 * hasBioChemEntityPart
 *
 * Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part.
 *
 * http://schema.org/hasBioChemEntityPart
 */
var hasBioChemEntityPart = 'http://schema.org/hasBioChemEntityPart';
/**
 * hasBroadcastChannel
 *
 * A broadcast channel of a broadcast service.
 *
 * http://schema.org/hasBroadcastChannel
 */
var hasBroadcastChannel = 'http://schema.org/hasBroadcastChannel';
/**
 * hasDefinedTerm
 *
 * A Defined Term contained in this term set.
 *
 * http://schema.org/hasDefinedTerm
 */
var hasDefinedTerm = 'http://schema.org/hasDefinedTerm';
/**
 * hasMenu
 *
 * Either the actual menu as a structured representation, as text, or a URL of the menu.
 *
 * http://schema.org/hasMenu
 */
var hasMenu = 'http://schema.org/hasMenu';
/**
 * hasMerchantReturnPolicy
 *
 * Specifies a MerchantReturnPolicy that may be applicable.
 *
 * http://schema.org/hasMerchantReturnPolicy
 */
var hasMerchantReturnPolicy = 'http://schema.org/hasMerchantReturnPolicy';
/**
 * hasVariant
 *
 * Indicates a [[Product]] that is a member of this [[ProductGroup]] (or [[ProductModel]]).
 *
 * http://schema.org/hasVariant
 */
var hasVariant = 'http://schema.org/hasVariant';
/**
 *
 *
 *
 *
 * http://schema.org/holdingArchive
 */
var holdingArchive = 'http://schema.org/holdingArchive';
/**
 * inDefinedTermSet
 *
 * A [[DefinedTermSet]] that contains this term.
 *
 * http://schema.org/inDefinedTermSet
 */
var inDefinedTermSet = 'http://schema.org/inDefinedTermSet';
/**
 * inLanguage
 *
 * The language of the content or performance or used in an action. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[availableLanguage]].
 *
 * http://schema.org/inLanguage
 */
var inLanguage = 'http://schema.org/inLanguage';
/**
 * incentiveCompensation
 *
 * Description of bonus and commission compensation aspects of the job.
 *
 * http://schema.org/incentiveCompensation
 */
var incentiveCompensation = 'http://schema.org/incentiveCompensation';
/**
 * interactionStatistic
 *
 * The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
 *
 * http://schema.org/interactionStatistic
 */
var interactionStatistic = 'http://schema.org/interactionStatistic';
/**
 * isAccessibleForFree
 *
 * A flag to signal that the item, event, or place is accessible for free.
 *
 * http://schema.org/isAccessibleForFree
 */
var isAccessibleForFree = 'http://schema.org/isAccessibleForFree';
/**
 * isBasedOn
 *
 * A resource from which this work is derived or from which it is a modification or adaptation.
 *
 * http://schema.org/isBasedOn
 */
var isBasedOn = 'http://schema.org/isBasedOn';
/**
 * isEncodedByBioChemEntity
 *
 * Another BioChemEntity encoding by this one.
 *
 * http://schema.org/isEncodedByBioChemEntity
 */
var isEncodedByBioChemEntity = 'http://schema.org/isEncodedByBioChemEntity';
/**
 * isPartOfBioChemEntity
 *
 * Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity.
 *
 * http://schema.org/isPartOfBioChemEntity
 */
var isPartOfBioChemEntity = 'http://schema.org/isPartOfBioChemEntity';
/**
 * isVariantOf
 *
 * Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.
 *
 * http://schema.org/isVariantOf
 */
var isVariantOf = 'http://schema.org/isVariantOf';
/**
 * itemOffered
 *
 * An item being offered (or demanded). The transactional nature of the offer or demand is documented using [[businessFunction]], e.g. sell, lease etc. While several common expected types are listed explicitly in this definition, others can be used. Using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
 *
 * http://schema.org/itemOffered
 */
var itemOffered = 'http://schema.org/itemOffered';
/**
 * jobBenefits
 *
 * Description of benefits associated with the job.
 *
 * http://schema.org/jobBenefits
 */
var jobBenefits = 'http://schema.org/jobBenefits';
/**
 * jurisdiction
 *
 * Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.
 *
 * http://schema.org/jurisdiction
 */
var jurisdiction = 'http://schema.org/jurisdiction';
/**
 * legislationApplies
 *
 * Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href="/legislationTransposes">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state "applies" the consolidated version of the European Directive implemented in it.
 *
 * http://schema.org/legislationApplies
 */
var legislationApplies = 'http://schema.org/legislationApplies';
/**
 * mainContentOfPage
 *
 * Indicates if this web page element is the main subject of the page.
 *
 * http://schema.org/mainContentOfPage
 */
var mainContentOfPage = 'http://schema.org/mainContentOfPage';
/**
 * mainEntity
 *
 * Indicates the primary entity described in some page or other CreativeWork.
 *
 * http://schema.org/mainEntity
 */
var mainEntity = 'http://schema.org/mainEntity';
/**
 * mainEntityOfPage
 *
 * Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.
 *
 * http://schema.org/mainEntityOfPage
 */
var mainEntityOfPage = 'http://schema.org/mainEntityOfPage';
/**
 * makesOffer
 *
 * A pointer to products or services offered by the organization or person.
 *
 * http://schema.org/makesOffer
 */
var makesOffer = 'http://schema.org/makesOffer';
/**
 * measurementTechnique
 *
 * A technique, method or technology used in an [[Observation]], [[StatisticalVariable]] or [[Dataset]] (or [[DataDownload]], [[DataCatalog]]), corresponding to the method used for measuring the corresponding variable(s) (for datasets, described using [[variableMeasured]]; for [[Observation]], a [[StatisticalVariable]]). Often but not necessarily each [[variableMeasured]] will have an explicit representation as (or mapping to) an property such as those defined in Schema.org, or other RDF vocabularies and "knowledge graphs". In that case the subproperty of [[variableMeasured]] called [[measuredProperty]] is applicable.
 *
 * The [[measurementTechnique]] property helps when extra clarification is needed about how a [[measuredProperty]] was measured. This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but can often serve as a high level summary for dataset discovery.
 *
 * For example, if [[variableMeasured]] is: molecule concentration, [[measurementTechnique]] could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry" or "immunofluorescence". If the [[variableMeasured]] is "depression rating", the [[measurementTechnique]] could be "Zung Scale" or "HAM-D" or "Beck Depression Inventory".
 *
 * If there are several [[variableMeasured]] properties recorded for some given data object, use a [[PropertyValue]] for each [[variableMeasured]] and attach the corresponding [[measurementTechnique]]. The value can also be from an enumeration, organized as a [[MeasurementMetholdEnumeration]].
 *
 * http://schema.org/measurementTechnique
 */
var measurementTechnique = 'http://schema.org/measurementTechnique';
/**
 * merchantReturnDays
 *
 * Specifies either a fixed return date or the number of days (from the delivery date) that a product can be returned. Used when the [[returnPolicyCategory]] property is specified as [[MerchantReturnFiniteReturnWindow]].
 *
 * http://schema.org/merchantReturnDays
 */
var merchantReturnDays = 'http://schema.org/merchantReturnDays';
/**
 * merchantReturnLink
 *
 * Specifies a Web page or service by URL, for product returns.
 *
 * http://schema.org/merchantReturnLink
 */
var merchantReturnLink = 'http://schema.org/merchantReturnLink';
/**
 * offeredBy
 *
 * A pointer to the organization or person making the offer.
 *
 * http://schema.org/offeredBy
 */
var offeredBy = 'http://schema.org/offeredBy';
/**
 * offers
 *
 * An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.
 *
 *
 * http://schema.org/offers
 */
var offers = 'http://schema.org/offers';
/**
 * parent
 *
 * A parent of this person.
 *
 * http://schema.org/parent
 */
var parent = 'http://schema.org/parent';
/**
 * parentTaxon
 *
 * Closest parent taxon of the taxon in question.
 *
 * http://schema.org/parentTaxon
 */
var parentTaxon = 'http://schema.org/parentTaxon';
/**
 * partOfSeries
 *
 * The series to which this episode or season belongs.
 *
 * http://schema.org/partOfSeries
 */
var partOfSeries = 'http://schema.org/partOfSeries';
/**
 * partOfTrip
 *
 * Identifies that this [[Trip]] is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
 *
 * http://schema.org/partOfTrip
 */
var partOfTrip = 'http://schema.org/partOfTrip';
/**
 * paymentDueDate
 *
 * The date that payment is due.
 *
 * http://schema.org/paymentDueDate
 */
var paymentDueDate = 'http://schema.org/paymentDueDate';
/**
 * performTime
 *
 * The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).
 *
 * http://schema.org/performTime
 */
var performTime = 'http://schema.org/performTime';
/**
 * performer
 *
 * A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.
 *
 * http://schema.org/performer
 */
var performer = 'http://schema.org/performer';
/**
 * photo
 *
 * A photograph of this place.
 *
 * http://schema.org/photo
 */
var photo = 'http://schema.org/photo';
/**
 * provider
 *
 * The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
 *
 * http://schema.org/provider
 */
var provider = 'http://schema.org/provider';
/**
 * providesBroadcastService
 *
 * The BroadcastService offered on this channel.
 *
 * http://schema.org/providesBroadcastService
 */
var providesBroadcastService = 'http://schema.org/providesBroadcastService';
/**
 * recipeIngredient
 *
 * A single ingredient used in the recipe, e.g. sugar, flour or garlic.
 *
 * http://schema.org/recipeIngredient
 */
var recipeIngredient = 'http://schema.org/recipeIngredient';
/**
 * recordedAs
 *
 * An audio recording of the work.
 *
 * http://schema.org/recordedAs
 */
var recordedAs = 'http://schema.org/recordedAs';
/**
 * recordedAt
 *
 * The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.
 *
 * http://schema.org/recordedAt
 */
var recordedAt = 'http://schema.org/recordedAt';
/**
 * recordedIn
 *
 * The CreativeWork that captured all or part of this Event.
 *
 * http://schema.org/recordedIn
 */
var recordedIn = 'http://schema.org/recordedIn';
/**
 * recordingOf
 *
 * The composition this track is a recording of.
 *
 * http://schema.org/recordingOf
 */
var recordingOf = 'http://schema.org/recordingOf';
/**
 * releaseOf
 *
 * The album this is a release of.
 *
 * http://schema.org/releaseOf
 */
var releaseOf = 'http://schema.org/releaseOf';
/**
 * review
 *
 * A review of the item.
 *
 * http://schema.org/review
 */
var review = 'http://schema.org/review';
/**
 * roleName
 *
 * A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.
 *
 * http://schema.org/roleName
 */
var roleName = 'http://schema.org/roleName';
/**
 * runtimePlatform
 *
 * Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).
 *
 * http://schema.org/runtimePlatform
 */
var runtimePlatform = 'http://schema.org/runtimePlatform';
/**
 * season
 *
 * A season in a media series.
 *
 * http://schema.org/season
 */
var season = 'http://schema.org/season';
/**
 * serialNumber
 *
 * The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.
 *
 * http://schema.org/serialNumber
 */
var serialNumber = 'http://schema.org/serialNumber';
/**
 * serviceArea
 *
 * The geographic area where the service is provided.
 *
 * http://schema.org/serviceArea
 */
var serviceArea = 'http://schema.org/serviceArea';
/**
 * serviceOutput
 *
 * The tangible thing generated by the service, e.g. a passport, permit, etc.
 *
 * http://schema.org/serviceOutput
 */
var serviceOutput = 'http://schema.org/serviceOutput';
/**
 * sibling
 *
 * A sibling of the person.
 *
 * http://schema.org/sibling
 */
var sibling = 'http://schema.org/sibling';
/**
 * significantLink
 *
 * One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
 *
 * http://schema.org/significantLink
 */
var significantLink = 'http://schema.org/significantLink';
/**
 * softwareRequirements
 *
 * Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).
 *
 * http://schema.org/softwareRequirements
 */
var softwareRequirements = 'http://schema.org/softwareRequirements';
/**
 * sponsor
 *
 * A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.
 *
 * http://schema.org/sponsor
 */
var sponsor = 'http://schema.org/sponsor';
/**
 * subOrganization
 *
 * A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
 *
 * http://schema.org/subOrganization
 */
var subOrganization = 'http://schema.org/subOrganization';
/**
 * subTrip
 *
 * Identifies a [[Trip]] that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
 *
 * http://schema.org/subTrip
 */
var subTrip = 'http://schema.org/subTrip';
/**
 * subjectOf
 *
 * A CreativeWork or Event about this Thing.
 *
 * http://schema.org/subjectOf
 */
var subjectOf = 'http://schema.org/subjectOf';
/**
 * suggestedAnswer
 *
 * An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.
 *
 * http://schema.org/suggestedAnswer
 */
var suggestedAnswer = 'http://schema.org/suggestedAnswer';
/**
 * superEvent
 *
 * An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.
 *
 * http://schema.org/superEvent
 */
var superEvent = 'http://schema.org/superEvent';
/**
 * targetCollection
 *
 * A sub property of object. The collection target of the action.
 *
 * http://schema.org/targetCollection
 */
var targetCollection = 'http://schema.org/targetCollection';
/**
 * temporalCoverage
 *
 * The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals). In
 *       the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content, e.g. ScholarlyArticle, Book, TVSeries or TVEpisode, may indicate their temporalCoverage in broader terms - textually or via well-known URL.
 *       Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".
 *
 * Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.
 *
 * http://schema.org/temporalCoverage
 */
var temporalCoverage = 'http://schema.org/temporalCoverage';
/**
 * termCode
 *
 * A code that identifies this [[DefinedTerm]] within a [[DefinedTermSet]]
 *
 * http://schema.org/termCode
 */
var termCode = 'http://schema.org/termCode';
/**
 * track
 *
 * A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.
 *
 * http://schema.org/track
 */
var track = 'http://schema.org/track';
/**
 * translationOfWork
 *
 * The work that this work has been translated from. E.g. 物种起源 is a translationOf “On the Origin of Species”.
 *
 * http://schema.org/translationOfWork
 */
var translationOfWork = 'http://schema.org/translationOfWork';
/**
 * usageInfo
 *
 * The schema.org [[usageInfo]] property indicates further information about a [[CreativeWork]]. This property is applicable both to works that are freely available and to those that require payment or other transactions. It can reference additional information, e.g. community expectations on preferred linking and citation conventions, as well as purchasing details. For something that can be commercially licensed, usageInfo can provide detailed, resource-specific information about licensing options.
 *
 * This property can be used alongside the license property which indicates license(s) applicable to some piece of content. The usageInfo property can provide information about other licensing options, e.g. acquiring commercial usage rights for an image that is also available under non-commercial creative commons licenses.
 *
 * http://schema.org/usageInfo
 */
var usageInfo = 'http://schema.org/usageInfo';
/**
 * warranty
 *
 * The warranty promise(s) included in the offer.
 *
 * http://schema.org/warranty
 */
var warranty = 'http://schema.org/warranty';
/**
 * workTranslation
 *
 * A work that is a translation of the content of this work. E.g. 西遊記 has an English workTranslation “Journey to the West”, a German workTranslation “Monkeys Pilgerfahrt” and a Vietnamese  translation Tây du ký bình khảo.
 *
 * http://schema.org/workTranslation
 */
var workTranslation = 'http://schema.org/workTranslation';
/**
 * yield
 *
 * The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
 * Note that `yield` is a reserved Javascript keyword, and is therefore suffixed by `__workaround`.
 * For a list of reserved keywords, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords.
 *
 * http://schema.org/yield
 */
var yield__workaround = 'http://schema.org/yield';
/**
 * about
 *
 * The subject matter of the content.
 *
 * http://schema.org/about
 */
var about = 'http://schema.org/about';
/**
 * actor
 *
 * An actor, e.g. in TV, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
 *
 * http://schema.org/actor
 */
var actor = 'http://schema.org/actor';
/**
 * associatedReview
 *
 * An associated [[Review]].
 *
 * http://schema.org/associatedReview
 */
var associatedReview = 'http://schema.org/associatedReview';
/**
 * competitor
 *
 * A competitor in a sports event.
 *
 * http://schema.org/competitor
 */
var competitor = 'http://schema.org/competitor';
/**
 * containedInPlace
 *
 * The basic containment relation between a place and one that contains it.
 *
 * http://schema.org/containedInPlace
 */
var containedInPlace = 'http://schema.org/containedInPlace';
/**
 * encoding
 *
 * A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.
 *
 * http://schema.org/encoding
 */
var encoding = 'http://schema.org/encoding';
/**
 * hasMap
 *
 * A URL to a map of the place.
 *
 * http://schema.org/hasMap
 */
var hasMap = 'http://schema.org/hasMap';
/**
 * material
 *
 * A material that something is made from, e.g. leather, wool, cotton, paper.
 *
 * http://schema.org/material
 */
var material = 'http://schema.org/material';
/**
 * memberOf
 *
 * An Organization (or ProgramMembership) to which this Person or Organization belongs.
 *
 * http://schema.org/memberOf
 */
var memberOf = 'http://schema.org/memberOf';
/**
 * parentOrganization
 *
 * The larger organization that this organization is a [[subOrganization]] of, if any.
 *
 * http://schema.org/parentOrganization
 */
var parentOrganization = 'http://schema.org/parentOrganization';
/**
 * result
 *
 * The result produced in the action. E.g. John wrote *a book*.
 *
 * http://schema.org/result
 */
var result = 'http://schema.org/result';
/**
 * seller
 *
 * An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
 *
 * http://schema.org/seller
 */
var seller = 'http://schema.org/seller';
/**
 * spatialCoverage
 *
 * The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
 *       contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
 *       areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
 *
 * http://schema.org/spatialCoverage
 */
var spatialCoverage = 'http://schema.org/spatialCoverage';
/**
 * step
 *
 * A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
 *
 * http://schema.org/step
 */
var step = 'http://schema.org/step';
/**
 * subEvent
 *
 * An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.
 *
 * http://schema.org/subEvent
 */
var subEvent = 'http://schema.org/subEvent';
/**
 * supply
 *
 * A sub-property of instrument. A supply consumed when performing instructions or a direction.
 *
 * http://schema.org/supply
 */
var supply = 'http://schema.org/supply';
/**
 * workFeatured
 *
 * A work featured in some event, e.g. exhibited in an ExhibitionEvent.
 *        Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
 *
 * http://schema.org/workFeatured
 */
var workFeatured = 'http://schema.org/workFeatured';
/**
 * areaServed
 *
 * The geographic area where a service or offered item is provided.
 *
 * http://schema.org/areaServed
 */
var areaServed = 'http://schema.org/areaServed';
/**
 * image
 *
 * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].
 *
 * http://schema.org/image
 */
var image = 'http://schema.org/image';
/**
 * includedInDataCatalog
 *
 * A data catalog which contains this dataset.
 *
 * http://schema.org/includedInDataCatalog
 */
var includedInDataCatalog = 'http://schema.org/includedInDataCatalog';
/**
 * member
 *
 * A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
 *
 * http://schema.org/member
 */
var member = 'http://schema.org/member';
/**
 * recipient
 *
 * A sub property of participant. The participant who is at the receiving end of the action.
 *
 * http://schema.org/recipient
 */
var recipient = 'http://schema.org/recipient';
/**
 * workExample
 *
 * Example/instance/realization/derivation of the concept of this creative work. E.g. the paperback edition, first edition, or e-book.
 *
 * http://schema.org/workExample
 */
var workExample = 'http://schema.org/workExample';
/**
 * description
 *
 * A description of the item.
 *
 * http://schema.org/description
 */
var description = 'http://schema.org/description';
/**
 * gtin
 *
 * A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.
 *
 * The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) express GTINs as URLs (URIs, IRIs, etc.). Details including regular expression examples can be found in, Section 6 of the GS1 URI Syntax specification; see also [schema.org tracking issue](https://github.com/schemaorg/schemaorg/issues/3156#issuecomment-1209522809) for schema.org-specific discussion. A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.
 *
 * Note also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.
 *
 * http://schema.org/gtin
 */
var gtin = 'http://schema.org/gtin';
/**
 * hasRepresentation
 *
 * A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.
 *
 * http://schema.org/hasRepresentation
 */
var hasRepresentation = 'http://schema.org/hasRepresentation';
/**
 * hasPart
 *
 * Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).
 *
 * http://schema.org/hasPart
 */
var hasPart = 'http://schema.org/hasPart';
/**
 * position
 *
 * The position of an item in a series or sequence of items.
 *
 * http://schema.org/position
 */
var position = 'http://schema.org/position';
/**
 * isPartOf
 *
 * Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.
 *
 * http://schema.org/isPartOf
 */
var isPartOf = 'http://schema.org/isPartOf';
/**
 * instrument
 *
 * The object that helped the agent perform the action. E.g. John wrote a book with *a pen*.
 *
 * http://schema.org/instrument
 */
var instrument = 'http://schema.org/instrument';
/**
 * object
 *
 * The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). E.g. John read *a book*.
 *
 * http://schema.org/object
 */
var object = 'http://schema.org/object';
/**
 * publishingPrinciples
 *
 * The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].
 *
 * While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.
 *
 *
 * http://schema.org/publishingPrinciples
 */
var publishingPrinciples = 'http://schema.org/publishingPrinciples';
/**
 * location
 *
 * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
 *
 * http://schema.org/location
 */
var location = 'http://schema.org/location';
/**
 * participant
 *
 * Other co-agents that participated in the action indirectly. E.g. John wrote a book with *Steve*.
 *
 * http://schema.org/participant
 */
var participant = 'http://schema.org/participant';
/**
 * identifier
 *
 * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.
 *
 *
 * http://schema.org/identifier
 */
var identifier = 'http://schema.org/identifier';

var schemaImport = /*#__PURE__*/Object.freeze({
	AMRadioChannel: AMRadioChannel,
	APIReference: APIReference,
	AboutPage: AboutPage,
	AcceptAction: AcceptAction,
	Accommodation: Accommodation,
	AccountingService: AccountingService,
	AchieveAction: AchieveAction,
	Action: Action,
	ActionAccessSpecification: ActionAccessSpecification,
	ActionStatusType: ActionStatusType,
	ActivateAction: ActivateAction,
	AddAction: AddAction,
	AdministrativeArea: AdministrativeArea,
	AdultEntertainment: AdultEntertainment,
	AdultOrientedEnumeration: AdultOrientedEnumeration,
	AdvertiserContentArticle: AdvertiserContentArticle,
	AggregateOffer: AggregateOffer,
	AggregateRating: AggregateRating,
	AgreeAction: AgreeAction,
	Airline: Airline,
	Airport: Airport,
	AlignmentObject: AlignmentObject,
	AllocateAction: AllocateAction,
	AmpStory: AmpStory,
	AmusementPark: AmusementPark,
	AnalysisNewsArticle: AnalysisNewsArticle,
	AnatomicalStructure: AnatomicalStructure,
	AnatomicalSystem: AnatomicalSystem,
	AnimalShelter: AnimalShelter,
	Answer: Answer,
	Apartment: Apartment,
	ApartmentComplex: ApartmentComplex,
	AppendAction: AppendAction,
	ApplyAction: ApplyAction,
	ApprovedIndication: ApprovedIndication,
	Aquarium: Aquarium,
	ArchiveComponent: ArchiveComponent,
	ArchiveOrganization: ArchiveOrganization,
	ArriveAction: ArriveAction,
	ArtGallery: ArtGallery,
	Artery: Artery,
	Article: Article,
	AskAction: AskAction,
	AskPublicNewsArticle: AskPublicNewsArticle,
	AssessAction: AssessAction,
	AssignAction: AssignAction,
	Atlas: Atlas,
	Attorney: Attorney,
	Audience: Audience,
	AudioObject: AudioObject,
	AudioObjectSnapshot: AudioObjectSnapshot,
	Audiobook: Audiobook,
	AuthorizeAction: AuthorizeAction,
	AutoBodyShop: AutoBodyShop,
	AutoDealer: AutoDealer,
	AutoPartsStore: AutoPartsStore,
	AutoRental: AutoRental,
	AutoRepair: AutoRepair,
	AutoWash: AutoWash,
	AutomatedTeller: AutomatedTeller,
	AutomotiveBusiness: AutomotiveBusiness,
	BackgroundNewsArticle: BackgroundNewsArticle,
	Bakery: Bakery,
	BankAccount: BankAccount,
	BankOrCreditUnion: BankOrCreditUnion,
	BarOrPub: BarOrPub,
	Barcode: Barcode,
	Beach: Beach,
	BeautySalon: BeautySalon,
	BedAndBreakfast: BedAndBreakfast,
	BedDetails: BedDetails,
	BedType: BedType,
	BefriendAction: BefriendAction,
	BikeStore: BikeStore,
	BioChemEntity: BioChemEntity,
	Blog: Blog,
	BlogPosting: BlogPosting,
	BloodTest: BloodTest,
	BoardingPolicyType: BoardingPolicyType,
	BoatReservation: BoatReservation,
	BoatTerminal: BoatTerminal,
	BoatTrip: BoatTrip,
	BodyMeasurementTypeEnumeration: BodyMeasurementTypeEnumeration,
	BodyOfWater: BodyOfWater,
	Bone: Bone,
	Book: Book,
	BookFormatType: BookFormatType,
	BookSeries: BookSeries,
	BookStore: BookStore,
	BookmarkAction: BookmarkAction,
	Boolean__workaround: Boolean__workaround,
	BorrowAction: BorrowAction,
	BowlingAlley: BowlingAlley,
	BrainStructure: BrainStructure,
	Brand: Brand,
	BreadcrumbList: BreadcrumbList,
	Brewery: Brewery,
	Bridge: Bridge,
	BroadcastChannel: BroadcastChannel,
	BroadcastEvent: BroadcastEvent,
	BroadcastFrequencySpecification: BroadcastFrequencySpecification,
	BroadcastService: BroadcastService,
	BrokerageAccount: BrokerageAccount,
	BuddhistTemple: BuddhistTemple,
	BusOrCoach: BusOrCoach,
	BusReservation: BusReservation,
	BusStation: BusStation,
	BusStop: BusStop,
	BusTrip: BusTrip,
	BusinessAudience: BusinessAudience,
	BusinessEntityType: BusinessEntityType,
	BusinessEvent: BusinessEvent,
	BusinessFunction: BusinessFunction,
	BuyAction: BuyAction,
	CDCPMDRecord: CDCPMDRecord,
	CableOrSatelliteService: CableOrSatelliteService,
	CafeOrCoffeeShop: CafeOrCoffeeShop,
	Campground: Campground,
	CampingPitch: CampingPitch,
	Canal: Canal,
	CancelAction: CancelAction,
	Car: Car,
	CarUsageType: CarUsageType,
	Casino: Casino,
	CategoryCode: CategoryCode,
	CategoryCodeSet: CategoryCodeSet,
	CatholicChurch: CatholicChurch,
	Cemetery: Cemetery,
	Chapter: Chapter,
	CheckAction: CheckAction,
	CheckInAction: CheckInAction,
	CheckOutAction: CheckOutAction,
	CheckoutPage: CheckoutPage,
	ChemicalSubstance: ChemicalSubstance,
	ChildCare: ChildCare,
	ChildrensEvent: ChildrensEvent,
	ChooseAction: ChooseAction,
	Church: Church,
	City: City,
	CityHall: CityHall,
	CivicStructure: CivicStructure,
	Claim: Claim,
	ClaimReview: ClaimReview,
	Class: Class,
	Clip: Clip,
	ClothingStore: ClothingStore,
	Code: Code,
	Collection: Collection,
	CollectionPage: CollectionPage,
	CollegeOrUniversity: CollegeOrUniversity,
	ComedyClub: ComedyClub,
	ComedyEvent: ComedyEvent,
	ComicCoverArt: ComicCoverArt,
	ComicIssue: ComicIssue,
	ComicSeries: ComicSeries,
	ComicStory: ComicStory,
	Comment: Comment,
	CommentAction: CommentAction,
	CommunicateAction: CommunicateAction,
	CompleteDataFeed: CompleteDataFeed,
	CompoundPriceSpecification: CompoundPriceSpecification,
	ComputerLanguage: ComputerLanguage,
	ComputerStore: ComputerStore,
	ConfirmAction: ConfirmAction,
	Consortium: Consortium,
	ConstraintNode: ConstraintNode,
	ConsumeAction: ConsumeAction,
	ContactPage: ContactPage,
	ContactPoint: ContactPoint,
	ContactPointOption: ContactPointOption,
	Continent: Continent,
	ControlAction: ControlAction,
	ConvenienceStore: ConvenienceStore,
	Conversation: Conversation,
	CookAction: CookAction,
	Corporation: Corporation,
	CorrectionComment: CorrectionComment,
	Country: Country,
	Course: Course,
	CourseInstance: CourseInstance,
	Courthouse: Courthouse,
	CoverArt: CoverArt,
	CovidTestingFacility: CovidTestingFacility,
	CreateAction: CreateAction,
	CreativeWork: CreativeWork,
	CreativeWorkSeason: CreativeWorkSeason,
	CreativeWorkSeries: CreativeWorkSeries,
	CreditCard: CreditCard,
	Crematorium: Crematorium,
	CriticReview: CriticReview,
	CssSelectorType: CssSelectorType,
	CurrencyConversionService: CurrencyConversionService,
	DDxElement: DDxElement,
	DanceEvent: DanceEvent,
	DanceGroup: DanceGroup,
	DataCatalog: DataCatalog,
	DataDownload: DataDownload,
	DataFeed: DataFeed,
	DataFeedItem: DataFeedItem,
	DataType: DataType,
	Dataset: Dataset,
	Date__workaround: Date__workaround,
	DateTime: DateTime,
	DatedMoneySpecification: DatedMoneySpecification,
	DayOfWeek: DayOfWeek,
	DaySpa: DaySpa,
	DeactivateAction: DeactivateAction,
	DefenceEstablishment: DefenceEstablishment,
	DefinedRegion: DefinedRegion,
	DefinedTerm: DefinedTerm,
	DefinedTermSet: DefinedTermSet,
	DeleteAction: DeleteAction,
	DeliveryChargeSpecification: DeliveryChargeSpecification,
	DeliveryEvent: DeliveryEvent,
	DeliveryMethod: DeliveryMethod,
	DeliveryTimeSettings: DeliveryTimeSettings,
	Demand: Demand,
	Dentist: Dentist,
	DepartAction: DepartAction,
	DepartmentStore: DepartmentStore,
	DepositAccount: DepositAccount,
	DiagnosticLab: DiagnosticLab,
	DiagnosticProcedure: DiagnosticProcedure,
	Diet: Diet,
	DietarySupplement: DietarySupplement,
	DigitalDocument: DigitalDocument,
	DigitalDocumentPermission: DigitalDocumentPermission,
	DigitalDocumentPermissionType: DigitalDocumentPermissionType,
	DigitalPlatformEnumeration: DigitalPlatformEnumeration,
	DisagreeAction: DisagreeAction,
	DiscoverAction: DiscoverAction,
	DiscussionForumPosting: DiscussionForumPosting,
	DislikeAction: DislikeAction,
	Distance: Distance,
	Distillery: Distillery,
	DonateAction: DonateAction,
	DoseSchedule: DoseSchedule,
	DownloadAction: DownloadAction,
	DrawAction: DrawAction,
	Drawing: Drawing,
	DrinkAction: DrinkAction,
	DriveWheelConfigurationValue: DriveWheelConfigurationValue,
	Drug: Drug,
	DrugClass: DrugClass,
	DrugCost: DrugCost,
	DrugCostCategory: DrugCostCategory,
	DrugLegalStatus: DrugLegalStatus,
	DrugPregnancyCategory: DrugPregnancyCategory,
	DrugPrescriptionStatus: DrugPrescriptionStatus,
	DrugStrength: DrugStrength,
	DryCleaningOrLaundry: DryCleaningOrLaundry,
	Duration: Duration,
	EUEnergyEfficiencyEnumeration: EUEnergyEfficiencyEnumeration,
	EatAction: EatAction,
	EducationEvent: EducationEvent,
	EducationalAudience: EducationalAudience,
	EducationalOccupationalCredential: EducationalOccupationalCredential,
	EducationalOccupationalProgram: EducationalOccupationalProgram,
	EducationalOrganization: EducationalOrganization,
	Electrician: Electrician,
	ElectronicsStore: ElectronicsStore,
	ElementarySchool: ElementarySchool,
	EmailMessage: EmailMessage,
	Embassy: Embassy,
	EmergencyService: EmergencyService,
	EmployeeRole: EmployeeRole,
	EmployerAggregateRating: EmployerAggregateRating,
	EmployerReview: EmployerReview,
	EmploymentAgency: EmploymentAgency,
	EndorseAction: EndorseAction,
	EndorsementRating: EndorsementRating,
	Energy: Energy,
	EnergyConsumptionDetails: EnergyConsumptionDetails,
	EnergyEfficiencyEnumeration: EnergyEfficiencyEnumeration,
	EnergyStarEnergyEfficiencyEnumeration: EnergyStarEnergyEfficiencyEnumeration,
	EngineSpecification: EngineSpecification,
	EntertainmentBusiness: EntertainmentBusiness,
	EntryPoint: EntryPoint,
	Enumeration: Enumeration,
	Episode: Episode,
	Event: Event,
	EventAttendanceModeEnumeration: EventAttendanceModeEnumeration,
	EventReservation: EventReservation,
	EventSeries: EventSeries,
	EventStatusType: EventStatusType,
	EventVenue: EventVenue,
	ExchangeRateSpecification: ExchangeRateSpecification,
	ExerciseAction: ExerciseAction,
	ExerciseGym: ExerciseGym,
	ExercisePlan: ExercisePlan,
	ExhibitionEvent: ExhibitionEvent,
	FAQPage: FAQPage,
	FMRadioChannel: FMRadioChannel,
	FastFoodRestaurant: FastFoodRestaurant,
	Festival: Festival,
	FilmAction: FilmAction,
	FinancialProduct: FinancialProduct,
	FinancialService: FinancialService,
	FindAction: FindAction,
	FireStation: FireStation,
	Flight: Flight,
	FlightReservation: FlightReservation,
	Float: Float,
	FloorPlan: FloorPlan,
	Florist: Florist,
	FollowAction: FollowAction,
	FoodEstablishment: FoodEstablishment,
	FoodEstablishmentReservation: FoodEstablishmentReservation,
	FoodEvent: FoodEvent,
	FoodService: FoodService,
	FundingAgency: FundingAgency,
	FundingScheme: FundingScheme,
	FurnitureStore: FurnitureStore,
	Game: Game,
	GameAvailabilityEnumeration: GameAvailabilityEnumeration,
	GamePlayMode: GamePlayMode,
	GameServer: GameServer,
	GameServerStatus: GameServerStatus,
	GardenStore: GardenStore,
	GasStation: GasStation,
	GatedResidenceCommunity: GatedResidenceCommunity,
	GenderType: GenderType,
	Gene: Gene,
	GeneralContractor: GeneralContractor,
	GeoCircle: GeoCircle,
	GeoCoordinates: GeoCoordinates,
	GeoShape: GeoShape,
	GeospatialGeometry: GeospatialGeometry,
	GiveAction: GiveAction,
	GolfCourse: GolfCourse,
	GovernmentBenefitsType: GovernmentBenefitsType,
	GovernmentBuilding: GovernmentBuilding,
	GovernmentOffice: GovernmentOffice,
	GovernmentOrganization: GovernmentOrganization,
	GovernmentPermit: GovernmentPermit,
	GovernmentService: GovernmentService,
	Grant: Grant,
	GroceryStore: GroceryStore,
	Guide: Guide,
	HVACBusiness: HVACBusiness,
	Hackathon: Hackathon,
	HairSalon: HairSalon,
	HardwareStore: HardwareStore,
	HealthAndBeautyBusiness: HealthAndBeautyBusiness,
	HealthAspectEnumeration: HealthAspectEnumeration,
	HealthClub: HealthClub,
	HealthInsurancePlan: HealthInsurancePlan,
	HealthPlanCostSharingSpecification: HealthPlanCostSharingSpecification,
	HealthPlanFormulary: HealthPlanFormulary,
	HealthPlanNetwork: HealthPlanNetwork,
	HealthTopicContent: HealthTopicContent,
	HighSchool: HighSchool,
	HinduTemple: HinduTemple,
	HobbyShop: HobbyShop,
	HomeAndConstructionBusiness: HomeAndConstructionBusiness,
	HomeGoodsStore: HomeGoodsStore,
	Hospital: Hospital,
	Hostel: Hostel,
	Hotel: Hotel,
	HotelRoom: HotelRoom,
	House: House,
	HousePainter: HousePainter,
	HowTo: HowTo,
	HowToDirection: HowToDirection,
	HowToItem: HowToItem,
	HowToSection: HowToSection,
	HowToStep: HowToStep,
	HowToSupply: HowToSupply,
	HowToTip: HowToTip,
	HowToTool: HowToTool,
	HyperToc: HyperToc,
	HyperTocEntry: HyperTocEntry,
	IceCreamShop: IceCreamShop,
	IgnoreAction: IgnoreAction,
	ImageGallery: ImageGallery,
	ImageObject: ImageObject,
	ImageObjectSnapshot: ImageObjectSnapshot,
	ImagingTest: ImagingTest,
	IndividualProduct: IndividualProduct,
	InfectiousAgentClass: InfectiousAgentClass,
	InfectiousDisease: InfectiousDisease,
	InformAction: InformAction,
	InsertAction: InsertAction,
	InstallAction: InstallAction,
	InsuranceAgency: InsuranceAgency,
	Intangible: Intangible,
	Integer: Integer,
	InteractAction: InteractAction,
	InteractionCounter: InteractionCounter,
	InternetCafe: InternetCafe,
	InvestmentFund: InvestmentFund,
	InvestmentOrDeposit: InvestmentOrDeposit,
	InviteAction: InviteAction,
	Invoice: Invoice,
	ItemAvailability: ItemAvailability,
	ItemList: ItemList,
	ItemListOrderType: ItemListOrderType,
	ItemPage: ItemPage,
	JewelryStore: JewelryStore,
	JobPosting: JobPosting,
	JoinAction: JoinAction,
	Joint: Joint,
	LakeBodyOfWater: LakeBodyOfWater,
	Landform: Landform,
	LandmarksOrHistoricalBuildings: LandmarksOrHistoricalBuildings,
	Language: Language,
	LearningResource: LearningResource,
	LeaveAction: LeaveAction,
	LegalForceStatus: LegalForceStatus,
	LegalService: LegalService,
	LegalValueLevel: LegalValueLevel,
	Legislation: Legislation,
	LegislationObject: LegislationObject,
	LegislativeBuilding: LegislativeBuilding,
	LendAction: LendAction,
	Library: Library,
	LibrarySystem: LibrarySystem,
	LifestyleModification: LifestyleModification,
	Ligament: Ligament,
	LikeAction: LikeAction,
	LinkRole: LinkRole,
	LiquorStore: LiquorStore,
	ListItem: ListItem,
	ListenAction: ListenAction,
	LiteraryEvent: LiteraryEvent,
	LiveBlogPosting: LiveBlogPosting,
	LoanOrCredit: LoanOrCredit,
	LocalBusiness: LocalBusiness,
	LocationFeatureSpecification: LocationFeatureSpecification,
	Locksmith: Locksmith,
	LodgingBusiness: LodgingBusiness,
	LodgingReservation: LodgingReservation,
	LoseAction: LoseAction,
	LymphaticVessel: LymphaticVessel,
	Manuscript: Manuscript,
	Map__workaround: Map__workaround,
	MapCategoryType: MapCategoryType,
	MarryAction: MarryAction,
	Mass: Mass,
	MathSolver: MathSolver,
	MaximumDoseSchedule: MaximumDoseSchedule,
	MeasurementMethodEnum: MeasurementMethodEnum,
	MeasurementTypeEnumeration: MeasurementTypeEnumeration,
	MediaGallery: MediaGallery,
	MediaManipulationRatingEnumeration: MediaManipulationRatingEnumeration,
	MediaObject: MediaObject,
	MediaReview: MediaReview,
	MediaReviewItem: MediaReviewItem,
	MediaSubscription: MediaSubscription,
	MedicalAudience: MedicalAudience,
	MedicalAudienceType: MedicalAudienceType,
	MedicalBusiness: MedicalBusiness,
	MedicalCause: MedicalCause,
	MedicalClinic: MedicalClinic,
	MedicalCode: MedicalCode,
	MedicalCondition: MedicalCondition,
	MedicalConditionStage: MedicalConditionStage,
	MedicalContraindication: MedicalContraindication,
	MedicalDevice: MedicalDevice,
	MedicalDevicePurpose: MedicalDevicePurpose,
	MedicalEntity: MedicalEntity,
	MedicalEnumeration: MedicalEnumeration,
	MedicalEvidenceLevel: MedicalEvidenceLevel,
	MedicalGuideline: MedicalGuideline,
	MedicalGuidelineContraindication: MedicalGuidelineContraindication,
	MedicalGuidelineRecommendation: MedicalGuidelineRecommendation,
	MedicalImagingTechnique: MedicalImagingTechnique,
	MedicalIndication: MedicalIndication,
	MedicalIntangible: MedicalIntangible,
	MedicalObservationalStudy: MedicalObservationalStudy,
	MedicalObservationalStudyDesign: MedicalObservationalStudyDesign,
	MedicalOrganization: MedicalOrganization,
	MedicalProcedure: MedicalProcedure,
	MedicalProcedureType: MedicalProcedureType,
	MedicalRiskCalculator: MedicalRiskCalculator,
	MedicalRiskEstimator: MedicalRiskEstimator,
	MedicalRiskFactor: MedicalRiskFactor,
	MedicalRiskScore: MedicalRiskScore,
	MedicalScholarlyArticle: MedicalScholarlyArticle,
	MedicalSign: MedicalSign,
	MedicalSignOrSymptom: MedicalSignOrSymptom,
	MedicalSpecialty: MedicalSpecialty,
	MedicalStudy: MedicalStudy,
	MedicalStudyStatus: MedicalStudyStatus,
	MedicalSymptom: MedicalSymptom,
	MedicalTest: MedicalTest,
	MedicalTestPanel: MedicalTestPanel,
	MedicalTherapy: MedicalTherapy,
	MedicalTrial: MedicalTrial,
	MedicalTrialDesign: MedicalTrialDesign,
	MedicalWebPage: MedicalWebPage,
	MedicineSystem: MedicineSystem,
	MeetingRoom: MeetingRoom,
	MensClothingStore: MensClothingStore,
	Menu: Menu,
	MenuItem: MenuItem,
	MenuSection: MenuSection,
	MerchantReturnEnumeration: MerchantReturnEnumeration,
	MerchantReturnPolicy: MerchantReturnPolicy,
	MerchantReturnPolicySeasonalOverride: MerchantReturnPolicySeasonalOverride,
	Message: Message,
	MiddleSchool: MiddleSchool,
	MobileApplication: MobileApplication,
	MobilePhoneStore: MobilePhoneStore,
	MolecularEntity: MolecularEntity,
	MonetaryAmount: MonetaryAmount,
	MonetaryAmountDistribution: MonetaryAmountDistribution,
	MonetaryGrant: MonetaryGrant,
	MoneyTransfer: MoneyTransfer,
	MortgageLoan: MortgageLoan,
	Mosque: Mosque,
	Motel: Motel,
	Motorcycle: Motorcycle,
	MotorcycleDealer: MotorcycleDealer,
	MotorcycleRepair: MotorcycleRepair,
	MotorizedBicycle: MotorizedBicycle,
	Mountain: Mountain,
	MoveAction: MoveAction,
	Movie: Movie,
	MovieClip: MovieClip,
	MovieRentalStore: MovieRentalStore,
	MovieSeries: MovieSeries,
	MovieTheater: MovieTheater,
	MovingCompany: MovingCompany,
	Muscle: Muscle,
	Museum: Museum,
	MusicAlbum: MusicAlbum,
	MusicAlbumProductionType: MusicAlbumProductionType,
	MusicAlbumReleaseType: MusicAlbumReleaseType,
	MusicComposition: MusicComposition,
	MusicEvent: MusicEvent,
	MusicGroup: MusicGroup,
	MusicPlaylist: MusicPlaylist,
	MusicRecording: MusicRecording,
	MusicRelease: MusicRelease,
	MusicReleaseFormatType: MusicReleaseFormatType,
	MusicStore: MusicStore,
	MusicVenue: MusicVenue,
	MusicVideoObject: MusicVideoObject,
	NGO: NGO,
	NLNonprofitType: NLNonprofitType,
	NailSalon: NailSalon,
	Nerve: Nerve,
	NewsArticle: NewsArticle,
	NewsMediaOrganization: NewsMediaOrganization,
	Newspaper: Newspaper,
	NightClub: NightClub,
	NonprofitType: NonprofitType,
	Notary: Notary,
	NoteDigitalDocument: NoteDigitalDocument,
	Number__workaround: Number__workaround,
	NutritionInformation: NutritionInformation,
	Observation: Observation,
	Occupation: Occupation,
	OccupationalExperienceRequirements: OccupationalExperienceRequirements,
	OccupationalTherapy: OccupationalTherapy,
	OceanBodyOfWater: OceanBodyOfWater,
	Offer: Offer,
	OfferCatalog: OfferCatalog,
	OfferForLease: OfferForLease,
	OfferForPurchase: OfferForPurchase,
	OfferItemCondition: OfferItemCondition,
	OfferShippingDetails: OfferShippingDetails,
	OfficeEquipmentStore: OfficeEquipmentStore,
	OnDemandEvent: OnDemandEvent,
	OnlineBusiness: OnlineBusiness,
	OnlineStore: OnlineStore,
	OpeningHoursSpecification: OpeningHoursSpecification,
	OpinionNewsArticle: OpinionNewsArticle,
	Optician: Optician,
	Order: Order,
	OrderAction: OrderAction,
	OrderItem: OrderItem,
	OrderStatus: OrderStatus,
	Organization: Organization,
	OrganizationRole: OrganizationRole,
	OrganizeAction: OrganizeAction,
	OutletStore: OutletStore,
	OwnershipInfo: OwnershipInfo,
	PaintAction: PaintAction,
	Painting: Painting,
	PalliativeProcedure: PalliativeProcedure,
	ParcelDelivery: ParcelDelivery,
	ParentAudience: ParentAudience,
	Park: Park,
	ParkingFacility: ParkingFacility,
	PathologyTest: PathologyTest,
	Patient: Patient,
	PawnShop: PawnShop,
	PayAction: PayAction,
	PaymentCard: PaymentCard,
	PaymentChargeSpecification: PaymentChargeSpecification,
	PaymentMethod: PaymentMethod,
	PaymentService: PaymentService,
	PaymentStatusType: PaymentStatusType,
	PeopleAudience: PeopleAudience,
	PerformAction: PerformAction,
	PerformanceRole: PerformanceRole,
	PerformingArtsTheater: PerformingArtsTheater,
	PerformingGroup: PerformingGroup,
	Periodical: Periodical,
	Permit: Permit,
	Person: Person,
	PetStore: PetStore,
	Pharmacy: Pharmacy,
	Photograph: Photograph,
	PhotographAction: PhotographAction,
	PhysicalActivity: PhysicalActivity,
	PhysicalActivityCategory: PhysicalActivityCategory,
	PhysicalExam: PhysicalExam,
	PhysicalTherapy: PhysicalTherapy,
	Physician: Physician,
	Place: Place,
	PlaceOfWorship: PlaceOfWorship,
	PlanAction: PlanAction,
	Play: Play,
	PlayAction: PlayAction,
	PlayGameAction: PlayGameAction,
	Playground: Playground,
	Plumber: Plumber,
	PodcastEpisode: PodcastEpisode,
	PodcastSeason: PodcastSeason,
	PodcastSeries: PodcastSeries,
	PoliceStation: PoliceStation,
	PoliticalParty: PoliticalParty,
	Pond: Pond,
	PostOffice: PostOffice,
	PostalAddress: PostalAddress,
	PostalCodeRangeSpecification: PostalCodeRangeSpecification,
	Poster: Poster,
	PreOrderAction: PreOrderAction,
	PrependAction: PrependAction,
	Preschool: Preschool,
	PresentationDigitalDocument: PresentationDigitalDocument,
	PreventionIndication: PreventionIndication,
	PriceComponentTypeEnumeration: PriceComponentTypeEnumeration,
	PriceSpecification: PriceSpecification,
	PriceTypeEnumeration: PriceTypeEnumeration,
	Product: Product,
	ProductCollection: ProductCollection,
	ProductGroup: ProductGroup,
	ProductModel: ProductModel,
	ProductReturnEnumeration: ProductReturnEnumeration,
	ProductReturnPolicy: ProductReturnPolicy,
	ProfessionalService: ProfessionalService,
	ProfilePage: ProfilePage,
	ProgramMembership: ProgramMembership,
	Project: Project,
	PronounceableText: PronounceableText,
	Property: Property,
	PropertyValue: PropertyValue,
	PropertyValueSpecification: PropertyValueSpecification,
	Protein: Protein,
	PsychologicalTreatment: PsychologicalTreatment,
	PublicSwimmingPool: PublicSwimmingPool,
	PublicToilet: PublicToilet,
	PublicationEvent: PublicationEvent,
	PublicationIssue: PublicationIssue,
	PublicationVolume: PublicationVolume,
	QAPage: QAPage,
	QualitativeValue: QualitativeValue,
	QuantitativeValue: QuantitativeValue,
	QuantitativeValueDistribution: QuantitativeValueDistribution,
	Quantity: Quantity,
	Question: Question,
	Quiz: Quiz,
	Quotation: Quotation,
	QuoteAction: QuoteAction,
	RVPark: RVPark,
	RadiationTherapy: RadiationTherapy,
	RadioBroadcastService: RadioBroadcastService,
	RadioChannel: RadioChannel,
	RadioClip: RadioClip,
	RadioEpisode: RadioEpisode,
	RadioSeason: RadioSeason,
	RadioSeries: RadioSeries,
	RadioStation: RadioStation,
	Rating: Rating,
	ReactAction: ReactAction,
	ReadAction: ReadAction,
	RealEstateAgent: RealEstateAgent,
	RealEstateListing: RealEstateListing,
	ReceiveAction: ReceiveAction,
	Recipe: Recipe,
	Recommendation: Recommendation,
	RecommendedDoseSchedule: RecommendedDoseSchedule,
	RecyclingCenter: RecyclingCenter,
	RefundTypeEnumeration: RefundTypeEnumeration,
	RegisterAction: RegisterAction,
	RejectAction: RejectAction,
	RentAction: RentAction,
	RentalCarReservation: RentalCarReservation,
	RepaymentSpecification: RepaymentSpecification,
	ReplaceAction: ReplaceAction,
	ReplyAction: ReplyAction,
	Report: Report,
	ReportageNewsArticle: ReportageNewsArticle,
	ReportedDoseSchedule: ReportedDoseSchedule,
	ResearchOrganization: ResearchOrganization,
	ResearchProject: ResearchProject,
	Researcher: Researcher,
	Reservation: Reservation,
	ReservationPackage: ReservationPackage,
	ReservationStatusType: ReservationStatusType,
	ReserveAction: ReserveAction,
	Reservoir: Reservoir,
	Residence: Residence,
	Resort: Resort,
	Restaurant: Restaurant,
	RestrictedDiet: RestrictedDiet,
	ResumeAction: ResumeAction,
	ReturnAction: ReturnAction,
	ReturnFeesEnumeration: ReturnFeesEnumeration,
	ReturnLabelSourceEnumeration: ReturnLabelSourceEnumeration,
	ReturnMethodEnumeration: ReturnMethodEnumeration,
	Review: Review,
	ReviewAction: ReviewAction,
	ReviewNewsArticle: ReviewNewsArticle,
	RiverBodyOfWater: RiverBodyOfWater,
	Role: Role,
	RoofingContractor: RoofingContractor,
	Room: Room,
	RsvpAction: RsvpAction,
	RsvpResponseType: RsvpResponseType,
	SaleEvent: SaleEvent,
	SatiricalArticle: SatiricalArticle,
	Schedule: Schedule,
	ScheduleAction: ScheduleAction,
	ScholarlyArticle: ScholarlyArticle,
	School: School,
	SchoolDistrict: SchoolDistrict,
	ScreeningEvent: ScreeningEvent,
	Sculpture: Sculpture,
	SeaBodyOfWater: SeaBodyOfWater,
	SearchAction: SearchAction,
	SearchRescueOrganization: SearchRescueOrganization,
	SearchResultsPage: SearchResultsPage,
	Season: Season,
	Seat: Seat,
	SeekToAction: SeekToAction,
	SelfStorage: SelfStorage,
	SellAction: SellAction,
	SendAction: SendAction,
	Series: Series,
	Service: Service,
	ServiceChannel: ServiceChannel,
	ShareAction: ShareAction,
	SheetMusic: SheetMusic,
	ShippingDeliveryTime: ShippingDeliveryTime,
	ShippingRateSettings: ShippingRateSettings,
	ShoeStore: ShoeStore,
	ShoppingCenter: ShoppingCenter,
	ShortStory: ShortStory,
	SingleFamilyResidence: SingleFamilyResidence,
	SiteNavigationElement: SiteNavigationElement,
	SizeGroupEnumeration: SizeGroupEnumeration,
	SizeSpecification: SizeSpecification,
	SizeSystemEnumeration: SizeSystemEnumeration,
	SkiResort: SkiResort,
	SocialEvent: SocialEvent,
	SocialMediaPosting: SocialMediaPosting,
	SoftwareApplication: SoftwareApplication,
	SoftwareSourceCode: SoftwareSourceCode,
	SolveMathAction: SolveMathAction,
	SomeProducts: SomeProducts,
	SpeakableSpecification: SpeakableSpecification,
	SpecialAnnouncement: SpecialAnnouncement,
	Specialty: Specialty,
	SportingGoodsStore: SportingGoodsStore,
	SportsActivityLocation: SportsActivityLocation,
	SportsClub: SportsClub,
	SportsEvent: SportsEvent,
	SportsOrganization: SportsOrganization,
	SportsTeam: SportsTeam,
	SpreadsheetDigitalDocument: SpreadsheetDigitalDocument,
	StadiumOrArena: StadiumOrArena,
	State: State,
	Statement: Statement,
	StatisticalPopulation: StatisticalPopulation,
	StatisticalVariable: StatisticalVariable,
	StatusEnumeration: StatusEnumeration,
	SteeringPositionValue: SteeringPositionValue,
	Store: Store,
	StructuredValue: StructuredValue,
	StupidType: StupidType,
	SubscribeAction: SubscribeAction,
	Substance: Substance,
	SubwayStation: SubwayStation,
	Suite: Suite,
	SuperficialAnatomy: SuperficialAnatomy,
	SurgicalProcedure: SurgicalProcedure,
	SuspendAction: SuspendAction,
	Syllabus: Syllabus,
	Synagogue: Synagogue,
	TVClip: TVClip,
	TVEpisode: TVEpisode,
	TVSeason: TVSeason,
	TVSeries: TVSeries,
	Table: Table,
	TakeAction: TakeAction,
	TattooParlor: TattooParlor,
	Taxi: Taxi,
	TaxiReservation: TaxiReservation,
	TaxiService: TaxiService,
	TaxiStand: TaxiStand,
	Taxon: Taxon,
	TechArticle: TechArticle,
	TelevisionChannel: TelevisionChannel,
	TelevisionStation: TelevisionStation,
	TennisComplex: TennisComplex,
	Text: Text,
	TextDigitalDocument: TextDigitalDocument,
	TextObject: TextObject,
	TheaterEvent: TheaterEvent,
	TheaterGroup: TheaterGroup,
	TherapeuticProcedure: TherapeuticProcedure,
	Thesis: Thesis,
	Thing: Thing,
	Ticket: Ticket,
	TieAction: TieAction,
	Time: Time,
	TipAction: TipAction,
	TireShop: TireShop,
	TouristAttraction: TouristAttraction,
	TouristDestination: TouristDestination,
	TouristInformationCenter: TouristInformationCenter,
	TouristTrip: TouristTrip,
	ToyStore: ToyStore,
	TrackAction: TrackAction,
	TradeAction: TradeAction,
	TrainReservation: TrainReservation,
	TrainStation: TrainStation,
	TrainTrip: TrainTrip,
	TransferAction: TransferAction,
	TravelAction: TravelAction,
	TravelAgency: TravelAgency,
	TreatmentIndication: TreatmentIndication,
	Trip: Trip,
	TypeAndQuantityNode: TypeAndQuantityNode,
	UKNonprofitType: UKNonprofitType,
	URL: URL,
	USNonprofitType: USNonprofitType,
	UnRegisterAction: UnRegisterAction,
	UnitPriceSpecification: UnitPriceSpecification,
	UpdateAction: UpdateAction,
	UseAction: UseAction,
	UserBlocks: UserBlocks,
	UserCheckins: UserCheckins,
	UserComments: UserComments,
	UserDownloads: UserDownloads,
	UserInteraction: UserInteraction,
	UserLikes: UserLikes,
	UserPageVisits: UserPageVisits,
	UserPlays: UserPlays,
	UserPlusOnes: UserPlusOnes,
	UserReview: UserReview,
	UserTweets: UserTweets,
	VacationRental: VacationRental,
	Vehicle: Vehicle,
	Vein: Vein,
	Vessel: Vessel,
	VeterinaryCare: VeterinaryCare,
	VideoGallery: VideoGallery,
	VideoGame: VideoGame,
	VideoGameClip: VideoGameClip,
	VideoGameSeries: VideoGameSeries,
	VideoObject: VideoObject,
	VideoObjectSnapshot: VideoObjectSnapshot,
	ViewAction: ViewAction,
	VirtualLocation: VirtualLocation,
	VisualArtsEvent: VisualArtsEvent,
	VisualArtwork: VisualArtwork,
	VitalSign: VitalSign,
	Volcano: Volcano,
	VoteAction: VoteAction,
	WPAdBlock: WPAdBlock,
	WPFooter: WPFooter,
	WPHeader: WPHeader,
	WPSideBar: WPSideBar,
	WantAction: WantAction,
	WarrantyPromise: WarrantyPromise,
	WarrantyScope: WarrantyScope,
	WatchAction: WatchAction,
	Waterfall: Waterfall,
	WearAction: WearAction,
	WearableMeasurementTypeEnumeration: WearableMeasurementTypeEnumeration,
	WearableSizeGroupEnumeration: WearableSizeGroupEnumeration,
	WearableSizeSystemEnumeration: WearableSizeSystemEnumeration,
	WebAPI: WebAPI,
	WebApplication: WebApplication,
	WebContent: WebContent,
	WebPage: WebPage,
	WebPageElement: WebPageElement,
	WebSite: WebSite,
	WholesaleStore: WholesaleStore,
	WinAction: WinAction,
	Winery: Winery,
	WorkBasedProgram: WorkBasedProgram,
	WorkersUnion: WorkersUnion,
	WriteAction: WriteAction,
	XPathType: XPathType,
	Zoo: Zoo,
	abridged: abridged,
	abstract: abstract,
	accelerationTime: accelerationTime,
	acceptedAnswer: acceptedAnswer,
	acceptedOffer: acceptedOffer,
	acceptedPaymentMethod: acceptedPaymentMethod,
	acceptsReservations: acceptsReservations,
	accessCode: accessCode,
	accessMode: accessMode,
	accessModeSufficient: accessModeSufficient,
	accessibilityAPI: accessibilityAPI,
	accessibilityControl: accessibilityControl,
	accessibilityFeature: accessibilityFeature,
	accessibilityHazard: accessibilityHazard,
	accessibilitySummary: accessibilitySummary,
	accommodationCategory: accommodationCategory,
	accommodationFloorPlan: accommodationFloorPlan,
	accountId: accountId,
	accountMinimumInflow: accountMinimumInflow,
	accountOverdraftLimit: accountOverdraftLimit,
	accountablePerson: accountablePerson,
	acquireLicensePage: acquireLicensePage,
	acquiredFrom: acquiredFrom,
	acrissCode: acrissCode,
	actionAccessibilityRequirement: actionAccessibilityRequirement,
	actionPlatform: actionPlatform,
	actionStatus: actionStatus,
	actionableFeedbackPolicy: actionableFeedbackPolicy,
	activeIngredient: activeIngredient,
	activityDuration: activityDuration,
	activityFrequency: activityFrequency,
	actors: actors,
	addOn: addOn,
	additionalName: additionalName,
	additionalNumberOfGuests: additionalNumberOfGuests,
	additionalProperty: additionalProperty,
	additionalType: additionalType,
	additionalVariable: additionalVariable,
	address: address,
	addressCountry: addressCountry,
	addressLocality: addressLocality,
	addressRegion: addressRegion,
	administrationRoute: administrationRoute,
	advanceBookingRequirement: advanceBookingRequirement,
	adverseOutcome: adverseOutcome,
	affectedBy: affectedBy,
	affiliation: affiliation,
	afterMedia: afterMedia,
	agent: agent,
	aggregateRating: aggregateRating,
	aircraft: aircraft,
	albumProductionType: albumProductionType,
	albumReleaseType: albumReleaseType,
	albums: albums,
	alcoholWarning: alcoholWarning,
	algorithm: algorithm,
	alignmentType: alignmentType,
	alternativeHeadline: alternativeHeadline,
	alternativeOf: alternativeOf,
	amenityFeature: amenityFeature,
	amount: amount,
	amountOfThisGood: amountOfThisGood,
	announcementLocation: announcementLocation,
	annualPercentageRate: annualPercentageRate,
	answerCount: answerCount,
	answerExplanation: answerExplanation,
	antagonist: antagonist,
	appearance: appearance,
	applicableCountry: applicableCountry,
	applicableLocation: applicableLocation,
	applicantLocationRequirements: applicantLocationRequirements,
	application: application,
	applicationCategory: applicationCategory,
	applicationContact: applicationContact,
	applicationDeadline: applicationDeadline,
	applicationStartDate: applicationStartDate,
	applicationSubCategory: applicationSubCategory,
	applicationSuite: applicationSuite,
	appliesToDeliveryMethod: appliesToDeliveryMethod,
	appliesToPaymentMethod: appliesToPaymentMethod,
	archivedAt: archivedAt,
	area: area,
	arrivalAirport: arrivalAirport,
	arrivalBoatTerminal: arrivalBoatTerminal,
	arrivalBusStop: arrivalBusStop,
	arrivalGate: arrivalGate,
	arrivalPlatform: arrivalPlatform,
	arrivalStation: arrivalStation,
	arrivalTerminal: arrivalTerminal,
	arrivalTime: arrivalTime,
	artEdition: artEdition,
	artMedium: artMedium,
	artform: artform,
	articleBody: articleBody,
	articleSection: articleSection,
	artist: artist,
	asin: asin,
	aspect: aspect,
	assembly: assembly,
	assemblyVersion: assemblyVersion,
	assesses: assesses,
	associatedAnatomy: associatedAnatomy,
	associatedArticle: associatedArticle,
	associatedClaimReview: associatedClaimReview,
	associatedDisease: associatedDisease,
	associatedMedia: associatedMedia,
	associatedMediaReview: associatedMediaReview,
	associatedPathophysiology: associatedPathophysiology,
	athlete: athlete,
	attendees: attendees,
	audienceType: audienceType,
	audio: audio,
	authenticator: authenticator,
	author: author,
	availability: availability,
	availabilityEnds: availabilityEnds,
	availabilityStarts: availabilityStarts,
	availableAtOrFrom: availableAtOrFrom,
	availableChannel: availableChannel,
	availableDeliveryMethod: availableDeliveryMethod,
	availableFrom: availableFrom,
	availableIn: availableIn,
	availableLanguage: availableLanguage,
	availableService: availableService,
	availableStrength: availableStrength,
	availableTest: availableTest,
	availableThrough: availableThrough,
	awards: awards,
	awayTeam: awayTeam,
	backstory: backstory,
	bankAccountType: bankAccountType,
	baseSalary: baseSalary,
	bccRecipient: bccRecipient,
	bed: bed,
	beforeMedia: beforeMedia,
	beneficiaryBank: beneficiaryBank,
	benefits: benefits,
	benefitsSummaryUrl: benefitsSummaryUrl,
	bestRating: bestRating,
	billingAddress: billingAddress,
	billingDuration: billingDuration,
	billingIncrement: billingIncrement,
	billingPeriod: billingPeriod,
	billingStart: billingStart,
	bioChemInteraction: bioChemInteraction,
	bioChemSimilarity: bioChemSimilarity,
	biologicalRole: biologicalRole,
	biomechnicalClass: biomechnicalClass,
	birthDate: birthDate,
	birthPlace: birthPlace,
	bitrate: bitrate,
	blogPosts: blogPosts,
	bloodSupply: bloodSupply,
	boardingGroup: boardingGroup,
	boardingPolicy: boardingPolicy,
	bodyLocation: bodyLocation,
	bodyType: bodyType,
	bookEdition: bookEdition,
	bookFormat: bookFormat,
	bookingAgent: bookingAgent,
	bookingTime: bookingTime,
	borrower: borrower,
	box: box,
	branch: branch,
	branchCode: branchCode,
	branchOf: branchOf,
	brand: brand,
	breadcrumb: breadcrumb,
	breastfeedingWarning: breastfeedingWarning,
	broadcastAffiliateOf: broadcastAffiliateOf,
	broadcastChannelId: broadcastChannelId,
	broadcastDisplayName: broadcastDisplayName,
	broadcastFrequency: broadcastFrequency,
	broadcastFrequencyValue: broadcastFrequencyValue,
	broadcastOfEvent: broadcastOfEvent,
	broadcastServiceTier: broadcastServiceTier,
	broadcastSignalModulation: broadcastSignalModulation,
	broadcastSubChannel: broadcastSubChannel,
	broadcastTimezone: broadcastTimezone,
	broadcaster: broadcaster,
	browserRequirements: browserRequirements,
	busName: busName,
	busNumber: busNumber,
	businessDays: businessDays,
	businessFunction: businessFunction,
	buyer: buyer,
	byArtist: byArtist,
	byDay: byDay,
	byMonth: byMonth,
	byMonthDay: byMonthDay,
	byMonthWeek: byMonthWeek,
	callSign: callSign,
	calories: calories,
	candidate: candidate,
	carbohydrateContent: carbohydrateContent,
	cargoVolume: cargoVolume,
	carrier: carrier,
	carrierRequirements: carrierRequirements,
	cashBack: cashBack,
	catalog: catalog,
	catalogNumber: catalogNumber,
	causeOf: causeOf,
	ccRecipient: ccRecipient,
	character: character,
	characterAttribute: characterAttribute,
	characterName: characterName,
	cheatCode: cheatCode,
	checkinTime: checkinTime,
	checkoutPageURLTemplate: checkoutPageURLTemplate,
	checkoutTime: checkoutTime,
	chemicalComposition: chemicalComposition,
	chemicalRole: chemicalRole,
	childMaxAge: childMaxAge,
	childMinAge: childMinAge,
	children: children,
	cholesterolContent: cholesterolContent,
	circle: circle,
	citation: citation,
	claimInterpreter: claimInterpreter,
	claimReviewed: claimReviewed,
	clincalPharmacology: clincalPharmacology,
	clipNumber: clipNumber,
	closes: closes,
	coach: coach,
	code: code,
	codeRepository: codeRepository,
	codeValue: codeValue,
	codingSystem: codingSystem,
	colleagues: colleagues,
	collection: collection,
	collectionSize: collectionSize,
	color: color,
	colorist: colorist,
	comment: comment,
	commentCount: commentCount,
	commentText: commentText,
	commentTime: commentTime,
	competencyRequired: competencyRequired,
	composer: composer,
	comprisedOf: comprisedOf,
	conditionsOfAccess: conditionsOfAccess,
	confirmationNumber: confirmationNumber,
	connectedTo: connectedTo,
	constraintProperty: constraintProperty,
	contactOption: contactOption,
	contactPoints: contactPoints,
	contactType: contactType,
	contactlessPayment: contactlessPayment,
	containedIn: containedIn,
	contentRating: contentRating,
	contentReferenceTime: contentReferenceTime,
	contentSize: contentSize,
	contentType: contentType,
	contentUrl: contentUrl,
	contraindication: contraindication,
	contributor: contributor,
	cookTime: cookTime,
	cookingMethod: cookingMethod,
	copyrightHolder: copyrightHolder,
	copyrightNotice: copyrightNotice,
	copyrightYear: copyrightYear,
	correction: correction,
	correctionsPolicy: correctionsPolicy,
	costCategory: costCategory,
	costCurrency: costCurrency,
	costOrigin: costOrigin,
	costPerUnit: costPerUnit,
	countriesNotSupported: countriesNotSupported,
	countriesSupported: countriesSupported,
	countryOfAssembly: countryOfAssembly,
	countryOfLastProcessing: countryOfLastProcessing,
	countryOfOrigin: countryOfOrigin,
	course: course,
	courseCode: courseCode,
	courseMode: courseMode,
	coursePrerequisites: coursePrerequisites,
	courseSchedule: courseSchedule,
	courseWorkload: courseWorkload,
	coverageEndTime: coverageEndTime,
	coverageStartTime: coverageStartTime,
	creativeWorkStatus: creativeWorkStatus,
	credentialCategory: credentialCategory,
	creditText: creditText,
	creditedTo: creditedTo,
	cssSelector: cssSelector,
	currenciesAccepted: currenciesAccepted,
	currency: currency,
	currentExchangeRate: currentExchangeRate,
	customer: customer,
	customerRemorseReturnFees: customerRemorseReturnFees,
	customerRemorseReturnLabelSource: customerRemorseReturnLabelSource,
	customerRemorseReturnShippingFeesAmount: customerRemorseReturnShippingFeesAmount,
	cutoffTime: cutoffTime,
	cvdCollectionDate: cvdCollectionDate,
	cvdFacilityCounty: cvdFacilityCounty,
	cvdFacilityId: cvdFacilityId,
	cvdNumBeds: cvdNumBeds,
	cvdNumBedsOcc: cvdNumBedsOcc,
	cvdNumC19Died: cvdNumC19Died,
	cvdNumC19HOPats: cvdNumC19HOPats,
	cvdNumC19HospPats: cvdNumC19HospPats,
	cvdNumC19MechVentPats: cvdNumC19MechVentPats,
	cvdNumC19OFMechVentPats: cvdNumC19OFMechVentPats,
	cvdNumC19OverflowPats: cvdNumC19OverflowPats,
	cvdNumICUBeds: cvdNumICUBeds,
	cvdNumICUBedsOcc: cvdNumICUBedsOcc,
	cvdNumTotBeds: cvdNumTotBeds,
	cvdNumVent: cvdNumVent,
	cvdNumVentUse: cvdNumVentUse,
	dataFeedElement: dataFeedElement,
	datasetTimeInterval: datasetTimeInterval,
	dateDeleted: dateDeleted,
	dateIssued: dateIssued,
	dateModified: dateModified,
	datePosted: datePosted,
	datePublished: datePublished,
	dateRead: dateRead,
	dateReceived: dateReceived,
	dateSent: dateSent,
	dateVehicleFirstRegistered: dateVehicleFirstRegistered,
	dateline: dateline,
	dayOfWeek: dayOfWeek,
	deathDate: deathDate,
	deathPlace: deathPlace,
	defaultValue: defaultValue,
	deliveryAddress: deliveryAddress,
	deliveryLeadTime: deliveryLeadTime,
	deliveryMethod: deliveryMethod,
	deliveryStatus: deliveryStatus,
	deliveryTime: deliveryTime,
	department: department,
	departureAirport: departureAirport,
	departureBoatTerminal: departureBoatTerminal,
	departureBusStop: departureBusStop,
	departureGate: departureGate,
	departurePlatform: departurePlatform,
	departureStation: departureStation,
	departureTerminal: departureTerminal,
	departureTime: departureTime,
	dependencies: dependencies,
	depth: depth,
	device: device,
	diagnosis: diagnosis,
	diagram: diagram,
	diet: diet,
	dietFeatures: dietFeatures,
	differentialDiagnosis: differentialDiagnosis,
	directApply: directApply,
	directors: directors,
	disambiguatingDescription: disambiguatingDescription,
	discount: discount,
	discountCode: discountCode,
	discountCurrency: discountCurrency,
	discusses: discusses,
	discussionUrl: discussionUrl,
	diseasePreventionInfo: diseasePreventionInfo,
	diseaseSpreadStatistics: diseaseSpreadStatistics,
	dissolutionDate: dissolutionDate,
	distance: distance,
	distinguishingSign: distinguishingSign,
	distribution: distribution,
	diversityPolicy: diversityPolicy,
	diversityStaffingReport: diversityStaffingReport,
	documentation: documentation,
	doesNotShip: doesNotShip,
	domainIncludes: domainIncludes,
	domiciledMortgage: domiciledMortgage,
	doorTime: doorTime,
	dosageForm: dosageForm,
	doseSchedule: doseSchedule,
	doseUnit: doseUnit,
	doseValue: doseValue,
	downPayment: downPayment,
	downloadUrl: downloadUrl,
	downvoteCount: downvoteCount,
	drainsTo: drainsTo,
	driveWheelConfiguration: driveWheelConfiguration,
	dropoffLocation: dropoffLocation,
	dropoffTime: dropoffTime,
	drug: drug,
	drugClass: drugClass,
	drugUnit: drugUnit,
	duns: duns,
	duplicateTherapy: duplicateTherapy,
	durationOfWarranty: durationOfWarranty,
	duringMedia: duringMedia,
	earlyPrepaymentPenalty: earlyPrepaymentPenalty,
	editEIDR: editEIDR,
	editor: editor,
	eduQuestionType: eduQuestionType,
	educationRequirements: educationRequirements,
	educationalAlignment: educationalAlignment,
	educationalCredentialAwarded: educationalCredentialAwarded,
	educationalFramework: educationalFramework,
	educationalLevel: educationalLevel,
	educationalProgramMode: educationalProgramMode,
	educationalRole: educationalRole,
	educationalUse: educationalUse,
	elevation: elevation,
	eligibilityToWorkRequirement: eligibilityToWorkRequirement,
	eligibleCustomerType: eligibleCustomerType,
	eligibleDuration: eligibleDuration,
	eligibleQuantity: eligibleQuantity,
	eligibleRegion: eligibleRegion,
	eligibleTransactionVolume: eligibleTransactionVolume,
	email: email,
	embedUrl: embedUrl,
	embeddedTextCaption: embeddedTextCaption,
	emissionsCO2: emissionsCO2,
	employees: employees,
	employerOverview: employerOverview,
	employmentType: employmentType,
	employmentUnit: employmentUnit,
	encodingType: encodingType,
	encodings: encodings,
	endDate: endDate,
	endOffset: endOffset,
	endTime: endTime,
	endorsee: endorsee,
	endorsers: endorsers,
	energyEfficiencyScaleMax: energyEfficiencyScaleMax,
	energyEfficiencyScaleMin: energyEfficiencyScaleMin,
	engineDisplacement: engineDisplacement,
	enginePower: enginePower,
	engineType: engineType,
	entertainmentBusiness: entertainmentBusiness,
	epidemiology: epidemiology,
	episodeNumber: episodeNumber,
	episodes: episodes,
	equal: equal,
	error: error,
	estimatedCost: estimatedCost,
	estimatedFlightDuration: estimatedFlightDuration,
	estimatedSalary: estimatedSalary,
	estimatesRiskOf: estimatesRiskOf,
	ethicsPolicy: ethicsPolicy,
	eventAttendanceMode: eventAttendanceMode,
	eventSchedule: eventSchedule,
	eventStatus: eventStatus,
	events: events,
	evidenceLevel: evidenceLevel,
	evidenceOrigin: evidenceOrigin,
	exceptDate: exceptDate,
	exchangeRateSpread: exchangeRateSpread,
	exercisePlan: exercisePlan,
	exerciseRelatedDiet: exerciseRelatedDiet,
	exerciseType: exerciseType,
	exifData: exifData,
	expectedArrivalFrom: expectedArrivalFrom,
	expectedArrivalUntil: expectedArrivalUntil,
	expectedPrognosis: expectedPrognosis,
	expectsAcceptanceOf: expectsAcceptanceOf,
	experienceInPlaceOfEducation: experienceInPlaceOfEducation,
	experienceRequirements: experienceRequirements,
	expertConsiderations: expertConsiderations,
	expires: expires,
	expressedIn: expressedIn,
	familyName: familyName,
	fatContent: fatContent,
	faxNumber: faxNumber,
	featureList: featureList,
	feesAndCommissionsSpecification: feesAndCommissionsSpecification,
	fiberContent: fiberContent,
	fileFormat: fileFormat,
	fileSize: fileSize,
	financialAidEligible: financialAidEligible,
	firstAppearance: firstAppearance,
	firstPerformance: firstPerformance,
	flightDistance: flightDistance,
	flightNumber: flightNumber,
	floorLevel: floorLevel,
	floorLimit: floorLimit,
	floorSize: floorSize,
	followee: followee,
	follows: follows,
	followup: followup,
	foodEstablishment: foodEstablishment,
	foodEvent: foodEvent,
	foodWarning: foodWarning,
	founders: founders,
	foundingDate: foundingDate,
	foundingLocation: foundingLocation,
	free: free,
	freeShippingThreshold: freeShippingThreshold,
	fromLocation: fromLocation,
	fuelCapacity: fuelCapacity,
	fuelConsumption: fuelConsumption,
	fuelEfficiency: fuelEfficiency,
	fuelType: fuelType,
	functionalClass: functionalClass,
	funder: funder,
	gameAvailabilityType: gameAvailabilityType,
	gameEdition: gameEdition,
	gameItem: gameItem,
	gameLocation: gameLocation,
	gamePlatform: gamePlatform,
	gameTip: gameTip,
	gender: gender,
	geo: geo,
	geoContains: geoContains,
	geoCoveredBy: geoCoveredBy,
	geoCovers: geoCovers,
	geoCrosses: geoCrosses,
	geoDisjoint: geoDisjoint,
	geoEquals: geoEquals,
	geoIntersects: geoIntersects,
	geoMidpoint: geoMidpoint,
	geoOverlaps: geoOverlaps,
	geoRadius: geoRadius,
	geoTouches: geoTouches,
	geoWithin: geoWithin,
	geographicArea: geographicArea,
	gettingTestedInfo: gettingTestedInfo,
	givenName: givenName,
	globalLocationNumber: globalLocationNumber,
	governmentBenefitsInfo: governmentBenefitsInfo,
	gracePeriod: gracePeriod,
	grantee: grantee,
	greater: greater,
	greaterOrEqual: greaterOrEqual,
	gtin12: gtin12,
	gtin13: gtin13,
	gtin14: gtin14,
	gtin8: gtin8,
	guideline: guideline,
	guidelineDate: guidelineDate,
	guidelineSubject: guidelineSubject,
	handlingTime: handlingTime,
	hasAdultConsideration: hasAdultConsideration,
	hasBioPolymerSequence: hasBioPolymerSequence,
	hasCategoryCode: hasCategoryCode,
	hasCourse: hasCourse,
	hasCourseInstance: hasCourseInstance,
	hasCredential: hasCredential,
	hasDeliveryMethod: hasDeliveryMethod,
	hasDigitalDocumentPermission: hasDigitalDocumentPermission,
	hasDriveThroughService: hasDriveThroughService,
	hasEnergyConsumptionDetails: hasEnergyConsumptionDetails,
	hasEnergyEfficiencyCategory: hasEnergyEfficiencyCategory,
	hasHealthAspect: hasHealthAspect,
	hasMeasurement: hasMeasurement,
	hasMenuItem: hasMenuItem,
	hasMenuSection: hasMenuSection,
	hasMolecularFunction: hasMolecularFunction,
	hasOccupation: hasOccupation,
	hasOfferCatalog: hasOfferCatalog,
	hasPOS: hasPOS,
	hasProductReturnPolicy: hasProductReturnPolicy,
	headline: headline,
	healthCondition: healthCondition,
	healthPlanCoinsuranceOption: healthPlanCoinsuranceOption,
	healthPlanCoinsuranceRate: healthPlanCoinsuranceRate,
	healthPlanCopay: healthPlanCopay,
	healthPlanCopayOption: healthPlanCopayOption,
	healthPlanCostSharing: healthPlanCostSharing,
	healthPlanDrugOption: healthPlanDrugOption,
	healthPlanDrugTier: healthPlanDrugTier,
	healthPlanId: healthPlanId,
	healthPlanMarketingUrl: healthPlanMarketingUrl,
	healthPlanNetworkId: healthPlanNetworkId,
	healthPlanNetworkTier: healthPlanNetworkTier,
	healthPlanPharmacyCategory: healthPlanPharmacyCategory,
	healthcareReportingData: healthcareReportingData,
	height: height,
	highPrice: highPrice,
	hiringOrganization: hiringOrganization,
	homeLocation: homeLocation,
	homeTeam: homeTeam,
	honorificPrefix: honorificPrefix,
	honorificSuffix: honorificSuffix,
	hospitalAffiliation: hospitalAffiliation,
	hostingOrganization: hostingOrganization,
	hoursAvailable: hoursAvailable,
	howPerformed: howPerformed,
	httpMethod: httpMethod,
	iataCode: iataCode,
	icaoCode: icaoCode,
	identifyingExam: identifyingExam,
	identifyingTest: identifyingTest,
	illustrator: illustrator,
	imagingTechnique: imagingTechnique,
	inAlbum: inAlbum,
	inBroadcastLineup: inBroadcastLineup,
	inChI: inChI,
	inChIKey: inChIKey,
	inCodeSet: inCodeSet,
	inPlaylist: inPlaylist,
	inProductGroupWithID: inProductGroupWithID,
	inStoreReturnsOffered: inStoreReturnsOffered,
	inSupportOf: inSupportOf,
	incentives: incentives,
	includedComposition: includedComposition,
	includedDataCatalog: includedDataCatalog,
	includedInHealthInsurancePlan: includedInHealthInsurancePlan,
	includedRiskFactor: includedRiskFactor,
	includesAttraction: includesAttraction,
	includesHealthPlanFormulary: includesHealthPlanFormulary,
	includesHealthPlanNetwork: includesHealthPlanNetwork,
	includesObject: includesObject,
	increasesRiskOf: increasesRiskOf,
	industry: industry,
	ineligibleRegion: ineligibleRegion,
	infectiousAgent: infectiousAgent,
	infectiousAgentClass: infectiousAgentClass,
	ingredients: ingredients,
	inker: inker,
	insertion: insertion,
	installUrl: installUrl,
	instructor: instructor,
	intensity: intensity,
	interactingDrug: interactingDrug,
	interactionCount: interactionCount,
	interactionService: interactionService,
	interactionType: interactionType,
	interactivityType: interactivityType,
	interestRate: interestRate,
	interpretedAsClaim: interpretedAsClaim,
	inventoryLevel: inventoryLevel,
	inverseOf: inverseOf,
	isAcceptingNewPatients: isAcceptingNewPatients,
	isAccessoryOrSparePartFor: isAccessoryOrSparePartFor,
	isAvailableGenerically: isAvailableGenerically,
	isBasedOnUrl: isBasedOnUrl,
	isConsumableFor: isConsumableFor,
	isFamilyFriendly: isFamilyFriendly,
	isGift: isGift,
	isInvolvedInBiologicalProcess: isInvolvedInBiologicalProcess,
	isLiveBroadcast: isLiveBroadcast,
	isLocatedInSubcellularLocation: isLocatedInSubcellularLocation,
	isPlanForApartment: isPlanForApartment,
	isProprietary: isProprietary,
	isRelatedTo: isRelatedTo,
	isResizable: isResizable,
	isSimilarTo: isSimilarTo,
	isUnlabelledFallback: isUnlabelledFallback,
	isbn: isbn,
	isicV4: isicV4,
	iso6523Code: iso6523Code,
	isrcCode: isrcCode,
	issn: issn,
	issueNumber: issueNumber,
	issuedBy: issuedBy,
	issuedThrough: issuedThrough,
	iswcCode: iswcCode,
	item: item,
	itemCondition: itemCondition,
	itemDefectReturnFees: itemDefectReturnFees,
	itemDefectReturnLabelSource: itemDefectReturnLabelSource,
	itemDefectReturnShippingFeesAmount: itemDefectReturnShippingFeesAmount,
	itemListElement: itemListElement,
	itemListOrder: itemListOrder,
	itemLocation: itemLocation,
	itemReviewed: itemReviewed,
	itemShipped: itemShipped,
	itinerary: itinerary,
	iupacName: iupacName,
	jobImmediateStart: jobImmediateStart,
	jobLocation: jobLocation,
	jobLocationType: jobLocationType,
	jobStartDate: jobStartDate,
	jobTitle: jobTitle,
	keywords: keywords,
	knownVehicleDamages: knownVehicleDamages,
	knows: knows,
	knowsAbout: knowsAbout,
	knowsLanguage: knowsLanguage,
	labelDetails: labelDetails,
	landlord: landlord,
	language: language,
	lastReviewed: lastReviewed,
	latitude: latitude,
	layoutImage: layoutImage,
	learningResourceType: learningResourceType,
	leaseLength: leaseLength,
	legalName: legalName,
	legalStatus: legalStatus,
	legislationChanges: legislationChanges,
	legislationConsolidates: legislationConsolidates,
	legislationDate: legislationDate,
	legislationDateVersion: legislationDateVersion,
	legislationIdentifier: legislationIdentifier,
	legislationJurisdiction: legislationJurisdiction,
	legislationLegalForce: legislationLegalForce,
	legislationLegalValue: legislationLegalValue,
	legislationPassedBy: legislationPassedBy,
	legislationResponsible: legislationResponsible,
	legislationTransposes: legislationTransposes,
	legislationType: legislationType,
	leiCode: leiCode,
	lender: lender,
	lesser: lesser,
	lesserOrEqual: lesserOrEqual,
	letterer: letterer,
	license: license,
	line: line,
	linkRelationship: linkRelationship,
	liveBlogUpdate: liveBlogUpdate,
	loanMortgageMandateAmount: loanMortgageMandateAmount,
	loanPaymentAmount: loanPaymentAmount,
	loanPaymentFrequency: loanPaymentFrequency,
	loanRepaymentForm: loanRepaymentForm,
	loanTerm: loanTerm,
	loanType: loanType,
	locationCreated: locationCreated,
	lodgingUnitDescription: lodgingUnitDescription,
	lodgingUnitType: lodgingUnitType,
	logo: logo,
	longitude: longitude,
	loser: loser,
	lowPrice: lowPrice,
	lyricist: lyricist,
	lyrics: lyrics,
	maintainer: maintainer,
	manufacturer: manufacturer,
	map: map,
	mapType: mapType,
	maps: maps,
	marginOfError: marginOfError,
	masthead: masthead,
	materialExtent: materialExtent,
	mathExpression: mathExpression,
	maxPrice: maxPrice,
	maxValue: maxValue,
	maximumAttendeeCapacity: maximumAttendeeCapacity,
	maximumEnrollment: maximumEnrollment,
	maximumIntake: maximumIntake,
	maximumPhysicalAttendeeCapacity: maximumPhysicalAttendeeCapacity,
	maximumVirtualAttendeeCapacity: maximumVirtualAttendeeCapacity,
	mealService: mealService,
	measuredProperty: measuredProperty,
	measurementDenominator: measurementDenominator,
	measurementMethod: measurementMethod,
	measurementQualifier: measurementQualifier,
	mechanismOfAction: mechanismOfAction,
	mediaAuthenticityCategory: mediaAuthenticityCategory,
	mediaItemAppearance: mediaItemAppearance,
	median: median,
	medicalAudience: medicalAudience,
	medicalSpecialty: medicalSpecialty,
	medicineSystem: medicineSystem,
	meetsEmissionStandard: meetsEmissionStandard,
	members: members,
	membershipNumber: membershipNumber,
	membershipPointsEarned: membershipPointsEarned,
	memoryRequirements: memoryRequirements,
	mentions: mentions,
	menu: menu,
	menuAddOn: menuAddOn,
	merchant: merchant,
	messageAttachment: messageAttachment,
	mileageFromOdometer: mileageFromOdometer,
	minPrice: minPrice,
	minValue: minValue,
	minimumPaymentDue: minimumPaymentDue,
	missionCoveragePrioritiesPolicy: missionCoveragePrioritiesPolicy,
	mobileUrl: mobileUrl,
	model: model,
	modelDate: modelDate,
	modifiedTime: modifiedTime,
	molecularFormula: molecularFormula,
	molecularWeight: molecularWeight,
	monoisotopicMolecularWeight: monoisotopicMolecularWeight,
	monthlyMinimumRepaymentAmount: monthlyMinimumRepaymentAmount,
	monthsOfExperience: monthsOfExperience,
	mpn: mpn,
	multipleValues: multipleValues,
	muscleAction: muscleAction,
	musicArrangement: musicArrangement,
	musicBy: musicBy,
	musicCompositionForm: musicCompositionForm,
	musicGroupMember: musicGroupMember,
	musicReleaseFormat: musicReleaseFormat,
	musicalKey: musicalKey,
	naics: naics,
	name: name,
	namedPosition: namedPosition,
	nationality: nationality,
	naturalProgression: naturalProgression,
	negativeNotes: negativeNotes,
	nerve: nerve,
	nerveMotor: nerveMotor,
	netWorth: netWorth,
	newsUpdatesAndGuidelines: newsUpdatesAndGuidelines,
	nextItem: nextItem,
	noBylinesPolicy: noBylinesPolicy,
	nonEqual: nonEqual,
	nonProprietaryName: nonProprietaryName,
	nonprofitStatus: nonprofitStatus,
	normalRange: normalRange,
	nsn: nsn,
	numAdults: numAdults,
	numChildren: numChildren,
	numConstraints: numConstraints,
	numTracks: numTracks,
	numberOfAccommodationUnits: numberOfAccommodationUnits,
	numberOfAirbags: numberOfAirbags,
	numberOfAvailableAccommodationUnits: numberOfAvailableAccommodationUnits,
	numberOfAxles: numberOfAxles,
	numberOfBathroomsTotal: numberOfBathroomsTotal,
	numberOfBedrooms: numberOfBedrooms,
	numberOfBeds: numberOfBeds,
	numberOfCredits: numberOfCredits,
	numberOfDoors: numberOfDoors,
	numberOfEmployees: numberOfEmployees,
	numberOfEpisodes: numberOfEpisodes,
	numberOfForwardGears: numberOfForwardGears,
	numberOfFullBathrooms: numberOfFullBathrooms,
	numberOfItems: numberOfItems,
	numberOfLoanPayments: numberOfLoanPayments,
	numberOfPages: numberOfPages,
	numberOfPartialBathrooms: numberOfPartialBathrooms,
	numberOfPlayers: numberOfPlayers,
	numberOfPreviousOwners: numberOfPreviousOwners,
	numberOfRooms: numberOfRooms,
	numberOfSeasons: numberOfSeasons,
	numberedPosition: numberedPosition,
	nutrition: nutrition,
	observationAbout: observationAbout,
	observationDate: observationDate,
	observationPeriod: observationPeriod,
	occupancy: occupancy,
	occupationLocation: occupationLocation,
	occupationalCategory: occupationalCategory,
	occupationalCredentialAwarded: occupationalCredentialAwarded,
	offerCount: offerCount,
	offersPrescriptionByMail: offersPrescriptionByMail,
	openingHours: openingHours,
	openingHoursSpecification: openingHoursSpecification,
	opens: opens,
	operatingSystem: operatingSystem,
	opponent: opponent,
	option: option,
	orderDate: orderDate,
	orderDelivery: orderDelivery,
	orderItemNumber: orderItemNumber,
	orderItemStatus: orderItemStatus,
	orderNumber: orderNumber,
	orderQuantity: orderQuantity,
	orderStatus: orderStatus,
	orderedItem: orderedItem,
	organizer: organizer,
	originAddress: originAddress,
	originalMediaContextDescription: originalMediaContextDescription,
	originalMediaLink: originalMediaLink,
	originatesFrom: originatesFrom,
	overdosage: overdosage,
	ownedFrom: ownedFrom,
	ownedThrough: ownedThrough,
	ownershipFundingInfo: ownershipFundingInfo,
	owns: owns,
	pageEnd: pageEnd,
	pageStart: pageStart,
	pagination: pagination,
	parentItem: parentItem,
	parentService: parentService,
	parents: parents,
	partOfEpisode: partOfEpisode,
	partOfInvoice: partOfInvoice,
	partOfOrder: partOfOrder,
	partOfSeason: partOfSeason,
	partOfSystem: partOfSystem,
	partOfTVSeries: partOfTVSeries,
	partySize: partySize,
	passengerPriorityStatus: passengerPriorityStatus,
	passengerSequenceNumber: passengerSequenceNumber,
	pathophysiology: pathophysiology,
	pattern: pattern,
	payload: payload,
	paymentAccepted: paymentAccepted,
	paymentDue: paymentDue,
	paymentMethod: paymentMethod,
	paymentMethodId: paymentMethodId,
	paymentStatus: paymentStatus,
	paymentUrl: paymentUrl,
	penciler: penciler,
	percentile10: percentile10,
	percentile25: percentile25,
	percentile75: percentile75,
	percentile90: percentile90,
	performerIn: performerIn,
	performers: performers,
	permissionType: permissionType,
	permissions: permissions,
	permitAudience: permitAudience,
	permittedUsage: permittedUsage,
	petsAllowed: petsAllowed,
	phoneticText: phoneticText,
	photos: photos,
	physicalRequirement: physicalRequirement,
	physiologicalBenefits: physiologicalBenefits,
	pickupLocation: pickupLocation,
	pickupTime: pickupTime,
	playMode: playMode,
	playerType: playerType,
	playersOnline: playersOnline,
	polygon: polygon,
	populationType: populationType,
	positiveNotes: positiveNotes,
	possibleComplication: possibleComplication,
	possibleTreatment: possibleTreatment,
	postOfficeBoxNumber: postOfficeBoxNumber,
	postOp: postOp,
	postalCode: postalCode,
	postalCodeBegin: postalCodeBegin,
	postalCodeEnd: postalCodeEnd,
	postalCodePrefix: postalCodePrefix,
	postalCodeRange: postalCodeRange,
	potentialAction: potentialAction,
	potentialUse: potentialUse,
	preOp: preOp,
	predecessorOf: predecessorOf,
	pregnancyCategory: pregnancyCategory,
	pregnancyWarning: pregnancyWarning,
	prepTime: prepTime,
	preparation: preparation,
	prescribingInfo: prescribingInfo,
	prescriptionStatus: prescriptionStatus,
	previousItem: previousItem,
	previousStartDate: previousStartDate,
	price: price,
	priceComponent: priceComponent,
	priceComponentType: priceComponentType,
	priceCurrency: priceCurrency,
	priceRange: priceRange,
	priceSpecification: priceSpecification,
	priceType: priceType,
	priceValidUntil: priceValidUntil,
	primaryImageOfPage: primaryImageOfPage,
	primaryPrevention: primaryPrevention,
	printColumn: printColumn,
	printEdition: printEdition,
	printPage: printPage,
	printSection: printSection,
	procedure: procedure,
	procedureType: procedureType,
	processingTime: processingTime,
	processorRequirements: processorRequirements,
	producer: producer,
	produces: produces,
	productGroupID: productGroupID,
	productID: productID,
	productReturnDays: productReturnDays,
	productReturnLink: productReturnLink,
	productSupported: productSupported,
	productionCompany: productionCompany,
	productionDate: productionDate,
	proficiencyLevel: proficiencyLevel,
	programMembershipUsed: programMembershipUsed,
	programName: programName,
	programPrerequisites: programPrerequisites,
	programType: programType,
	programmingLanguage: programmingLanguage,
	programmingModel: programmingModel,
	propertyID: propertyID,
	proprietaryName: proprietaryName,
	proteinContent: proteinContent,
	providerMobility: providerMobility,
	providesService: providesService,
	publicAccess: publicAccess,
	publicTransportClosuresInfo: publicTransportClosuresInfo,
	publication: publication,
	publicationType: publicationType,
	publishedBy: publishedBy,
	publishedOn: publishedOn,
	publisher: publisher,
	publisherImprint: publisherImprint,
	purchaseDate: purchaseDate,
	qualifications: qualifications,
	quarantineGuidelines: quarantineGuidelines,
	query: query,
	quest: quest,
	question: question,
	rangeIncludes: rangeIncludes,
	ratingCount: ratingCount,
	ratingExplanation: ratingExplanation,
	ratingValue: ratingValue,
	readBy: readBy,
	readonlyValue: readonlyValue,
	realEstateAgent: realEstateAgent,
	recipe: recipe,
	recipeCategory: recipeCategory,
	recipeCuisine: recipeCuisine,
	recipeInstructions: recipeInstructions,
	recipeYield: recipeYield,
	recognizedBy: recognizedBy,
	recognizingAuthority: recognizingAuthority,
	recommendationStrength: recommendationStrength,
	recommendedIntake: recommendedIntake,
	recordLabel: recordLabel,
	recourseLoan: recourseLoan,
	referenceQuantity: referenceQuantity,
	referencesOrder: referencesOrder,
	refundType: refundType,
	regionDrained: regionDrained,
	regionsAllowed: regionsAllowed,
	relatedAnatomy: relatedAnatomy,
	relatedCondition: relatedCondition,
	relatedDrug: relatedDrug,
	relatedLink: relatedLink,
	relatedStructure: relatedStructure,
	relatedTherapy: relatedTherapy,
	relatedTo: relatedTo,
	releaseDate: releaseDate,
	releaseNotes: releaseNotes,
	releasedEvent: releasedEvent,
	relevantOccupation: relevantOccupation,
	relevantSpecialty: relevantSpecialty,
	remainingAttendeeCapacity: remainingAttendeeCapacity,
	renegotiableLoan: renegotiableLoan,
	repeatCount: repeatCount,
	repeatFrequency: repeatFrequency,
	repetitions: repetitions,
	replacee: replacee,
	replacer: replacer,
	replyToUrl: replyToUrl,
	reportNumber: reportNumber,
	representativeOfPage: representativeOfPage,
	requiredCollateral: requiredCollateral,
	requiredGender: requiredGender,
	requiredMaxAge: requiredMaxAge,
	requiredMinAge: requiredMinAge,
	requiredQuantity: requiredQuantity,
	requirements: requirements,
	requiresSubscription: requiresSubscription,
	reservationFor: reservationFor,
	reservationId: reservationId,
	reservationStatus: reservationStatus,
	reservedTicket: reservedTicket,
	responsibilities: responsibilities,
	restPeriods: restPeriods,
	restockingFee: restockingFee,
	resultComment: resultComment,
	resultReview: resultReview,
	returnFees: returnFees,
	returnLabelSource: returnLabelSource,
	returnMethod: returnMethod,
	returnPolicyCategory: returnPolicyCategory,
	returnPolicyCountry: returnPolicyCountry,
	returnPolicySeasonalOverride: returnPolicySeasonalOverride,
	returnShippingFeesAmount: returnShippingFeesAmount,
	reviewAspect: reviewAspect,
	reviewBody: reviewBody,
	reviewCount: reviewCount,
	reviewRating: reviewRating,
	reviewedBy: reviewedBy,
	reviews: reviews,
	riskFactor: riskFactor,
	risks: risks,
	roofLoad: roofLoad,
	rsvpResponse: rsvpResponse,
	runsTo: runsTo,
	runtime: runtime,
	rxcui: rxcui,
	safetyConsideration: safetyConsideration,
	salaryCurrency: salaryCurrency,
	salaryUponCompletion: salaryUponCompletion,
	sameAs: sameAs,
	sampleType: sampleType,
	saturatedFatContent: saturatedFatContent,
	scheduleTimezone: scheduleTimezone,
	scheduledPaymentDate: scheduledPaymentDate,
	scheduledTime: scheduledTime,
	schemaVersion: schemaVersion,
	schoolClosuresInfo: schoolClosuresInfo,
	screenCount: screenCount,
	screenshot: screenshot,
	sdDatePublished: sdDatePublished,
	sdLicense: sdLicense,
	sdPublisher: sdPublisher,
	seasonNumber: seasonNumber,
	seasons: seasons,
	seatNumber: seatNumber,
	seatRow: seatRow,
	seatSection: seatSection,
	seatingCapacity: seatingCapacity,
	seatingType: seatingType,
	secondaryPrevention: secondaryPrevention,
	securityClearanceRequirement: securityClearanceRequirement,
	securityScreening: securityScreening,
	seeks: seeks,
	sender: sender,
	sensoryRequirement: sensoryRequirement,
	sensoryUnit: sensoryUnit,
	seriousAdverseOutcome: seriousAdverseOutcome,
	serverStatus: serverStatus,
	servesCuisine: servesCuisine,
	serviceAudience: serviceAudience,
	serviceLocation: serviceLocation,
	serviceOperator: serviceOperator,
	servicePhone: servicePhone,
	servicePostalAddress: servicePostalAddress,
	serviceSmsNumber: serviceSmsNumber,
	serviceType: serviceType,
	serviceUrl: serviceUrl,
	servingSize: servingSize,
	sha256: sha256,
	sharedContent: sharedContent,
	shippingDestination: shippingDestination,
	shippingDetails: shippingDetails,
	shippingLabel: shippingLabel,
	shippingOrigin: shippingOrigin,
	shippingRate: shippingRate,
	shippingSettingsLink: shippingSettingsLink,
	siblings: siblings,
	signDetected: signDetected,
	signOrSymptom: signOrSymptom,
	significance: significance,
	significantLinks: significantLinks,
	size: size,
	sizeGroup: sizeGroup,
	sizeSystem: sizeSystem,
	skills: skills,
	sku: sku,
	slogan: slogan,
	smiles: smiles,
	smokingAllowed: smokingAllowed,
	sodiumContent: sodiumContent,
	softwareAddOn: softwareAddOn,
	softwareHelp: softwareHelp,
	softwareVersion: softwareVersion,
	sourceOrganization: sourceOrganization,
	sourcedFrom: sourcedFrom,
	spatial: spatial,
	speakable: speakable,
	specialCommitments: specialCommitments,
	specialOpeningHoursSpecification: specialOpeningHoursSpecification,
	specialty: specialty,
	speechToTextMarkup: speechToTextMarkup,
	speed: speed,
	spokenByCharacter: spokenByCharacter,
	sport: sport,
	sportsActivityLocation: sportsActivityLocation,
	sportsEvent: sportsEvent,
	sportsTeam: sportsTeam,
	spouse: spouse,
	stage: stage,
	stageAsNumber: stageAsNumber,
	starRating: starRating,
	startDate: startDate,
	startOffset: startOffset,
	startTime: startTime,
	statType: statType,
	status: status,
	steeringPosition: steeringPosition,
	stepValue: stepValue,
	steps: steps,
	storageRequirements: storageRequirements,
	streetAddress: streetAddress,
	strengthUnit: strengthUnit,
	strengthValue: strengthValue,
	structuralClass: structuralClass,
	study: study,
	studyDesign: studyDesign,
	studyLocation: studyLocation,
	studySubject: studySubject,
	stupidProperty: stupidProperty,
	subEvents: subEvents,
	subReservation: subReservation,
	subStageSuffix: subStageSuffix,
	subStructure: subStructure,
	subTest: subTest,
	subtitleLanguage: subtitleLanguage,
	successorOf: successorOf,
	sugarContent: sugarContent,
	suggestedAge: suggestedAge,
	suggestedGender: suggestedGender,
	suggestedMaxAge: suggestedMaxAge,
	suggestedMeasurement: suggestedMeasurement,
	suggestedMinAge: suggestedMinAge,
	suitableForDiet: suitableForDiet,
	supersededBy: supersededBy,
	supplyTo: supplyTo,
	supportingData: supportingData,
	surface: surface,
	syllabusSections: syllabusSections,
	target: target,
	targetDescription: targetDescription,
	targetName: targetName,
	targetPlatform: targetPlatform,
	targetPopulation: targetPopulation,
	targetProduct: targetProduct,
	targetUrl: targetUrl,
	taxID: taxID,
	taxonRank: taxonRank,
	taxonomicRange: taxonomicRange,
	teaches: teaches,
	telephone: telephone,
	temporal: temporal,
	termDuration: termDuration,
	termsOfService: termsOfService,
	termsPerYear: termsPerYear,
	text: text,
	textValue: textValue,
	thumbnail: thumbnail,
	thumbnailUrl: thumbnailUrl,
	tickerSymbol: tickerSymbol,
	ticketNumber: ticketNumber,
	ticketToken: ticketToken,
	ticketedSeat: ticketedSeat,
	timeOfDay: timeOfDay,
	timeRequired: timeRequired,
	timeToComplete: timeToComplete,
	tissueSample: tissueSample,
	title: title,
	titleEIDR: titleEIDR,
	toLocation: toLocation,
	toRecipient: toRecipient,
	tocContinuation: tocContinuation,
	tocEntry: tocEntry,
	tongueWeight: tongueWeight,
	tool: tool,
	torque: torque,
	totalHistoricalEnrollment: totalHistoricalEnrollment,
	totalJobOpenings: totalJobOpenings,
	totalPaymentDue: totalPaymentDue,
	totalPrice: totalPrice,
	totalTime: totalTime,
	tourBookingPage: tourBookingPage,
	touristType: touristType,
	trackingNumber: trackingNumber,
	trackingUrl: trackingUrl,
	tracks: tracks,
	trailer: trailer,
	trailerWeight: trailerWeight,
	trainName: trainName,
	trainNumber: trainNumber,
	trainingSalary: trainingSalary,
	transFatContent: transFatContent,
	transcript: transcript,
	transitTime: transitTime,
	transitTimeLabel: transitTimeLabel,
	translator: translator,
	transmissionMethod: transmissionMethod,
	travelBans: travelBans,
	trialDesign: trialDesign,
	tributary: tributary,
	tripOrigin: tripOrigin,
	typeOfBed: typeOfBed,
	typeOfGood: typeOfGood,
	typicalAgeRange: typicalAgeRange,
	typicalCreditsPerTerm: typicalCreditsPerTerm,
	typicalTest: typicalTest,
	underName: underName,
	unitCode: unitCode,
	unitText: unitText,
	unnamedSourcesPolicy: unnamedSourcesPolicy,
	unsaturatedFatContent: unsaturatedFatContent,
	uploadDate: uploadDate,
	upvoteCount: upvoteCount,
	url: url,
	urlTemplate: urlTemplate,
	usedToDiagnose: usedToDiagnose,
	userInteractionCount: userInteractionCount,
	usesDevice: usesDevice,
	usesHealthPlanIdStandard: usesHealthPlanIdStandard,
	utterances: utterances,
	validFor: validFor,
	validFrom: validFrom,
	validIn: validIn,
	validThrough: validThrough,
	validUntil: validUntil,
	value: value,
	valueAddedTaxIncluded: valueAddedTaxIncluded,
	valueMaxLength: valueMaxLength,
	valueMinLength: valueMinLength,
	valueName: valueName,
	valuePattern: valuePattern,
	valueReference: valueReference,
	valueRequired: valueRequired,
	variableMeasured: variableMeasured,
	variablesMeasured: variablesMeasured,
	variantCover: variantCover,
	variesBy: variesBy,
	vatID: vatID,
	vehicleConfiguration: vehicleConfiguration,
	vehicleEngine: vehicleEngine,
	vehicleIdentificationNumber: vehicleIdentificationNumber,
	vehicleInteriorColor: vehicleInteriorColor,
	vehicleInteriorType: vehicleInteriorType,
	vehicleModelDate: vehicleModelDate,
	vehicleSeatingCapacity: vehicleSeatingCapacity,
	vehicleSpecialUsage: vehicleSpecialUsage,
	vehicleTransmission: vehicleTransmission,
	vendor: vendor,
	verificationFactCheckingPolicy: verificationFactCheckingPolicy,
	version: version,
	video: video,
	videoFormat: videoFormat,
	videoFrameSize: videoFrameSize,
	videoQuality: videoQuality,
	volumeNumber: volumeNumber,
	warning: warning,
	warrantyPromise: warrantyPromise,
	warrantyScope: warrantyScope,
	webCheckinTime: webCheckinTime,
	webFeed: webFeed,
	weight: weight,
	weightTotal: weightTotal,
	wheelbase: wheelbase,
	width: width,
	winner: winner,
	wordCount: wordCount,
	workHours: workHours,
	workLocation: workLocation,
	workPerformed: workPerformed,
	workPresented: workPresented,
	workload: workload,
	worksFor: worksFor,
	worstRating: worstRating,
	xpath: xpath,
	yearBuilt: yearBuilt,
	yearlyRevenue: yearlyRevenue,
	yearsInOperation: yearsInOperation,
	actionApplication: actionApplication,
	actionOption: actionOption,
	album: album,
	albumRelease: albumRelease,
	alternateName: alternateName,
	alumni: alumni,
	alumniOf: alumniOf,
	archiveHeld: archiveHeld,
	arterialBranch: arterialBranch,
	artworkSurface: artworkSurface,
	attendee: attendee,
	audience: audience,
	availableOnDevice: availableOnDevice,
	award: award,
	blogPost: blogPost,
	broker: broker,
	caption: caption,
	category: category,
	childTaxon: childTaxon,
	clinicalPharmacology: clinicalPharmacology,
	codeSampleType: codeSampleType,
	colleague: colleague,
	contactPoint: contactPoint,
	containsPlace: containsPlace,
	containsSeason: containsSeason,
	contentLocation: contentLocation,
	creator: creator,
	dataset: dataset,
	dateCreated: dateCreated,
	director: director,
	duration: duration,
	employee: employee,
	encodesBioChemEntity: encodesBioChemEntity,
	encodesCreativeWork: encodesCreativeWork,
	encodingFormat: encodingFormat,
	episode: episode,
	event: event,
	exampleOfWork: exampleOfWork,
	executableLibraryName: executableLibraryName,
	exerciseCourse: exerciseCourse,
	founder: founder,
	frequency: frequency,
	fundedItem: fundedItem,
	funding: funding,
	game: game,
	gameServer: gameServer,
	genre: genre,
	hasBioChemEntityPart: hasBioChemEntityPart,
	hasBroadcastChannel: hasBroadcastChannel,
	hasDefinedTerm: hasDefinedTerm,
	hasMenu: hasMenu,
	hasMerchantReturnPolicy: hasMerchantReturnPolicy,
	hasVariant: hasVariant,
	holdingArchive: holdingArchive,
	inDefinedTermSet: inDefinedTermSet,
	inLanguage: inLanguage,
	incentiveCompensation: incentiveCompensation,
	interactionStatistic: interactionStatistic,
	isAccessibleForFree: isAccessibleForFree,
	isBasedOn: isBasedOn,
	isEncodedByBioChemEntity: isEncodedByBioChemEntity,
	isPartOfBioChemEntity: isPartOfBioChemEntity,
	isVariantOf: isVariantOf,
	itemOffered: itemOffered,
	jobBenefits: jobBenefits,
	jurisdiction: jurisdiction,
	legislationApplies: legislationApplies,
	mainContentOfPage: mainContentOfPage,
	mainEntity: mainEntity,
	mainEntityOfPage: mainEntityOfPage,
	makesOffer: makesOffer,
	measurementTechnique: measurementTechnique,
	merchantReturnDays: merchantReturnDays,
	merchantReturnLink: merchantReturnLink,
	offeredBy: offeredBy,
	offers: offers,
	parent: parent,
	parentTaxon: parentTaxon,
	partOfSeries: partOfSeries,
	partOfTrip: partOfTrip,
	paymentDueDate: paymentDueDate,
	performTime: performTime,
	performer: performer,
	photo: photo,
	provider: provider,
	providesBroadcastService: providesBroadcastService,
	recipeIngredient: recipeIngredient,
	recordedAs: recordedAs,
	recordedAt: recordedAt,
	recordedIn: recordedIn,
	recordingOf: recordingOf,
	releaseOf: releaseOf,
	review: review,
	roleName: roleName,
	runtimePlatform: runtimePlatform,
	season: season,
	serialNumber: serialNumber,
	serviceArea: serviceArea,
	serviceOutput: serviceOutput,
	sibling: sibling,
	significantLink: significantLink,
	softwareRequirements: softwareRequirements,
	sponsor: sponsor,
	subOrganization: subOrganization,
	subTrip: subTrip,
	subjectOf: subjectOf,
	suggestedAnswer: suggestedAnswer,
	superEvent: superEvent,
	targetCollection: targetCollection,
	temporalCoverage: temporalCoverage,
	termCode: termCode,
	track: track,
	translationOfWork: translationOfWork,
	usageInfo: usageInfo,
	warranty: warranty,
	workTranslation: workTranslation,
	yield__workaround: yield__workaround,
	about: about,
	actor: actor,
	associatedReview: associatedReview,
	competitor: competitor,
	containedInPlace: containedInPlace,
	encoding: encoding,
	hasMap: hasMap,
	material: material,
	memberOf: memberOf,
	parentOrganization: parentOrganization,
	result: result,
	seller: seller,
	spatialCoverage: spatialCoverage,
	step: step,
	subEvent: subEvent,
	supply: supply,
	workFeatured: workFeatured,
	areaServed: areaServed,
	image: image,
	includedInDataCatalog: includedInDataCatalog,
	member: member,
	recipient: recipient,
	workExample: workExample,
	description: description,
	gtin: gtin,
	hasRepresentation: hasRepresentation,
	hasPart: hasPart,
	position: position,
	isPartOf: isPartOf,
	instrument: instrument,
	object: object,
	publishingPrinciples: publishingPrinciples,
	location: location,
	participant: participant,
	identifier: identifier
});

exports.AMRadioChannel = AMRadioChannel;
exports.APIReference = APIReference;
exports.AboutPage = AboutPage;
exports.AcceptAction = AcceptAction;
exports.Accommodation = Accommodation;
exports.AccountingService = AccountingService;
exports.AchieveAction = AchieveAction;
exports.Action = Action;
exports.ActionAccessSpecification = ActionAccessSpecification;
exports.ActionStatusType = ActionStatusType;
exports.ActivateAction = ActivateAction;
exports.AddAction = AddAction;
exports.AdministrativeArea = AdministrativeArea;
exports.AdultEntertainment = AdultEntertainment;
exports.AdultOrientedEnumeration = AdultOrientedEnumeration;
exports.AdvertiserContentArticle = AdvertiserContentArticle;
exports.AggregateOffer = AggregateOffer;
exports.AggregateRating = AggregateRating;
exports.AgreeAction = AgreeAction;
exports.Airline = Airline;
exports.Airport = Airport;
exports.AlignmentObject = AlignmentObject;
exports.AllocateAction = AllocateAction;
exports.AmpStory = AmpStory;
exports.AmusementPark = AmusementPark;
exports.AnalysisNewsArticle = AnalysisNewsArticle;
exports.AnatomicalStructure = AnatomicalStructure;
exports.AnatomicalSystem = AnatomicalSystem;
exports.AnimalShelter = AnimalShelter;
exports.Answer = Answer;
exports.Apartment = Apartment;
exports.ApartmentComplex = ApartmentComplex;
exports.AppendAction = AppendAction;
exports.ApplyAction = ApplyAction;
exports.ApprovedIndication = ApprovedIndication;
exports.Aquarium = Aquarium;
exports.ArchiveComponent = ArchiveComponent;
exports.ArchiveOrganization = ArchiveOrganization;
exports.ArriveAction = ArriveAction;
exports.ArtGallery = ArtGallery;
exports.Artery = Artery;
exports.Article = Article;
exports.AskAction = AskAction;
exports.AskPublicNewsArticle = AskPublicNewsArticle;
exports.AssessAction = AssessAction;
exports.AssignAction = AssignAction;
exports.Atlas = Atlas;
exports.Attorney = Attorney;
exports.Audience = Audience;
exports.AudioObject = AudioObject;
exports.AudioObjectSnapshot = AudioObjectSnapshot;
exports.Audiobook = Audiobook;
exports.AuthorizeAction = AuthorizeAction;
exports.AutoBodyShop = AutoBodyShop;
exports.AutoDealer = AutoDealer;
exports.AutoPartsStore = AutoPartsStore;
exports.AutoRental = AutoRental;
exports.AutoRepair = AutoRepair;
exports.AutoWash = AutoWash;
exports.AutomatedTeller = AutomatedTeller;
exports.AutomotiveBusiness = AutomotiveBusiness;
exports.BackgroundNewsArticle = BackgroundNewsArticle;
exports.Bakery = Bakery;
exports.BankAccount = BankAccount;
exports.BankOrCreditUnion = BankOrCreditUnion;
exports.BarOrPub = BarOrPub;
exports.Barcode = Barcode;
exports.Beach = Beach;
exports.BeautySalon = BeautySalon;
exports.BedAndBreakfast = BedAndBreakfast;
exports.BedDetails = BedDetails;
exports.BedType = BedType;
exports.BefriendAction = BefriendAction;
exports.BikeStore = BikeStore;
exports.BioChemEntity = BioChemEntity;
exports.Blog = Blog;
exports.BlogPosting = BlogPosting;
exports.BloodTest = BloodTest;
exports.BoardingPolicyType = BoardingPolicyType;
exports.BoatReservation = BoatReservation;
exports.BoatTerminal = BoatTerminal;
exports.BoatTrip = BoatTrip;
exports.BodyMeasurementTypeEnumeration = BodyMeasurementTypeEnumeration;
exports.BodyOfWater = BodyOfWater;
exports.Bone = Bone;
exports.Book = Book;
exports.BookFormatType = BookFormatType;
exports.BookSeries = BookSeries;
exports.BookStore = BookStore;
exports.BookmarkAction = BookmarkAction;
exports.Boolean__workaround = Boolean__workaround;
exports.BorrowAction = BorrowAction;
exports.BowlingAlley = BowlingAlley;
exports.BrainStructure = BrainStructure;
exports.Brand = Brand;
exports.BreadcrumbList = BreadcrumbList;
exports.Brewery = Brewery;
exports.Bridge = Bridge;
exports.BroadcastChannel = BroadcastChannel;
exports.BroadcastEvent = BroadcastEvent;
exports.BroadcastFrequencySpecification = BroadcastFrequencySpecification;
exports.BroadcastService = BroadcastService;
exports.BrokerageAccount = BrokerageAccount;
exports.BuddhistTemple = BuddhistTemple;
exports.BusOrCoach = BusOrCoach;
exports.BusReservation = BusReservation;
exports.BusStation = BusStation;
exports.BusStop = BusStop;
exports.BusTrip = BusTrip;
exports.BusinessAudience = BusinessAudience;
exports.BusinessEntityType = BusinessEntityType;
exports.BusinessEvent = BusinessEvent;
exports.BusinessFunction = BusinessFunction;
exports.BuyAction = BuyAction;
exports.CDCPMDRecord = CDCPMDRecord;
exports.CableOrSatelliteService = CableOrSatelliteService;
exports.CafeOrCoffeeShop = CafeOrCoffeeShop;
exports.Campground = Campground;
exports.CampingPitch = CampingPitch;
exports.Canal = Canal;
exports.CancelAction = CancelAction;
exports.Car = Car;
exports.CarUsageType = CarUsageType;
exports.Casino = Casino;
exports.CategoryCode = CategoryCode;
exports.CategoryCodeSet = CategoryCodeSet;
exports.CatholicChurch = CatholicChurch;
exports.Cemetery = Cemetery;
exports.Chapter = Chapter;
exports.CheckAction = CheckAction;
exports.CheckInAction = CheckInAction;
exports.CheckOutAction = CheckOutAction;
exports.CheckoutPage = CheckoutPage;
exports.ChemicalSubstance = ChemicalSubstance;
exports.ChildCare = ChildCare;
exports.ChildrensEvent = ChildrensEvent;
exports.ChooseAction = ChooseAction;
exports.Church = Church;
exports.City = City;
exports.CityHall = CityHall;
exports.CivicStructure = CivicStructure;
exports.Claim = Claim;
exports.ClaimReview = ClaimReview;
exports.Class = Class;
exports.Clip = Clip;
exports.ClothingStore = ClothingStore;
exports.Code = Code;
exports.Collection = Collection;
exports.CollectionPage = CollectionPage;
exports.CollegeOrUniversity = CollegeOrUniversity;
exports.ComedyClub = ComedyClub;
exports.ComedyEvent = ComedyEvent;
exports.ComicCoverArt = ComicCoverArt;
exports.ComicIssue = ComicIssue;
exports.ComicSeries = ComicSeries;
exports.ComicStory = ComicStory;
exports.Comment = Comment;
exports.CommentAction = CommentAction;
exports.CommunicateAction = CommunicateAction;
exports.CompleteDataFeed = CompleteDataFeed;
exports.CompoundPriceSpecification = CompoundPriceSpecification;
exports.ComputerLanguage = ComputerLanguage;
exports.ComputerStore = ComputerStore;
exports.ConfirmAction = ConfirmAction;
exports.Consortium = Consortium;
exports.ConstraintNode = ConstraintNode;
exports.ConsumeAction = ConsumeAction;
exports.ContactPage = ContactPage;
exports.ContactPoint = ContactPoint;
exports.ContactPointOption = ContactPointOption;
exports.Continent = Continent;
exports.ControlAction = ControlAction;
exports.ConvenienceStore = ConvenienceStore;
exports.Conversation = Conversation;
exports.CookAction = CookAction;
exports.Corporation = Corporation;
exports.CorrectionComment = CorrectionComment;
exports.Country = Country;
exports.Course = Course;
exports.CourseInstance = CourseInstance;
exports.Courthouse = Courthouse;
exports.CoverArt = CoverArt;
exports.CovidTestingFacility = CovidTestingFacility;
exports.CreateAction = CreateAction;
exports.CreativeWork = CreativeWork;
exports.CreativeWorkSeason = CreativeWorkSeason;
exports.CreativeWorkSeries = CreativeWorkSeries;
exports.CreditCard = CreditCard;
exports.Crematorium = Crematorium;
exports.CriticReview = CriticReview;
exports.CssSelectorType = CssSelectorType;
exports.CurrencyConversionService = CurrencyConversionService;
exports.DDxElement = DDxElement;
exports.DanceEvent = DanceEvent;
exports.DanceGroup = DanceGroup;
exports.DataCatalog = DataCatalog;
exports.DataDownload = DataDownload;
exports.DataFeed = DataFeed;
exports.DataFeedItem = DataFeedItem;
exports.DataType = DataType;
exports.Dataset = Dataset;
exports.DateTime = DateTime;
exports.Date__workaround = Date__workaround;
exports.DatedMoneySpecification = DatedMoneySpecification;
exports.DayOfWeek = DayOfWeek;
exports.DaySpa = DaySpa;
exports.DeactivateAction = DeactivateAction;
exports.DefenceEstablishment = DefenceEstablishment;
exports.DefinedRegion = DefinedRegion;
exports.DefinedTerm = DefinedTerm;
exports.DefinedTermSet = DefinedTermSet;
exports.DeleteAction = DeleteAction;
exports.DeliveryChargeSpecification = DeliveryChargeSpecification;
exports.DeliveryEvent = DeliveryEvent;
exports.DeliveryMethod = DeliveryMethod;
exports.DeliveryTimeSettings = DeliveryTimeSettings;
exports.Demand = Demand;
exports.Dentist = Dentist;
exports.DepartAction = DepartAction;
exports.DepartmentStore = DepartmentStore;
exports.DepositAccount = DepositAccount;
exports.DiagnosticLab = DiagnosticLab;
exports.DiagnosticProcedure = DiagnosticProcedure;
exports.Diet = Diet;
exports.DietarySupplement = DietarySupplement;
exports.DigitalDocument = DigitalDocument;
exports.DigitalDocumentPermission = DigitalDocumentPermission;
exports.DigitalDocumentPermissionType = DigitalDocumentPermissionType;
exports.DigitalPlatformEnumeration = DigitalPlatformEnumeration;
exports.DisagreeAction = DisagreeAction;
exports.DiscoverAction = DiscoverAction;
exports.DiscussionForumPosting = DiscussionForumPosting;
exports.DislikeAction = DislikeAction;
exports.Distance = Distance;
exports.Distillery = Distillery;
exports.DonateAction = DonateAction;
exports.DoseSchedule = DoseSchedule;
exports.DownloadAction = DownloadAction;
exports.DrawAction = DrawAction;
exports.Drawing = Drawing;
exports.DrinkAction = DrinkAction;
exports.DriveWheelConfigurationValue = DriveWheelConfigurationValue;
exports.Drug = Drug;
exports.DrugClass = DrugClass;
exports.DrugCost = DrugCost;
exports.DrugCostCategory = DrugCostCategory;
exports.DrugLegalStatus = DrugLegalStatus;
exports.DrugPregnancyCategory = DrugPregnancyCategory;
exports.DrugPrescriptionStatus = DrugPrescriptionStatus;
exports.DrugStrength = DrugStrength;
exports.DryCleaningOrLaundry = DryCleaningOrLaundry;
exports.Duration = Duration;
exports.EUEnergyEfficiencyEnumeration = EUEnergyEfficiencyEnumeration;
exports.EatAction = EatAction;
exports.EducationEvent = EducationEvent;
exports.EducationalAudience = EducationalAudience;
exports.EducationalOccupationalCredential = EducationalOccupationalCredential;
exports.EducationalOccupationalProgram = EducationalOccupationalProgram;
exports.EducationalOrganization = EducationalOrganization;
exports.Electrician = Electrician;
exports.ElectronicsStore = ElectronicsStore;
exports.ElementarySchool = ElementarySchool;
exports.EmailMessage = EmailMessage;
exports.Embassy = Embassy;
exports.EmergencyService = EmergencyService;
exports.EmployeeRole = EmployeeRole;
exports.EmployerAggregateRating = EmployerAggregateRating;
exports.EmployerReview = EmployerReview;
exports.EmploymentAgency = EmploymentAgency;
exports.EndorseAction = EndorseAction;
exports.EndorsementRating = EndorsementRating;
exports.Energy = Energy;
exports.EnergyConsumptionDetails = EnergyConsumptionDetails;
exports.EnergyEfficiencyEnumeration = EnergyEfficiencyEnumeration;
exports.EnergyStarEnergyEfficiencyEnumeration = EnergyStarEnergyEfficiencyEnumeration;
exports.EngineSpecification = EngineSpecification;
exports.EntertainmentBusiness = EntertainmentBusiness;
exports.EntryPoint = EntryPoint;
exports.Enumeration = Enumeration;
exports.Episode = Episode;
exports.Event = Event;
exports.EventAttendanceModeEnumeration = EventAttendanceModeEnumeration;
exports.EventReservation = EventReservation;
exports.EventSeries = EventSeries;
exports.EventStatusType = EventStatusType;
exports.EventVenue = EventVenue;
exports.ExchangeRateSpecification = ExchangeRateSpecification;
exports.ExerciseAction = ExerciseAction;
exports.ExerciseGym = ExerciseGym;
exports.ExercisePlan = ExercisePlan;
exports.ExhibitionEvent = ExhibitionEvent;
exports.FAQPage = FAQPage;
exports.FMRadioChannel = FMRadioChannel;
exports.FastFoodRestaurant = FastFoodRestaurant;
exports.Festival = Festival;
exports.FilmAction = FilmAction;
exports.FinancialProduct = FinancialProduct;
exports.FinancialService = FinancialService;
exports.FindAction = FindAction;
exports.FireStation = FireStation;
exports.Flight = Flight;
exports.FlightReservation = FlightReservation;
exports.Float = Float;
exports.FloorPlan = FloorPlan;
exports.Florist = Florist;
exports.FollowAction = FollowAction;
exports.FoodEstablishment = FoodEstablishment;
exports.FoodEstablishmentReservation = FoodEstablishmentReservation;
exports.FoodEvent = FoodEvent;
exports.FoodService = FoodService;
exports.FundingAgency = FundingAgency;
exports.FundingScheme = FundingScheme;
exports.FurnitureStore = FurnitureStore;
exports.Game = Game;
exports.GameAvailabilityEnumeration = GameAvailabilityEnumeration;
exports.GamePlayMode = GamePlayMode;
exports.GameServer = GameServer;
exports.GameServerStatus = GameServerStatus;
exports.GardenStore = GardenStore;
exports.GasStation = GasStation;
exports.GatedResidenceCommunity = GatedResidenceCommunity;
exports.GenderType = GenderType;
exports.Gene = Gene;
exports.GeneralContractor = GeneralContractor;
exports.GeoCircle = GeoCircle;
exports.GeoCoordinates = GeoCoordinates;
exports.GeoShape = GeoShape;
exports.GeospatialGeometry = GeospatialGeometry;
exports.GiveAction = GiveAction;
exports.GolfCourse = GolfCourse;
exports.GovernmentBenefitsType = GovernmentBenefitsType;
exports.GovernmentBuilding = GovernmentBuilding;
exports.GovernmentOffice = GovernmentOffice;
exports.GovernmentOrganization = GovernmentOrganization;
exports.GovernmentPermit = GovernmentPermit;
exports.GovernmentService = GovernmentService;
exports.Grant = Grant;
exports.GroceryStore = GroceryStore;
exports.Guide = Guide;
exports.HVACBusiness = HVACBusiness;
exports.Hackathon = Hackathon;
exports.HairSalon = HairSalon;
exports.HardwareStore = HardwareStore;
exports.HealthAndBeautyBusiness = HealthAndBeautyBusiness;
exports.HealthAspectEnumeration = HealthAspectEnumeration;
exports.HealthClub = HealthClub;
exports.HealthInsurancePlan = HealthInsurancePlan;
exports.HealthPlanCostSharingSpecification = HealthPlanCostSharingSpecification;
exports.HealthPlanFormulary = HealthPlanFormulary;
exports.HealthPlanNetwork = HealthPlanNetwork;
exports.HealthTopicContent = HealthTopicContent;
exports.HighSchool = HighSchool;
exports.HinduTemple = HinduTemple;
exports.HobbyShop = HobbyShop;
exports.HomeAndConstructionBusiness = HomeAndConstructionBusiness;
exports.HomeGoodsStore = HomeGoodsStore;
exports.Hospital = Hospital;
exports.Hostel = Hostel;
exports.Hotel = Hotel;
exports.HotelRoom = HotelRoom;
exports.House = House;
exports.HousePainter = HousePainter;
exports.HowTo = HowTo;
exports.HowToDirection = HowToDirection;
exports.HowToItem = HowToItem;
exports.HowToSection = HowToSection;
exports.HowToStep = HowToStep;
exports.HowToSupply = HowToSupply;
exports.HowToTip = HowToTip;
exports.HowToTool = HowToTool;
exports.HyperToc = HyperToc;
exports.HyperTocEntry = HyperTocEntry;
exports.IceCreamShop = IceCreamShop;
exports.IgnoreAction = IgnoreAction;
exports.ImageGallery = ImageGallery;
exports.ImageObject = ImageObject;
exports.ImageObjectSnapshot = ImageObjectSnapshot;
exports.ImagingTest = ImagingTest;
exports.IndividualProduct = IndividualProduct;
exports.InfectiousAgentClass = InfectiousAgentClass;
exports.InfectiousDisease = InfectiousDisease;
exports.InformAction = InformAction;
exports.InsertAction = InsertAction;
exports.InstallAction = InstallAction;
exports.InsuranceAgency = InsuranceAgency;
exports.Intangible = Intangible;
exports.Integer = Integer;
exports.InteractAction = InteractAction;
exports.InteractionCounter = InteractionCounter;
exports.InternetCafe = InternetCafe;
exports.InvestmentFund = InvestmentFund;
exports.InvestmentOrDeposit = InvestmentOrDeposit;
exports.InviteAction = InviteAction;
exports.Invoice = Invoice;
exports.ItemAvailability = ItemAvailability;
exports.ItemList = ItemList;
exports.ItemListOrderType = ItemListOrderType;
exports.ItemPage = ItemPage;
exports.JewelryStore = JewelryStore;
exports.JobPosting = JobPosting;
exports.JoinAction = JoinAction;
exports.Joint = Joint;
exports.LakeBodyOfWater = LakeBodyOfWater;
exports.Landform = Landform;
exports.LandmarksOrHistoricalBuildings = LandmarksOrHistoricalBuildings;
exports.Language = Language;
exports.LearningResource = LearningResource;
exports.LeaveAction = LeaveAction;
exports.LegalForceStatus = LegalForceStatus;
exports.LegalService = LegalService;
exports.LegalValueLevel = LegalValueLevel;
exports.Legislation = Legislation;
exports.LegislationObject = LegislationObject;
exports.LegislativeBuilding = LegislativeBuilding;
exports.LendAction = LendAction;
exports.Library = Library;
exports.LibrarySystem = LibrarySystem;
exports.LifestyleModification = LifestyleModification;
exports.Ligament = Ligament;
exports.LikeAction = LikeAction;
exports.LinkRole = LinkRole;
exports.LiquorStore = LiquorStore;
exports.ListItem = ListItem;
exports.ListenAction = ListenAction;
exports.LiteraryEvent = LiteraryEvent;
exports.LiveBlogPosting = LiveBlogPosting;
exports.LoanOrCredit = LoanOrCredit;
exports.LocalBusiness = LocalBusiness;
exports.LocationFeatureSpecification = LocationFeatureSpecification;
exports.Locksmith = Locksmith;
exports.LodgingBusiness = LodgingBusiness;
exports.LodgingReservation = LodgingReservation;
exports.LoseAction = LoseAction;
exports.LymphaticVessel = LymphaticVessel;
exports.Manuscript = Manuscript;
exports.MapCategoryType = MapCategoryType;
exports.Map__workaround = Map__workaround;
exports.MarryAction = MarryAction;
exports.Mass = Mass;
exports.MathSolver = MathSolver;
exports.MaximumDoseSchedule = MaximumDoseSchedule;
exports.MeasurementMethodEnum = MeasurementMethodEnum;
exports.MeasurementTypeEnumeration = MeasurementTypeEnumeration;
exports.MediaGallery = MediaGallery;
exports.MediaManipulationRatingEnumeration = MediaManipulationRatingEnumeration;
exports.MediaObject = MediaObject;
exports.MediaReview = MediaReview;
exports.MediaReviewItem = MediaReviewItem;
exports.MediaSubscription = MediaSubscription;
exports.MedicalAudience = MedicalAudience;
exports.MedicalAudienceType = MedicalAudienceType;
exports.MedicalBusiness = MedicalBusiness;
exports.MedicalCause = MedicalCause;
exports.MedicalClinic = MedicalClinic;
exports.MedicalCode = MedicalCode;
exports.MedicalCondition = MedicalCondition;
exports.MedicalConditionStage = MedicalConditionStage;
exports.MedicalContraindication = MedicalContraindication;
exports.MedicalDevice = MedicalDevice;
exports.MedicalDevicePurpose = MedicalDevicePurpose;
exports.MedicalEntity = MedicalEntity;
exports.MedicalEnumeration = MedicalEnumeration;
exports.MedicalEvidenceLevel = MedicalEvidenceLevel;
exports.MedicalGuideline = MedicalGuideline;
exports.MedicalGuidelineContraindication = MedicalGuidelineContraindication;
exports.MedicalGuidelineRecommendation = MedicalGuidelineRecommendation;
exports.MedicalImagingTechnique = MedicalImagingTechnique;
exports.MedicalIndication = MedicalIndication;
exports.MedicalIntangible = MedicalIntangible;
exports.MedicalObservationalStudy = MedicalObservationalStudy;
exports.MedicalObservationalStudyDesign = MedicalObservationalStudyDesign;
exports.MedicalOrganization = MedicalOrganization;
exports.MedicalProcedure = MedicalProcedure;
exports.MedicalProcedureType = MedicalProcedureType;
exports.MedicalRiskCalculator = MedicalRiskCalculator;
exports.MedicalRiskEstimator = MedicalRiskEstimator;
exports.MedicalRiskFactor = MedicalRiskFactor;
exports.MedicalRiskScore = MedicalRiskScore;
exports.MedicalScholarlyArticle = MedicalScholarlyArticle;
exports.MedicalSign = MedicalSign;
exports.MedicalSignOrSymptom = MedicalSignOrSymptom;
exports.MedicalSpecialty = MedicalSpecialty;
exports.MedicalStudy = MedicalStudy;
exports.MedicalStudyStatus = MedicalStudyStatus;
exports.MedicalSymptom = MedicalSymptom;
exports.MedicalTest = MedicalTest;
exports.MedicalTestPanel = MedicalTestPanel;
exports.MedicalTherapy = MedicalTherapy;
exports.MedicalTrial = MedicalTrial;
exports.MedicalTrialDesign = MedicalTrialDesign;
exports.MedicalWebPage = MedicalWebPage;
exports.MedicineSystem = MedicineSystem;
exports.MeetingRoom = MeetingRoom;
exports.MensClothingStore = MensClothingStore;
exports.Menu = Menu;
exports.MenuItem = MenuItem;
exports.MenuSection = MenuSection;
exports.MerchantReturnEnumeration = MerchantReturnEnumeration;
exports.MerchantReturnPolicy = MerchantReturnPolicy;
exports.MerchantReturnPolicySeasonalOverride = MerchantReturnPolicySeasonalOverride;
exports.Message = Message;
exports.MiddleSchool = MiddleSchool;
exports.MobileApplication = MobileApplication;
exports.MobilePhoneStore = MobilePhoneStore;
exports.MolecularEntity = MolecularEntity;
exports.MonetaryAmount = MonetaryAmount;
exports.MonetaryAmountDistribution = MonetaryAmountDistribution;
exports.MonetaryGrant = MonetaryGrant;
exports.MoneyTransfer = MoneyTransfer;
exports.MortgageLoan = MortgageLoan;
exports.Mosque = Mosque;
exports.Motel = Motel;
exports.Motorcycle = Motorcycle;
exports.MotorcycleDealer = MotorcycleDealer;
exports.MotorcycleRepair = MotorcycleRepair;
exports.MotorizedBicycle = MotorizedBicycle;
exports.Mountain = Mountain;
exports.MoveAction = MoveAction;
exports.Movie = Movie;
exports.MovieClip = MovieClip;
exports.MovieRentalStore = MovieRentalStore;
exports.MovieSeries = MovieSeries;
exports.MovieTheater = MovieTheater;
exports.MovingCompany = MovingCompany;
exports.Muscle = Muscle;
exports.Museum = Museum;
exports.MusicAlbum = MusicAlbum;
exports.MusicAlbumProductionType = MusicAlbumProductionType;
exports.MusicAlbumReleaseType = MusicAlbumReleaseType;
exports.MusicComposition = MusicComposition;
exports.MusicEvent = MusicEvent;
exports.MusicGroup = MusicGroup;
exports.MusicPlaylist = MusicPlaylist;
exports.MusicRecording = MusicRecording;
exports.MusicRelease = MusicRelease;
exports.MusicReleaseFormatType = MusicReleaseFormatType;
exports.MusicStore = MusicStore;
exports.MusicVenue = MusicVenue;
exports.MusicVideoObject = MusicVideoObject;
exports.NGO = NGO;
exports.NLNonprofitType = NLNonprofitType;
exports.NailSalon = NailSalon;
exports.Nerve = Nerve;
exports.NewsArticle = NewsArticle;
exports.NewsMediaOrganization = NewsMediaOrganization;
exports.Newspaper = Newspaper;
exports.NightClub = NightClub;
exports.NonprofitType = NonprofitType;
exports.Notary = Notary;
exports.NoteDigitalDocument = NoteDigitalDocument;
exports.Number__workaround = Number__workaround;
exports.NutritionInformation = NutritionInformation;
exports.Observation = Observation;
exports.Occupation = Occupation;
exports.OccupationalExperienceRequirements = OccupationalExperienceRequirements;
exports.OccupationalTherapy = OccupationalTherapy;
exports.OceanBodyOfWater = OceanBodyOfWater;
exports.Offer = Offer;
exports.OfferCatalog = OfferCatalog;
exports.OfferForLease = OfferForLease;
exports.OfferForPurchase = OfferForPurchase;
exports.OfferItemCondition = OfferItemCondition;
exports.OfferShippingDetails = OfferShippingDetails;
exports.OfficeEquipmentStore = OfficeEquipmentStore;
exports.OnDemandEvent = OnDemandEvent;
exports.OnlineBusiness = OnlineBusiness;
exports.OnlineStore = OnlineStore;
exports.OpeningHoursSpecification = OpeningHoursSpecification;
exports.OpinionNewsArticle = OpinionNewsArticle;
exports.Optician = Optician;
exports.Order = Order;
exports.OrderAction = OrderAction;
exports.OrderItem = OrderItem;
exports.OrderStatus = OrderStatus;
exports.Organization = Organization;
exports.OrganizationRole = OrganizationRole;
exports.OrganizeAction = OrganizeAction;
exports.OutletStore = OutletStore;
exports.OwnershipInfo = OwnershipInfo;
exports.PaintAction = PaintAction;
exports.Painting = Painting;
exports.PalliativeProcedure = PalliativeProcedure;
exports.ParcelDelivery = ParcelDelivery;
exports.ParentAudience = ParentAudience;
exports.Park = Park;
exports.ParkingFacility = ParkingFacility;
exports.PathologyTest = PathologyTest;
exports.Patient = Patient;
exports.PawnShop = PawnShop;
exports.PayAction = PayAction;
exports.PaymentCard = PaymentCard;
exports.PaymentChargeSpecification = PaymentChargeSpecification;
exports.PaymentMethod = PaymentMethod;
exports.PaymentService = PaymentService;
exports.PaymentStatusType = PaymentStatusType;
exports.PeopleAudience = PeopleAudience;
exports.PerformAction = PerformAction;
exports.PerformanceRole = PerformanceRole;
exports.PerformingArtsTheater = PerformingArtsTheater;
exports.PerformingGroup = PerformingGroup;
exports.Periodical = Periodical;
exports.Permit = Permit;
exports.Person = Person;
exports.PetStore = PetStore;
exports.Pharmacy = Pharmacy;
exports.Photograph = Photograph;
exports.PhotographAction = PhotographAction;
exports.PhysicalActivity = PhysicalActivity;
exports.PhysicalActivityCategory = PhysicalActivityCategory;
exports.PhysicalExam = PhysicalExam;
exports.PhysicalTherapy = PhysicalTherapy;
exports.Physician = Physician;
exports.Place = Place;
exports.PlaceOfWorship = PlaceOfWorship;
exports.PlanAction = PlanAction;
exports.Play = Play;
exports.PlayAction = PlayAction;
exports.PlayGameAction = PlayGameAction;
exports.Playground = Playground;
exports.Plumber = Plumber;
exports.PodcastEpisode = PodcastEpisode;
exports.PodcastSeason = PodcastSeason;
exports.PodcastSeries = PodcastSeries;
exports.PoliceStation = PoliceStation;
exports.PoliticalParty = PoliticalParty;
exports.Pond = Pond;
exports.PostOffice = PostOffice;
exports.PostalAddress = PostalAddress;
exports.PostalCodeRangeSpecification = PostalCodeRangeSpecification;
exports.Poster = Poster;
exports.PreOrderAction = PreOrderAction;
exports.PrependAction = PrependAction;
exports.Preschool = Preschool;
exports.PresentationDigitalDocument = PresentationDigitalDocument;
exports.PreventionIndication = PreventionIndication;
exports.PriceComponentTypeEnumeration = PriceComponentTypeEnumeration;
exports.PriceSpecification = PriceSpecification;
exports.PriceTypeEnumeration = PriceTypeEnumeration;
exports.Product = Product;
exports.ProductCollection = ProductCollection;
exports.ProductGroup = ProductGroup;
exports.ProductModel = ProductModel;
exports.ProductReturnEnumeration = ProductReturnEnumeration;
exports.ProductReturnPolicy = ProductReturnPolicy;
exports.ProfessionalService = ProfessionalService;
exports.ProfilePage = ProfilePage;
exports.ProgramMembership = ProgramMembership;
exports.Project = Project;
exports.PronounceableText = PronounceableText;
exports.Property = Property;
exports.PropertyValue = PropertyValue;
exports.PropertyValueSpecification = PropertyValueSpecification;
exports.Protein = Protein;
exports.PsychologicalTreatment = PsychologicalTreatment;
exports.PublicSwimmingPool = PublicSwimmingPool;
exports.PublicToilet = PublicToilet;
exports.PublicationEvent = PublicationEvent;
exports.PublicationIssue = PublicationIssue;
exports.PublicationVolume = PublicationVolume;
exports.QAPage = QAPage;
exports.QualitativeValue = QualitativeValue;
exports.QuantitativeValue = QuantitativeValue;
exports.QuantitativeValueDistribution = QuantitativeValueDistribution;
exports.Quantity = Quantity;
exports.Question = Question;
exports.Quiz = Quiz;
exports.Quotation = Quotation;
exports.QuoteAction = QuoteAction;
exports.RVPark = RVPark;
exports.RadiationTherapy = RadiationTherapy;
exports.RadioBroadcastService = RadioBroadcastService;
exports.RadioChannel = RadioChannel;
exports.RadioClip = RadioClip;
exports.RadioEpisode = RadioEpisode;
exports.RadioSeason = RadioSeason;
exports.RadioSeries = RadioSeries;
exports.RadioStation = RadioStation;
exports.Rating = Rating;
exports.ReactAction = ReactAction;
exports.ReadAction = ReadAction;
exports.RealEstateAgent = RealEstateAgent;
exports.RealEstateListing = RealEstateListing;
exports.ReceiveAction = ReceiveAction;
exports.Recipe = Recipe;
exports.Recommendation = Recommendation;
exports.RecommendedDoseSchedule = RecommendedDoseSchedule;
exports.RecyclingCenter = RecyclingCenter;
exports.RefundTypeEnumeration = RefundTypeEnumeration;
exports.RegisterAction = RegisterAction;
exports.RejectAction = RejectAction;
exports.RentAction = RentAction;
exports.RentalCarReservation = RentalCarReservation;
exports.RepaymentSpecification = RepaymentSpecification;
exports.ReplaceAction = ReplaceAction;
exports.ReplyAction = ReplyAction;
exports.Report = Report;
exports.ReportageNewsArticle = ReportageNewsArticle;
exports.ReportedDoseSchedule = ReportedDoseSchedule;
exports.ResearchOrganization = ResearchOrganization;
exports.ResearchProject = ResearchProject;
exports.Researcher = Researcher;
exports.Reservation = Reservation;
exports.ReservationPackage = ReservationPackage;
exports.ReservationStatusType = ReservationStatusType;
exports.ReserveAction = ReserveAction;
exports.Reservoir = Reservoir;
exports.Residence = Residence;
exports.Resort = Resort;
exports.Restaurant = Restaurant;
exports.RestrictedDiet = RestrictedDiet;
exports.ResumeAction = ResumeAction;
exports.ReturnAction = ReturnAction;
exports.ReturnFeesEnumeration = ReturnFeesEnumeration;
exports.ReturnLabelSourceEnumeration = ReturnLabelSourceEnumeration;
exports.ReturnMethodEnumeration = ReturnMethodEnumeration;
exports.Review = Review;
exports.ReviewAction = ReviewAction;
exports.ReviewNewsArticle = ReviewNewsArticle;
exports.RiverBodyOfWater = RiverBodyOfWater;
exports.Role = Role;
exports.RoofingContractor = RoofingContractor;
exports.Room = Room;
exports.RsvpAction = RsvpAction;
exports.RsvpResponseType = RsvpResponseType;
exports.SaleEvent = SaleEvent;
exports.SatiricalArticle = SatiricalArticle;
exports.Schedule = Schedule;
exports.ScheduleAction = ScheduleAction;
exports.ScholarlyArticle = ScholarlyArticle;
exports.School = School;
exports.SchoolDistrict = SchoolDistrict;
exports.ScreeningEvent = ScreeningEvent;
exports.Sculpture = Sculpture;
exports.SeaBodyOfWater = SeaBodyOfWater;
exports.SearchAction = SearchAction;
exports.SearchRescueOrganization = SearchRescueOrganization;
exports.SearchResultsPage = SearchResultsPage;
exports.Season = Season;
exports.Seat = Seat;
exports.SeekToAction = SeekToAction;
exports.SelfStorage = SelfStorage;
exports.SellAction = SellAction;
exports.SendAction = SendAction;
exports.Series = Series;
exports.Service = Service;
exports.ServiceChannel = ServiceChannel;
exports.ShareAction = ShareAction;
exports.SheetMusic = SheetMusic;
exports.ShippingDeliveryTime = ShippingDeliveryTime;
exports.ShippingRateSettings = ShippingRateSettings;
exports.ShoeStore = ShoeStore;
exports.ShoppingCenter = ShoppingCenter;
exports.ShortStory = ShortStory;
exports.SingleFamilyResidence = SingleFamilyResidence;
exports.SiteNavigationElement = SiteNavigationElement;
exports.SizeGroupEnumeration = SizeGroupEnumeration;
exports.SizeSpecification = SizeSpecification;
exports.SizeSystemEnumeration = SizeSystemEnumeration;
exports.SkiResort = SkiResort;
exports.SocialEvent = SocialEvent;
exports.SocialMediaPosting = SocialMediaPosting;
exports.SoftwareApplication = SoftwareApplication;
exports.SoftwareSourceCode = SoftwareSourceCode;
exports.SolveMathAction = SolveMathAction;
exports.SomeProducts = SomeProducts;
exports.SpeakableSpecification = SpeakableSpecification;
exports.SpecialAnnouncement = SpecialAnnouncement;
exports.Specialty = Specialty;
exports.SportingGoodsStore = SportingGoodsStore;
exports.SportsActivityLocation = SportsActivityLocation;
exports.SportsClub = SportsClub;
exports.SportsEvent = SportsEvent;
exports.SportsOrganization = SportsOrganization;
exports.SportsTeam = SportsTeam;
exports.SpreadsheetDigitalDocument = SpreadsheetDigitalDocument;
exports.StadiumOrArena = StadiumOrArena;
exports.State = State;
exports.Statement = Statement;
exports.StatisticalPopulation = StatisticalPopulation;
exports.StatisticalVariable = StatisticalVariable;
exports.StatusEnumeration = StatusEnumeration;
exports.SteeringPositionValue = SteeringPositionValue;
exports.Store = Store;
exports.StructuredValue = StructuredValue;
exports.StupidType = StupidType;
exports.SubscribeAction = SubscribeAction;
exports.Substance = Substance;
exports.SubwayStation = SubwayStation;
exports.Suite = Suite;
exports.SuperficialAnatomy = SuperficialAnatomy;
exports.SurgicalProcedure = SurgicalProcedure;
exports.SuspendAction = SuspendAction;
exports.Syllabus = Syllabus;
exports.Synagogue = Synagogue;
exports.TVClip = TVClip;
exports.TVEpisode = TVEpisode;
exports.TVSeason = TVSeason;
exports.TVSeries = TVSeries;
exports.Table = Table;
exports.TakeAction = TakeAction;
exports.TattooParlor = TattooParlor;
exports.Taxi = Taxi;
exports.TaxiReservation = TaxiReservation;
exports.TaxiService = TaxiService;
exports.TaxiStand = TaxiStand;
exports.Taxon = Taxon;
exports.TechArticle = TechArticle;
exports.TelevisionChannel = TelevisionChannel;
exports.TelevisionStation = TelevisionStation;
exports.TennisComplex = TennisComplex;
exports.Text = Text;
exports.TextDigitalDocument = TextDigitalDocument;
exports.TextObject = TextObject;
exports.TheaterEvent = TheaterEvent;
exports.TheaterGroup = TheaterGroup;
exports.TherapeuticProcedure = TherapeuticProcedure;
exports.Thesis = Thesis;
exports.Thing = Thing;
exports.Ticket = Ticket;
exports.TieAction = TieAction;
exports.Time = Time;
exports.TipAction = TipAction;
exports.TireShop = TireShop;
exports.TouristAttraction = TouristAttraction;
exports.TouristDestination = TouristDestination;
exports.TouristInformationCenter = TouristInformationCenter;
exports.TouristTrip = TouristTrip;
exports.ToyStore = ToyStore;
exports.TrackAction = TrackAction;
exports.TradeAction = TradeAction;
exports.TrainReservation = TrainReservation;
exports.TrainStation = TrainStation;
exports.TrainTrip = TrainTrip;
exports.TransferAction = TransferAction;
exports.TravelAction = TravelAction;
exports.TravelAgency = TravelAgency;
exports.TreatmentIndication = TreatmentIndication;
exports.Trip = Trip;
exports.TypeAndQuantityNode = TypeAndQuantityNode;
exports.UKNonprofitType = UKNonprofitType;
exports.URL = URL;
exports.USNonprofitType = USNonprofitType;
exports.UnRegisterAction = UnRegisterAction;
exports.UnitPriceSpecification = UnitPriceSpecification;
exports.UpdateAction = UpdateAction;
exports.UseAction = UseAction;
exports.UserBlocks = UserBlocks;
exports.UserCheckins = UserCheckins;
exports.UserComments = UserComments;
exports.UserDownloads = UserDownloads;
exports.UserInteraction = UserInteraction;
exports.UserLikes = UserLikes;
exports.UserPageVisits = UserPageVisits;
exports.UserPlays = UserPlays;
exports.UserPlusOnes = UserPlusOnes;
exports.UserReview = UserReview;
exports.UserTweets = UserTweets;
exports.VacationRental = VacationRental;
exports.Vehicle = Vehicle;
exports.Vein = Vein;
exports.Vessel = Vessel;
exports.VeterinaryCare = VeterinaryCare;
exports.VideoGallery = VideoGallery;
exports.VideoGame = VideoGame;
exports.VideoGameClip = VideoGameClip;
exports.VideoGameSeries = VideoGameSeries;
exports.VideoObject = VideoObject;
exports.VideoObjectSnapshot = VideoObjectSnapshot;
exports.ViewAction = ViewAction;
exports.VirtualLocation = VirtualLocation;
exports.VisualArtsEvent = VisualArtsEvent;
exports.VisualArtwork = VisualArtwork;
exports.VitalSign = VitalSign;
exports.Volcano = Volcano;
exports.VoteAction = VoteAction;
exports.WPAdBlock = WPAdBlock;
exports.WPFooter = WPFooter;
exports.WPHeader = WPHeader;
exports.WPSideBar = WPSideBar;
exports.WantAction = WantAction;
exports.WarrantyPromise = WarrantyPromise;
exports.WarrantyScope = WarrantyScope;
exports.WatchAction = WatchAction;
exports.Waterfall = Waterfall;
exports.WearAction = WearAction;
exports.WearableMeasurementTypeEnumeration = WearableMeasurementTypeEnumeration;
exports.WearableSizeGroupEnumeration = WearableSizeGroupEnumeration;
exports.WearableSizeSystemEnumeration = WearableSizeSystemEnumeration;
exports.WebAPI = WebAPI;
exports.WebApplication = WebApplication;
exports.WebContent = WebContent;
exports.WebPage = WebPage;
exports.WebPageElement = WebPageElement;
exports.WebSite = WebSite;
exports.WholesaleStore = WholesaleStore;
exports.WinAction = WinAction;
exports.Winery = Winery;
exports.WorkBasedProgram = WorkBasedProgram;
exports.WorkersUnion = WorkersUnion;
exports.WriteAction = WriteAction;
exports.XPathType = XPathType;
exports.Zoo = Zoo;
exports.about = about;
exports.abridged = abridged;
exports.abstract = abstract;
exports.accelerationTime = accelerationTime;
exports.acceptedAnswer = acceptedAnswer;
exports.acceptedOffer = acceptedOffer;
exports.acceptedPaymentMethod = acceptedPaymentMethod;
exports.acceptsReservations = acceptsReservations;
exports.accessCode = accessCode;
exports.accessMode = accessMode;
exports.accessModeSufficient = accessModeSufficient;
exports.accessibilityAPI = accessibilityAPI;
exports.accessibilityControl = accessibilityControl;
exports.accessibilityFeature = accessibilityFeature;
exports.accessibilityHazard = accessibilityHazard;
exports.accessibilitySummary = accessibilitySummary;
exports.accommodationCategory = accommodationCategory;
exports.accommodationFloorPlan = accommodationFloorPlan;
exports.accountId = accountId;
exports.accountMinimumInflow = accountMinimumInflow;
exports.accountOverdraftLimit = accountOverdraftLimit;
exports.accountablePerson = accountablePerson;
exports.acquireLicensePage = acquireLicensePage;
exports.acquiredFrom = acquiredFrom;
exports.acrissCode = acrissCode;
exports.actionAccessibilityRequirement = actionAccessibilityRequirement;
exports.actionApplication = actionApplication;
exports.actionOption = actionOption;
exports.actionPlatform = actionPlatform;
exports.actionStatus = actionStatus;
exports.actionableFeedbackPolicy = actionableFeedbackPolicy;
exports.activeIngredient = activeIngredient;
exports.activityDuration = activityDuration;
exports.activityFrequency = activityFrequency;
exports.actor = actor;
exports.actors = actors;
exports.addOn = addOn;
exports.additionalName = additionalName;
exports.additionalNumberOfGuests = additionalNumberOfGuests;
exports.additionalProperty = additionalProperty;
exports.additionalType = additionalType;
exports.additionalVariable = additionalVariable;
exports.address = address;
exports.addressCountry = addressCountry;
exports.addressLocality = addressLocality;
exports.addressRegion = addressRegion;
exports.administrationRoute = administrationRoute;
exports.advanceBookingRequirement = advanceBookingRequirement;
exports.adverseOutcome = adverseOutcome;
exports.affectedBy = affectedBy;
exports.affiliation = affiliation;
exports.afterMedia = afterMedia;
exports.agent = agent;
exports.aggregateRating = aggregateRating;
exports.aircraft = aircraft;
exports.album = album;
exports.albumProductionType = albumProductionType;
exports.albumRelease = albumRelease;
exports.albumReleaseType = albumReleaseType;
exports.albums = albums;
exports.alcoholWarning = alcoholWarning;
exports.algorithm = algorithm;
exports.alignmentType = alignmentType;
exports.alternateName = alternateName;
exports.alternativeHeadline = alternativeHeadline;
exports.alternativeOf = alternativeOf;
exports.alumni = alumni;
exports.alumniOf = alumniOf;
exports.amenityFeature = amenityFeature;
exports.amount = amount;
exports.amountOfThisGood = amountOfThisGood;
exports.announcementLocation = announcementLocation;
exports.annualPercentageRate = annualPercentageRate;
exports.answerCount = answerCount;
exports.answerExplanation = answerExplanation;
exports.antagonist = antagonist;
exports.appearance = appearance;
exports.applicableCountry = applicableCountry;
exports.applicableLocation = applicableLocation;
exports.applicantLocationRequirements = applicantLocationRequirements;
exports.application = application;
exports.applicationCategory = applicationCategory;
exports.applicationContact = applicationContact;
exports.applicationDeadline = applicationDeadline;
exports.applicationStartDate = applicationStartDate;
exports.applicationSubCategory = applicationSubCategory;
exports.applicationSuite = applicationSuite;
exports.appliesToDeliveryMethod = appliesToDeliveryMethod;
exports.appliesToPaymentMethod = appliesToPaymentMethod;
exports.archiveHeld = archiveHeld;
exports.archivedAt = archivedAt;
exports.area = area;
exports.areaServed = areaServed;
exports.arrivalAirport = arrivalAirport;
exports.arrivalBoatTerminal = arrivalBoatTerminal;
exports.arrivalBusStop = arrivalBusStop;
exports.arrivalGate = arrivalGate;
exports.arrivalPlatform = arrivalPlatform;
exports.arrivalStation = arrivalStation;
exports.arrivalTerminal = arrivalTerminal;
exports.arrivalTime = arrivalTime;
exports.artEdition = artEdition;
exports.artMedium = artMedium;
exports.arterialBranch = arterialBranch;
exports.artform = artform;
exports.articleBody = articleBody;
exports.articleSection = articleSection;
exports.artist = artist;
exports.artworkSurface = artworkSurface;
exports.asin = asin;
exports.aspect = aspect;
exports.assembly = assembly;
exports.assemblyVersion = assemblyVersion;
exports.assesses = assesses;
exports.associatedAnatomy = associatedAnatomy;
exports.associatedArticle = associatedArticle;
exports.associatedClaimReview = associatedClaimReview;
exports.associatedDisease = associatedDisease;
exports.associatedMedia = associatedMedia;
exports.associatedMediaReview = associatedMediaReview;
exports.associatedPathophysiology = associatedPathophysiology;
exports.associatedReview = associatedReview;
exports.athlete = athlete;
exports.attendee = attendee;
exports.attendees = attendees;
exports.audience = audience;
exports.audienceType = audienceType;
exports.audio = audio;
exports.authenticator = authenticator;
exports.author = author;
exports.availability = availability;
exports.availabilityEnds = availabilityEnds;
exports.availabilityStarts = availabilityStarts;
exports.availableAtOrFrom = availableAtOrFrom;
exports.availableChannel = availableChannel;
exports.availableDeliveryMethod = availableDeliveryMethod;
exports.availableFrom = availableFrom;
exports.availableIn = availableIn;
exports.availableLanguage = availableLanguage;
exports.availableOnDevice = availableOnDevice;
exports.availableService = availableService;
exports.availableStrength = availableStrength;
exports.availableTest = availableTest;
exports.availableThrough = availableThrough;
exports.award = award;
exports.awards = awards;
exports.awayTeam = awayTeam;
exports.backstory = backstory;
exports.bankAccountType = bankAccountType;
exports.baseSalary = baseSalary;
exports.bccRecipient = bccRecipient;
exports.bed = bed;
exports.beforeMedia = beforeMedia;
exports.beneficiaryBank = beneficiaryBank;
exports.benefits = benefits;
exports.benefitsSummaryUrl = benefitsSummaryUrl;
exports.bestRating = bestRating;
exports.billingAddress = billingAddress;
exports.billingDuration = billingDuration;
exports.billingIncrement = billingIncrement;
exports.billingPeriod = billingPeriod;
exports.billingStart = billingStart;
exports.bioChemInteraction = bioChemInteraction;
exports.bioChemSimilarity = bioChemSimilarity;
exports.biologicalRole = biologicalRole;
exports.biomechnicalClass = biomechnicalClass;
exports.birthDate = birthDate;
exports.birthPlace = birthPlace;
exports.bitrate = bitrate;
exports.blogPost = blogPost;
exports.blogPosts = blogPosts;
exports.bloodSupply = bloodSupply;
exports.boardingGroup = boardingGroup;
exports.boardingPolicy = boardingPolicy;
exports.bodyLocation = bodyLocation;
exports.bodyType = bodyType;
exports.bookEdition = bookEdition;
exports.bookFormat = bookFormat;
exports.bookingAgent = bookingAgent;
exports.bookingTime = bookingTime;
exports.borrower = borrower;
exports.box = box;
exports.branch = branch;
exports.branchCode = branchCode;
exports.branchOf = branchOf;
exports.brand = brand;
exports.breadcrumb = breadcrumb;
exports.breastfeedingWarning = breastfeedingWarning;
exports.broadcastAffiliateOf = broadcastAffiliateOf;
exports.broadcastChannelId = broadcastChannelId;
exports.broadcastDisplayName = broadcastDisplayName;
exports.broadcastFrequency = broadcastFrequency;
exports.broadcastFrequencyValue = broadcastFrequencyValue;
exports.broadcastOfEvent = broadcastOfEvent;
exports.broadcastServiceTier = broadcastServiceTier;
exports.broadcastSignalModulation = broadcastSignalModulation;
exports.broadcastSubChannel = broadcastSubChannel;
exports.broadcastTimezone = broadcastTimezone;
exports.broadcaster = broadcaster;
exports.broker = broker;
exports.browserRequirements = browserRequirements;
exports.busName = busName;
exports.busNumber = busNumber;
exports.businessDays = businessDays;
exports.businessFunction = businessFunction;
exports.buyer = buyer;
exports.byArtist = byArtist;
exports.byDay = byDay;
exports.byMonth = byMonth;
exports.byMonthDay = byMonthDay;
exports.byMonthWeek = byMonthWeek;
exports.callSign = callSign;
exports.calories = calories;
exports.candidate = candidate;
exports.caption = caption;
exports.carbohydrateContent = carbohydrateContent;
exports.cargoVolume = cargoVolume;
exports.carrier = carrier;
exports.carrierRequirements = carrierRequirements;
exports.cashBack = cashBack;
exports.catalog = catalog;
exports.catalogNumber = catalogNumber;
exports.category = category;
exports.causeOf = causeOf;
exports.ccRecipient = ccRecipient;
exports.character = character;
exports.characterAttribute = characterAttribute;
exports.characterName = characterName;
exports.cheatCode = cheatCode;
exports.checkinTime = checkinTime;
exports.checkoutPageURLTemplate = checkoutPageURLTemplate;
exports.checkoutTime = checkoutTime;
exports.chemicalComposition = chemicalComposition;
exports.chemicalRole = chemicalRole;
exports.childMaxAge = childMaxAge;
exports.childMinAge = childMinAge;
exports.childTaxon = childTaxon;
exports.children = children;
exports.cholesterolContent = cholesterolContent;
exports.circle = circle;
exports.citation = citation;
exports.claimInterpreter = claimInterpreter;
exports.claimReviewed = claimReviewed;
exports.clincalPharmacology = clincalPharmacology;
exports.clinicalPharmacology = clinicalPharmacology;
exports.clipNumber = clipNumber;
exports.closes = closes;
exports.coach = coach;
exports.code = code;
exports.codeRepository = codeRepository;
exports.codeSampleType = codeSampleType;
exports.codeValue = codeValue;
exports.codingSystem = codingSystem;
exports.colleague = colleague;
exports.colleagues = colleagues;
exports.collection = collection;
exports.collectionSize = collectionSize;
exports.color = color;
exports.colorist = colorist;
exports.comment = comment;
exports.commentCount = commentCount;
exports.commentText = commentText;
exports.commentTime = commentTime;
exports.competencyRequired = competencyRequired;
exports.competitor = competitor;
exports.composer = composer;
exports.comprisedOf = comprisedOf;
exports.conditionsOfAccess = conditionsOfAccess;
exports.confirmationNumber = confirmationNumber;
exports.connectedTo = connectedTo;
exports.constraintProperty = constraintProperty;
exports.contactOption = contactOption;
exports.contactPoint = contactPoint;
exports.contactPoints = contactPoints;
exports.contactType = contactType;
exports.contactlessPayment = contactlessPayment;
exports.containedIn = containedIn;
exports.containedInPlace = containedInPlace;
exports.containsPlace = containsPlace;
exports.containsSeason = containsSeason;
exports.contentLocation = contentLocation;
exports.contentRating = contentRating;
exports.contentReferenceTime = contentReferenceTime;
exports.contentSize = contentSize;
exports.contentType = contentType;
exports.contentUrl = contentUrl;
exports.contraindication = contraindication;
exports.contributor = contributor;
exports.cookTime = cookTime;
exports.cookingMethod = cookingMethod;
exports.copyrightHolder = copyrightHolder;
exports.copyrightNotice = copyrightNotice;
exports.copyrightYear = copyrightYear;
exports.correction = correction;
exports.correctionsPolicy = correctionsPolicy;
exports.costCategory = costCategory;
exports.costCurrency = costCurrency;
exports.costOrigin = costOrigin;
exports.costPerUnit = costPerUnit;
exports.countriesNotSupported = countriesNotSupported;
exports.countriesSupported = countriesSupported;
exports.countryOfAssembly = countryOfAssembly;
exports.countryOfLastProcessing = countryOfLastProcessing;
exports.countryOfOrigin = countryOfOrigin;
exports.course = course;
exports.courseCode = courseCode;
exports.courseMode = courseMode;
exports.coursePrerequisites = coursePrerequisites;
exports.courseSchedule = courseSchedule;
exports.courseWorkload = courseWorkload;
exports.coverageEndTime = coverageEndTime;
exports.coverageStartTime = coverageStartTime;
exports.creativeWorkStatus = creativeWorkStatus;
exports.creator = creator;
exports.credentialCategory = credentialCategory;
exports.creditText = creditText;
exports.creditedTo = creditedTo;
exports.cssSelector = cssSelector;
exports.currenciesAccepted = currenciesAccepted;
exports.currency = currency;
exports.currentExchangeRate = currentExchangeRate;
exports.customer = customer;
exports.customerRemorseReturnFees = customerRemorseReturnFees;
exports.customerRemorseReturnLabelSource = customerRemorseReturnLabelSource;
exports.customerRemorseReturnShippingFeesAmount = customerRemorseReturnShippingFeesAmount;
exports.cutoffTime = cutoffTime;
exports.cvdCollectionDate = cvdCollectionDate;
exports.cvdFacilityCounty = cvdFacilityCounty;
exports.cvdFacilityId = cvdFacilityId;
exports.cvdNumBeds = cvdNumBeds;
exports.cvdNumBedsOcc = cvdNumBedsOcc;
exports.cvdNumC19Died = cvdNumC19Died;
exports.cvdNumC19HOPats = cvdNumC19HOPats;
exports.cvdNumC19HospPats = cvdNumC19HospPats;
exports.cvdNumC19MechVentPats = cvdNumC19MechVentPats;
exports.cvdNumC19OFMechVentPats = cvdNumC19OFMechVentPats;
exports.cvdNumC19OverflowPats = cvdNumC19OverflowPats;
exports.cvdNumICUBeds = cvdNumICUBeds;
exports.cvdNumICUBedsOcc = cvdNumICUBedsOcc;
exports.cvdNumTotBeds = cvdNumTotBeds;
exports.cvdNumVent = cvdNumVent;
exports.cvdNumVentUse = cvdNumVentUse;
exports.dataFeedElement = dataFeedElement;
exports.dataset = dataset;
exports.datasetTimeInterval = datasetTimeInterval;
exports.dateCreated = dateCreated;
exports.dateDeleted = dateDeleted;
exports.dateIssued = dateIssued;
exports.dateModified = dateModified;
exports.datePosted = datePosted;
exports.datePublished = datePublished;
exports.dateRead = dateRead;
exports.dateReceived = dateReceived;
exports.dateSent = dateSent;
exports.dateVehicleFirstRegistered = dateVehicleFirstRegistered;
exports.dateline = dateline;
exports.dayOfWeek = dayOfWeek;
exports.deathDate = deathDate;
exports.deathPlace = deathPlace;
exports.defaultValue = defaultValue;
exports.deliveryAddress = deliveryAddress;
exports.deliveryLeadTime = deliveryLeadTime;
exports.deliveryMethod = deliveryMethod;
exports.deliveryStatus = deliveryStatus;
exports.deliveryTime = deliveryTime;
exports.department = department;
exports.departureAirport = departureAirport;
exports.departureBoatTerminal = departureBoatTerminal;
exports.departureBusStop = departureBusStop;
exports.departureGate = departureGate;
exports.departurePlatform = departurePlatform;
exports.departureStation = departureStation;
exports.departureTerminal = departureTerminal;
exports.departureTime = departureTime;
exports.dependencies = dependencies;
exports.depth = depth;
exports.description = description;
exports.device = device;
exports.diagnosis = diagnosis;
exports.diagram = diagram;
exports.diet = diet;
exports.dietFeatures = dietFeatures;
exports.differentialDiagnosis = differentialDiagnosis;
exports.directApply = directApply;
exports.director = director;
exports.directors = directors;
exports.disambiguatingDescription = disambiguatingDescription;
exports.discount = discount;
exports.discountCode = discountCode;
exports.discountCurrency = discountCurrency;
exports.discusses = discusses;
exports.discussionUrl = discussionUrl;
exports.diseasePreventionInfo = diseasePreventionInfo;
exports.diseaseSpreadStatistics = diseaseSpreadStatistics;
exports.dissolutionDate = dissolutionDate;
exports.distance = distance;
exports.distinguishingSign = distinguishingSign;
exports.distribution = distribution;
exports.diversityPolicy = diversityPolicy;
exports.diversityStaffingReport = diversityStaffingReport;
exports.documentation = documentation;
exports.doesNotShip = doesNotShip;
exports.domainIncludes = domainIncludes;
exports.domiciledMortgage = domiciledMortgage;
exports.doorTime = doorTime;
exports.dosageForm = dosageForm;
exports.doseSchedule = doseSchedule;
exports.doseUnit = doseUnit;
exports.doseValue = doseValue;
exports.downPayment = downPayment;
exports.downloadUrl = downloadUrl;
exports.downvoteCount = downvoteCount;
exports.drainsTo = drainsTo;
exports.driveWheelConfiguration = driveWheelConfiguration;
exports.dropoffLocation = dropoffLocation;
exports.dropoffTime = dropoffTime;
exports.drug = drug;
exports.drugClass = drugClass;
exports.drugUnit = drugUnit;
exports.duns = duns;
exports.duplicateTherapy = duplicateTherapy;
exports.duration = duration;
exports.durationOfWarranty = durationOfWarranty;
exports.duringMedia = duringMedia;
exports.earlyPrepaymentPenalty = earlyPrepaymentPenalty;
exports.editEIDR = editEIDR;
exports.editor = editor;
exports.eduQuestionType = eduQuestionType;
exports.educationRequirements = educationRequirements;
exports.educationalAlignment = educationalAlignment;
exports.educationalCredentialAwarded = educationalCredentialAwarded;
exports.educationalFramework = educationalFramework;
exports.educationalLevel = educationalLevel;
exports.educationalProgramMode = educationalProgramMode;
exports.educationalRole = educationalRole;
exports.educationalUse = educationalUse;
exports.elevation = elevation;
exports.eligibilityToWorkRequirement = eligibilityToWorkRequirement;
exports.eligibleCustomerType = eligibleCustomerType;
exports.eligibleDuration = eligibleDuration;
exports.eligibleQuantity = eligibleQuantity;
exports.eligibleRegion = eligibleRegion;
exports.eligibleTransactionVolume = eligibleTransactionVolume;
exports.email = email;
exports.embedUrl = embedUrl;
exports.embeddedTextCaption = embeddedTextCaption;
exports.emissionsCO2 = emissionsCO2;
exports.employee = employee;
exports.employees = employees;
exports.employerOverview = employerOverview;
exports.employmentType = employmentType;
exports.employmentUnit = employmentUnit;
exports.encodesBioChemEntity = encodesBioChemEntity;
exports.encodesCreativeWork = encodesCreativeWork;
exports.encoding = encoding;
exports.encodingFormat = encodingFormat;
exports.encodingType = encodingType;
exports.encodings = encodings;
exports.endDate = endDate;
exports.endOffset = endOffset;
exports.endTime = endTime;
exports.endorsee = endorsee;
exports.endorsers = endorsers;
exports.energyEfficiencyScaleMax = energyEfficiencyScaleMax;
exports.energyEfficiencyScaleMin = energyEfficiencyScaleMin;
exports.engineDisplacement = engineDisplacement;
exports.enginePower = enginePower;
exports.engineType = engineType;
exports.entertainmentBusiness = entertainmentBusiness;
exports.epidemiology = epidemiology;
exports.episode = episode;
exports.episodeNumber = episodeNumber;
exports.episodes = episodes;
exports.equal = equal;
exports.error = error;
exports.estimatedCost = estimatedCost;
exports.estimatedFlightDuration = estimatedFlightDuration;
exports.estimatedSalary = estimatedSalary;
exports.estimatesRiskOf = estimatesRiskOf;
exports.ethicsPolicy = ethicsPolicy;
exports.event = event;
exports.eventAttendanceMode = eventAttendanceMode;
exports.eventSchedule = eventSchedule;
exports.eventStatus = eventStatus;
exports.events = events;
exports.evidenceLevel = evidenceLevel;
exports.evidenceOrigin = evidenceOrigin;
exports.exampleOfWork = exampleOfWork;
exports.exceptDate = exceptDate;
exports.exchangeRateSpread = exchangeRateSpread;
exports.executableLibraryName = executableLibraryName;
exports.exerciseCourse = exerciseCourse;
exports.exercisePlan = exercisePlan;
exports.exerciseRelatedDiet = exerciseRelatedDiet;
exports.exerciseType = exerciseType;
exports.exifData = exifData;
exports.expectedArrivalFrom = expectedArrivalFrom;
exports.expectedArrivalUntil = expectedArrivalUntil;
exports.expectedPrognosis = expectedPrognosis;
exports.expectsAcceptanceOf = expectsAcceptanceOf;
exports.experienceInPlaceOfEducation = experienceInPlaceOfEducation;
exports.experienceRequirements = experienceRequirements;
exports.expertConsiderations = expertConsiderations;
exports.expires = expires;
exports.expressedIn = expressedIn;
exports.familyName = familyName;
exports.fatContent = fatContent;
exports.faxNumber = faxNumber;
exports.featureList = featureList;
exports.feesAndCommissionsSpecification = feesAndCommissionsSpecification;
exports.fiberContent = fiberContent;
exports.fileFormat = fileFormat;
exports.fileSize = fileSize;
exports.financialAidEligible = financialAidEligible;
exports.firstAppearance = firstAppearance;
exports.firstPerformance = firstPerformance;
exports.flightDistance = flightDistance;
exports.flightNumber = flightNumber;
exports.floorLevel = floorLevel;
exports.floorLimit = floorLimit;
exports.floorSize = floorSize;
exports.followee = followee;
exports.follows = follows;
exports.followup = followup;
exports.foodEstablishment = foodEstablishment;
exports.foodEvent = foodEvent;
exports.foodWarning = foodWarning;
exports.founder = founder;
exports.founders = founders;
exports.foundingDate = foundingDate;
exports.foundingLocation = foundingLocation;
exports.free = free;
exports.freeShippingThreshold = freeShippingThreshold;
exports.frequency = frequency;
exports.fromLocation = fromLocation;
exports.fuelCapacity = fuelCapacity;
exports.fuelConsumption = fuelConsumption;
exports.fuelEfficiency = fuelEfficiency;
exports.fuelType = fuelType;
exports.functionalClass = functionalClass;
exports.fundedItem = fundedItem;
exports.funder = funder;
exports.funding = funding;
exports.game = game;
exports.gameAvailabilityType = gameAvailabilityType;
exports.gameEdition = gameEdition;
exports.gameItem = gameItem;
exports.gameLocation = gameLocation;
exports.gamePlatform = gamePlatform;
exports.gameServer = gameServer;
exports.gameTip = gameTip;
exports.gender = gender;
exports.genre = genre;
exports.geo = geo;
exports.geoContains = geoContains;
exports.geoCoveredBy = geoCoveredBy;
exports.geoCovers = geoCovers;
exports.geoCrosses = geoCrosses;
exports.geoDisjoint = geoDisjoint;
exports.geoEquals = geoEquals;
exports.geoIntersects = geoIntersects;
exports.geoMidpoint = geoMidpoint;
exports.geoOverlaps = geoOverlaps;
exports.geoRadius = geoRadius;
exports.geoTouches = geoTouches;
exports.geoWithin = geoWithin;
exports.geographicArea = geographicArea;
exports.gettingTestedInfo = gettingTestedInfo;
exports.givenName = givenName;
exports.globalLocationNumber = globalLocationNumber;
exports.governmentBenefitsInfo = governmentBenefitsInfo;
exports.gracePeriod = gracePeriod;
exports.grantee = grantee;
exports.greater = greater;
exports.greaterOrEqual = greaterOrEqual;
exports.gtin = gtin;
exports.gtin12 = gtin12;
exports.gtin13 = gtin13;
exports.gtin14 = gtin14;
exports.gtin8 = gtin8;
exports.guideline = guideline;
exports.guidelineDate = guidelineDate;
exports.guidelineSubject = guidelineSubject;
exports.handlingTime = handlingTime;
exports.hasAdultConsideration = hasAdultConsideration;
exports.hasBioChemEntityPart = hasBioChemEntityPart;
exports.hasBioPolymerSequence = hasBioPolymerSequence;
exports.hasBroadcastChannel = hasBroadcastChannel;
exports.hasCategoryCode = hasCategoryCode;
exports.hasCourse = hasCourse;
exports.hasCourseInstance = hasCourseInstance;
exports.hasCredential = hasCredential;
exports.hasDefinedTerm = hasDefinedTerm;
exports.hasDeliveryMethod = hasDeliveryMethod;
exports.hasDigitalDocumentPermission = hasDigitalDocumentPermission;
exports.hasDriveThroughService = hasDriveThroughService;
exports.hasEnergyConsumptionDetails = hasEnergyConsumptionDetails;
exports.hasEnergyEfficiencyCategory = hasEnergyEfficiencyCategory;
exports.hasHealthAspect = hasHealthAspect;
exports.hasMap = hasMap;
exports.hasMeasurement = hasMeasurement;
exports.hasMenu = hasMenu;
exports.hasMenuItem = hasMenuItem;
exports.hasMenuSection = hasMenuSection;
exports.hasMerchantReturnPolicy = hasMerchantReturnPolicy;
exports.hasMolecularFunction = hasMolecularFunction;
exports.hasOccupation = hasOccupation;
exports.hasOfferCatalog = hasOfferCatalog;
exports.hasPOS = hasPOS;
exports.hasPart = hasPart;
exports.hasProductReturnPolicy = hasProductReturnPolicy;
exports.hasRepresentation = hasRepresentation;
exports.hasVariant = hasVariant;
exports.headline = headline;
exports.healthCondition = healthCondition;
exports.healthPlanCoinsuranceOption = healthPlanCoinsuranceOption;
exports.healthPlanCoinsuranceRate = healthPlanCoinsuranceRate;
exports.healthPlanCopay = healthPlanCopay;
exports.healthPlanCopayOption = healthPlanCopayOption;
exports.healthPlanCostSharing = healthPlanCostSharing;
exports.healthPlanDrugOption = healthPlanDrugOption;
exports.healthPlanDrugTier = healthPlanDrugTier;
exports.healthPlanId = healthPlanId;
exports.healthPlanMarketingUrl = healthPlanMarketingUrl;
exports.healthPlanNetworkId = healthPlanNetworkId;
exports.healthPlanNetworkTier = healthPlanNetworkTier;
exports.healthPlanPharmacyCategory = healthPlanPharmacyCategory;
exports.healthcareReportingData = healthcareReportingData;
exports.height = height;
exports.highPrice = highPrice;
exports.hiringOrganization = hiringOrganization;
exports.holdingArchive = holdingArchive;
exports.homeLocation = homeLocation;
exports.homeTeam = homeTeam;
exports.honorificPrefix = honorificPrefix;
exports.honorificSuffix = honorificSuffix;
exports.hospitalAffiliation = hospitalAffiliation;
exports.hostingOrganization = hostingOrganization;
exports.hoursAvailable = hoursAvailable;
exports.howPerformed = howPerformed;
exports.httpMethod = httpMethod;
exports.iataCode = iataCode;
exports.icaoCode = icaoCode;
exports.identifier = identifier;
exports.identifyingExam = identifyingExam;
exports.identifyingTest = identifyingTest;
exports.illustrator = illustrator;
exports.image = image;
exports.imagingTechnique = imagingTechnique;
exports.inAlbum = inAlbum;
exports.inBroadcastLineup = inBroadcastLineup;
exports.inChI = inChI;
exports.inChIKey = inChIKey;
exports.inCodeSet = inCodeSet;
exports.inDefinedTermSet = inDefinedTermSet;
exports.inLanguage = inLanguage;
exports.inPlaylist = inPlaylist;
exports.inProductGroupWithID = inProductGroupWithID;
exports.inStoreReturnsOffered = inStoreReturnsOffered;
exports.inSupportOf = inSupportOf;
exports.incentiveCompensation = incentiveCompensation;
exports.incentives = incentives;
exports.includedComposition = includedComposition;
exports.includedDataCatalog = includedDataCatalog;
exports.includedInDataCatalog = includedInDataCatalog;
exports.includedInHealthInsurancePlan = includedInHealthInsurancePlan;
exports.includedRiskFactor = includedRiskFactor;
exports.includesAttraction = includesAttraction;
exports.includesHealthPlanFormulary = includesHealthPlanFormulary;
exports.includesHealthPlanNetwork = includesHealthPlanNetwork;
exports.includesObject = includesObject;
exports.increasesRiskOf = increasesRiskOf;
exports.industry = industry;
exports.ineligibleRegion = ineligibleRegion;
exports.infectiousAgent = infectiousAgent;
exports.infectiousAgentClass = infectiousAgentClass;
exports.ingredients = ingredients;
exports.inker = inker;
exports.insertion = insertion;
exports.installUrl = installUrl;
exports.instructor = instructor;
exports.instrument = instrument;
exports.intensity = intensity;
exports.interactingDrug = interactingDrug;
exports.interactionCount = interactionCount;
exports.interactionService = interactionService;
exports.interactionStatistic = interactionStatistic;
exports.interactionType = interactionType;
exports.interactivityType = interactivityType;
exports.interestRate = interestRate;
exports.interpretedAsClaim = interpretedAsClaim;
exports.inventoryLevel = inventoryLevel;
exports.inverseOf = inverseOf;
exports.isAcceptingNewPatients = isAcceptingNewPatients;
exports.isAccessibleForFree = isAccessibleForFree;
exports.isAccessoryOrSparePartFor = isAccessoryOrSparePartFor;
exports.isAvailableGenerically = isAvailableGenerically;
exports.isBasedOn = isBasedOn;
exports.isBasedOnUrl = isBasedOnUrl;
exports.isConsumableFor = isConsumableFor;
exports.isEncodedByBioChemEntity = isEncodedByBioChemEntity;
exports.isFamilyFriendly = isFamilyFriendly;
exports.isGift = isGift;
exports.isInvolvedInBiologicalProcess = isInvolvedInBiologicalProcess;
exports.isLiveBroadcast = isLiveBroadcast;
exports.isLocatedInSubcellularLocation = isLocatedInSubcellularLocation;
exports.isPartOf = isPartOf;
exports.isPartOfBioChemEntity = isPartOfBioChemEntity;
exports.isPlanForApartment = isPlanForApartment;
exports.isProprietary = isProprietary;
exports.isRelatedTo = isRelatedTo;
exports.isResizable = isResizable;
exports.isSimilarTo = isSimilarTo;
exports.isUnlabelledFallback = isUnlabelledFallback;
exports.isVariantOf = isVariantOf;
exports.isbn = isbn;
exports.isicV4 = isicV4;
exports.iso6523Code = iso6523Code;
exports.isrcCode = isrcCode;
exports.issn = issn;
exports.issueNumber = issueNumber;
exports.issuedBy = issuedBy;
exports.issuedThrough = issuedThrough;
exports.iswcCode = iswcCode;
exports.item = item;
exports.itemCondition = itemCondition;
exports.itemDefectReturnFees = itemDefectReturnFees;
exports.itemDefectReturnLabelSource = itemDefectReturnLabelSource;
exports.itemDefectReturnShippingFeesAmount = itemDefectReturnShippingFeesAmount;
exports.itemListElement = itemListElement;
exports.itemListOrder = itemListOrder;
exports.itemLocation = itemLocation;
exports.itemOffered = itemOffered;
exports.itemReviewed = itemReviewed;
exports.itemShipped = itemShipped;
exports.itinerary = itinerary;
exports.iupacName = iupacName;
exports.jobBenefits = jobBenefits;
exports.jobImmediateStart = jobImmediateStart;
exports.jobLocation = jobLocation;
exports.jobLocationType = jobLocationType;
exports.jobStartDate = jobStartDate;
exports.jobTitle = jobTitle;
exports.jurisdiction = jurisdiction;
exports.keywords = keywords;
exports.knownVehicleDamages = knownVehicleDamages;
exports.knows = knows;
exports.knowsAbout = knowsAbout;
exports.knowsLanguage = knowsLanguage;
exports.labelDetails = labelDetails;
exports.landlord = landlord;
exports.language = language;
exports.lastReviewed = lastReviewed;
exports.latitude = latitude;
exports.layoutImage = layoutImage;
exports.learningResourceType = learningResourceType;
exports.leaseLength = leaseLength;
exports.legalName = legalName;
exports.legalStatus = legalStatus;
exports.legislationApplies = legislationApplies;
exports.legislationChanges = legislationChanges;
exports.legislationConsolidates = legislationConsolidates;
exports.legislationDate = legislationDate;
exports.legislationDateVersion = legislationDateVersion;
exports.legislationIdentifier = legislationIdentifier;
exports.legislationJurisdiction = legislationJurisdiction;
exports.legislationLegalForce = legislationLegalForce;
exports.legislationLegalValue = legislationLegalValue;
exports.legislationPassedBy = legislationPassedBy;
exports.legislationResponsible = legislationResponsible;
exports.legislationTransposes = legislationTransposes;
exports.legislationType = legislationType;
exports.leiCode = leiCode;
exports.lender = lender;
exports.lesser = lesser;
exports.lesserOrEqual = lesserOrEqual;
exports.letterer = letterer;
exports.license = license;
exports.line = line;
exports.linkRelationship = linkRelationship;
exports.liveBlogUpdate = liveBlogUpdate;
exports.loanMortgageMandateAmount = loanMortgageMandateAmount;
exports.loanPaymentAmount = loanPaymentAmount;
exports.loanPaymentFrequency = loanPaymentFrequency;
exports.loanRepaymentForm = loanRepaymentForm;
exports.loanTerm = loanTerm;
exports.loanType = loanType;
exports.location = location;
exports.locationCreated = locationCreated;
exports.lodgingUnitDescription = lodgingUnitDescription;
exports.lodgingUnitType = lodgingUnitType;
exports.logo = logo;
exports.longitude = longitude;
exports.loser = loser;
exports.lowPrice = lowPrice;
exports.lyricist = lyricist;
exports.lyrics = lyrics;
exports.mainContentOfPage = mainContentOfPage;
exports.mainEntity = mainEntity;
exports.mainEntityOfPage = mainEntityOfPage;
exports.maintainer = maintainer;
exports.makesOffer = makesOffer;
exports.manufacturer = manufacturer;
exports.map = map;
exports.mapType = mapType;
exports.maps = maps;
exports.marginOfError = marginOfError;
exports.masthead = masthead;
exports.material = material;
exports.materialExtent = materialExtent;
exports.mathExpression = mathExpression;
exports.maxPrice = maxPrice;
exports.maxValue = maxValue;
exports.maximumAttendeeCapacity = maximumAttendeeCapacity;
exports.maximumEnrollment = maximumEnrollment;
exports.maximumIntake = maximumIntake;
exports.maximumPhysicalAttendeeCapacity = maximumPhysicalAttendeeCapacity;
exports.maximumVirtualAttendeeCapacity = maximumVirtualAttendeeCapacity;
exports.mealService = mealService;
exports.measuredProperty = measuredProperty;
exports.measurementDenominator = measurementDenominator;
exports.measurementMethod = measurementMethod;
exports.measurementQualifier = measurementQualifier;
exports.measurementTechnique = measurementTechnique;
exports.mechanismOfAction = mechanismOfAction;
exports.mediaAuthenticityCategory = mediaAuthenticityCategory;
exports.mediaItemAppearance = mediaItemAppearance;
exports.median = median;
exports.medicalAudience = medicalAudience;
exports.medicalSpecialty = medicalSpecialty;
exports.medicineSystem = medicineSystem;
exports.meetsEmissionStandard = meetsEmissionStandard;
exports.member = member;
exports.memberOf = memberOf;
exports.members = members;
exports.membershipNumber = membershipNumber;
exports.membershipPointsEarned = membershipPointsEarned;
exports.memoryRequirements = memoryRequirements;
exports.mentions = mentions;
exports.menu = menu;
exports.menuAddOn = menuAddOn;
exports.merchant = merchant;
exports.merchantReturnDays = merchantReturnDays;
exports.merchantReturnLink = merchantReturnLink;
exports.messageAttachment = messageAttachment;
exports.mileageFromOdometer = mileageFromOdometer;
exports.minPrice = minPrice;
exports.minValue = minValue;
exports.minimumPaymentDue = minimumPaymentDue;
exports.missionCoveragePrioritiesPolicy = missionCoveragePrioritiesPolicy;
exports.mobileUrl = mobileUrl;
exports.model = model;
exports.modelDate = modelDate;
exports.modifiedTime = modifiedTime;
exports.molecularFormula = molecularFormula;
exports.molecularWeight = molecularWeight;
exports.monoisotopicMolecularWeight = monoisotopicMolecularWeight;
exports.monthlyMinimumRepaymentAmount = monthlyMinimumRepaymentAmount;
exports.monthsOfExperience = monthsOfExperience;
exports.mpn = mpn;
exports.multipleValues = multipleValues;
exports.muscleAction = muscleAction;
exports.musicArrangement = musicArrangement;
exports.musicBy = musicBy;
exports.musicCompositionForm = musicCompositionForm;
exports.musicGroupMember = musicGroupMember;
exports.musicReleaseFormat = musicReleaseFormat;
exports.musicalKey = musicalKey;
exports.naics = naics;
exports.name = name;
exports.namedPosition = namedPosition;
exports.nationality = nationality;
exports.naturalProgression = naturalProgression;
exports.negativeNotes = negativeNotes;
exports.nerve = nerve;
exports.nerveMotor = nerveMotor;
exports.netWorth = netWorth;
exports.newsUpdatesAndGuidelines = newsUpdatesAndGuidelines;
exports.nextItem = nextItem;
exports.noBylinesPolicy = noBylinesPolicy;
exports.nonEqual = nonEqual;
exports.nonProprietaryName = nonProprietaryName;
exports.nonprofitStatus = nonprofitStatus;
exports.normalRange = normalRange;
exports.nsn = nsn;
exports.numAdults = numAdults;
exports.numChildren = numChildren;
exports.numConstraints = numConstraints;
exports.numTracks = numTracks;
exports.numberOfAccommodationUnits = numberOfAccommodationUnits;
exports.numberOfAirbags = numberOfAirbags;
exports.numberOfAvailableAccommodationUnits = numberOfAvailableAccommodationUnits;
exports.numberOfAxles = numberOfAxles;
exports.numberOfBathroomsTotal = numberOfBathroomsTotal;
exports.numberOfBedrooms = numberOfBedrooms;
exports.numberOfBeds = numberOfBeds;
exports.numberOfCredits = numberOfCredits;
exports.numberOfDoors = numberOfDoors;
exports.numberOfEmployees = numberOfEmployees;
exports.numberOfEpisodes = numberOfEpisodes;
exports.numberOfForwardGears = numberOfForwardGears;
exports.numberOfFullBathrooms = numberOfFullBathrooms;
exports.numberOfItems = numberOfItems;
exports.numberOfLoanPayments = numberOfLoanPayments;
exports.numberOfPages = numberOfPages;
exports.numberOfPartialBathrooms = numberOfPartialBathrooms;
exports.numberOfPlayers = numberOfPlayers;
exports.numberOfPreviousOwners = numberOfPreviousOwners;
exports.numberOfRooms = numberOfRooms;
exports.numberOfSeasons = numberOfSeasons;
exports.numberedPosition = numberedPosition;
exports.nutrition = nutrition;
exports.object = object;
exports.observationAbout = observationAbout;
exports.observationDate = observationDate;
exports.observationPeriod = observationPeriod;
exports.occupancy = occupancy;
exports.occupationLocation = occupationLocation;
exports.occupationalCategory = occupationalCategory;
exports.occupationalCredentialAwarded = occupationalCredentialAwarded;
exports.offerCount = offerCount;
exports.offeredBy = offeredBy;
exports.offers = offers;
exports.offersPrescriptionByMail = offersPrescriptionByMail;
exports.openingHours = openingHours;
exports.openingHoursSpecification = openingHoursSpecification;
exports.opens = opens;
exports.operatingSystem = operatingSystem;
exports.opponent = opponent;
exports.option = option;
exports.orderDate = orderDate;
exports.orderDelivery = orderDelivery;
exports.orderItemNumber = orderItemNumber;
exports.orderItemStatus = orderItemStatus;
exports.orderNumber = orderNumber;
exports.orderQuantity = orderQuantity;
exports.orderStatus = orderStatus;
exports.orderedItem = orderedItem;
exports.organizer = organizer;
exports.originAddress = originAddress;
exports.originalMediaContextDescription = originalMediaContextDescription;
exports.originalMediaLink = originalMediaLink;
exports.originatesFrom = originatesFrom;
exports.overdosage = overdosage;
exports.ownedFrom = ownedFrom;
exports.ownedThrough = ownedThrough;
exports.ownershipFundingInfo = ownershipFundingInfo;
exports.owns = owns;
exports.pageEnd = pageEnd;
exports.pageStart = pageStart;
exports.pagination = pagination;
exports.parent = parent;
exports.parentItem = parentItem;
exports.parentOrganization = parentOrganization;
exports.parentService = parentService;
exports.parentTaxon = parentTaxon;
exports.parents = parents;
exports.partOfEpisode = partOfEpisode;
exports.partOfInvoice = partOfInvoice;
exports.partOfOrder = partOfOrder;
exports.partOfSeason = partOfSeason;
exports.partOfSeries = partOfSeries;
exports.partOfSystem = partOfSystem;
exports.partOfTVSeries = partOfTVSeries;
exports.partOfTrip = partOfTrip;
exports.participant = participant;
exports.partySize = partySize;
exports.passengerPriorityStatus = passengerPriorityStatus;
exports.passengerSequenceNumber = passengerSequenceNumber;
exports.pathophysiology = pathophysiology;
exports.pattern = pattern;
exports.payload = payload;
exports.paymentAccepted = paymentAccepted;
exports.paymentDue = paymentDue;
exports.paymentDueDate = paymentDueDate;
exports.paymentMethod = paymentMethod;
exports.paymentMethodId = paymentMethodId;
exports.paymentStatus = paymentStatus;
exports.paymentUrl = paymentUrl;
exports.penciler = penciler;
exports.percentile10 = percentile10;
exports.percentile25 = percentile25;
exports.percentile75 = percentile75;
exports.percentile90 = percentile90;
exports.performTime = performTime;
exports.performer = performer;
exports.performerIn = performerIn;
exports.performers = performers;
exports.permissionType = permissionType;
exports.permissions = permissions;
exports.permitAudience = permitAudience;
exports.permittedUsage = permittedUsage;
exports.petsAllowed = petsAllowed;
exports.phoneticText = phoneticText;
exports.photo = photo;
exports.photos = photos;
exports.physicalRequirement = physicalRequirement;
exports.physiologicalBenefits = physiologicalBenefits;
exports.pickupLocation = pickupLocation;
exports.pickupTime = pickupTime;
exports.playMode = playMode;
exports.playerType = playerType;
exports.playersOnline = playersOnline;
exports.polygon = polygon;
exports.populationType = populationType;
exports.position = position;
exports.positiveNotes = positiveNotes;
exports.possibleComplication = possibleComplication;
exports.possibleTreatment = possibleTreatment;
exports.postOfficeBoxNumber = postOfficeBoxNumber;
exports.postOp = postOp;
exports.postalCode = postalCode;
exports.postalCodeBegin = postalCodeBegin;
exports.postalCodeEnd = postalCodeEnd;
exports.postalCodePrefix = postalCodePrefix;
exports.postalCodeRange = postalCodeRange;
exports.potentialAction = potentialAction;
exports.potentialUse = potentialUse;
exports.preOp = preOp;
exports.predecessorOf = predecessorOf;
exports.pregnancyCategory = pregnancyCategory;
exports.pregnancyWarning = pregnancyWarning;
exports.prepTime = prepTime;
exports.preparation = preparation;
exports.prescribingInfo = prescribingInfo;
exports.prescriptionStatus = prescriptionStatus;
exports.previousItem = previousItem;
exports.previousStartDate = previousStartDate;
exports.price = price;
exports.priceComponent = priceComponent;
exports.priceComponentType = priceComponentType;
exports.priceCurrency = priceCurrency;
exports.priceRange = priceRange;
exports.priceSpecification = priceSpecification;
exports.priceType = priceType;
exports.priceValidUntil = priceValidUntil;
exports.primaryImageOfPage = primaryImageOfPage;
exports.primaryPrevention = primaryPrevention;
exports.printColumn = printColumn;
exports.printEdition = printEdition;
exports.printPage = printPage;
exports.printSection = printSection;
exports.procedure = procedure;
exports.procedureType = procedureType;
exports.processingTime = processingTime;
exports.processorRequirements = processorRequirements;
exports.producer = producer;
exports.produces = produces;
exports.productGroupID = productGroupID;
exports.productID = productID;
exports.productReturnDays = productReturnDays;
exports.productReturnLink = productReturnLink;
exports.productSupported = productSupported;
exports.productionCompany = productionCompany;
exports.productionDate = productionDate;
exports.proficiencyLevel = proficiencyLevel;
exports.programMembershipUsed = programMembershipUsed;
exports.programName = programName;
exports.programPrerequisites = programPrerequisites;
exports.programType = programType;
exports.programmingLanguage = programmingLanguage;
exports.programmingModel = programmingModel;
exports.propertyID = propertyID;
exports.proprietaryName = proprietaryName;
exports.proteinContent = proteinContent;
exports.provider = provider;
exports.providerMobility = providerMobility;
exports.providesBroadcastService = providesBroadcastService;
exports.providesService = providesService;
exports.publicAccess = publicAccess;
exports.publicTransportClosuresInfo = publicTransportClosuresInfo;
exports.publication = publication;
exports.publicationType = publicationType;
exports.publishedBy = publishedBy;
exports.publishedOn = publishedOn;
exports.publisher = publisher;
exports.publisherImprint = publisherImprint;
exports.publishingPrinciples = publishingPrinciples;
exports.purchaseDate = purchaseDate;
exports.qualifications = qualifications;
exports.quarantineGuidelines = quarantineGuidelines;
exports.query = query;
exports.quest = quest;
exports.question = question;
exports.rangeIncludes = rangeIncludes;
exports.ratingCount = ratingCount;
exports.ratingExplanation = ratingExplanation;
exports.ratingValue = ratingValue;
exports.readBy = readBy;
exports.readonlyValue = readonlyValue;
exports.realEstateAgent = realEstateAgent;
exports.recipe = recipe;
exports.recipeCategory = recipeCategory;
exports.recipeCuisine = recipeCuisine;
exports.recipeIngredient = recipeIngredient;
exports.recipeInstructions = recipeInstructions;
exports.recipeYield = recipeYield;
exports.recipient = recipient;
exports.recognizedBy = recognizedBy;
exports.recognizingAuthority = recognizingAuthority;
exports.recommendationStrength = recommendationStrength;
exports.recommendedIntake = recommendedIntake;
exports.recordLabel = recordLabel;
exports.recordedAs = recordedAs;
exports.recordedAt = recordedAt;
exports.recordedIn = recordedIn;
exports.recordingOf = recordingOf;
exports.recourseLoan = recourseLoan;
exports.referenceQuantity = referenceQuantity;
exports.referencesOrder = referencesOrder;
exports.refundType = refundType;
exports.regionDrained = regionDrained;
exports.regionsAllowed = regionsAllowed;
exports.relatedAnatomy = relatedAnatomy;
exports.relatedCondition = relatedCondition;
exports.relatedDrug = relatedDrug;
exports.relatedLink = relatedLink;
exports.relatedStructure = relatedStructure;
exports.relatedTherapy = relatedTherapy;
exports.relatedTo = relatedTo;
exports.releaseDate = releaseDate;
exports.releaseNotes = releaseNotes;
exports.releaseOf = releaseOf;
exports.releasedEvent = releasedEvent;
exports.relevantOccupation = relevantOccupation;
exports.relevantSpecialty = relevantSpecialty;
exports.remainingAttendeeCapacity = remainingAttendeeCapacity;
exports.renegotiableLoan = renegotiableLoan;
exports.repeatCount = repeatCount;
exports.repeatFrequency = repeatFrequency;
exports.repetitions = repetitions;
exports.replacee = replacee;
exports.replacer = replacer;
exports.replyToUrl = replyToUrl;
exports.reportNumber = reportNumber;
exports.representativeOfPage = representativeOfPage;
exports.requiredCollateral = requiredCollateral;
exports.requiredGender = requiredGender;
exports.requiredMaxAge = requiredMaxAge;
exports.requiredMinAge = requiredMinAge;
exports.requiredQuantity = requiredQuantity;
exports.requirements = requirements;
exports.requiresSubscription = requiresSubscription;
exports.reservationFor = reservationFor;
exports.reservationId = reservationId;
exports.reservationStatus = reservationStatus;
exports.reservedTicket = reservedTicket;
exports.responsibilities = responsibilities;
exports.restPeriods = restPeriods;
exports.restockingFee = restockingFee;
exports.result = result;
exports.resultComment = resultComment;
exports.resultReview = resultReview;
exports.returnFees = returnFees;
exports.returnLabelSource = returnLabelSource;
exports.returnMethod = returnMethod;
exports.returnPolicyCategory = returnPolicyCategory;
exports.returnPolicyCountry = returnPolicyCountry;
exports.returnPolicySeasonalOverride = returnPolicySeasonalOverride;
exports.returnShippingFeesAmount = returnShippingFeesAmount;
exports.review = review;
exports.reviewAspect = reviewAspect;
exports.reviewBody = reviewBody;
exports.reviewCount = reviewCount;
exports.reviewRating = reviewRating;
exports.reviewedBy = reviewedBy;
exports.reviews = reviews;
exports.riskFactor = riskFactor;
exports.risks = risks;
exports.roleName = roleName;
exports.roofLoad = roofLoad;
exports.rsvpResponse = rsvpResponse;
exports.runsTo = runsTo;
exports.runtime = runtime;
exports.runtimePlatform = runtimePlatform;
exports.rxcui = rxcui;
exports.safetyConsideration = safetyConsideration;
exports.salaryCurrency = salaryCurrency;
exports.salaryUponCompletion = salaryUponCompletion;
exports.sameAs = sameAs;
exports.sampleType = sampleType;
exports.saturatedFatContent = saturatedFatContent;
exports.scheduleTimezone = scheduleTimezone;
exports.scheduledPaymentDate = scheduledPaymentDate;
exports.scheduledTime = scheduledTime;
exports.schemaImport = schemaImport;
exports.schemaVersion = schemaVersion;
exports.schoolClosuresInfo = schoolClosuresInfo;
exports.screenCount = screenCount;
exports.screenshot = screenshot;
exports.sdDatePublished = sdDatePublished;
exports.sdLicense = sdLicense;
exports.sdPublisher = sdPublisher;
exports.season = season;
exports.seasonNumber = seasonNumber;
exports.seasons = seasons;
exports.seatNumber = seatNumber;
exports.seatRow = seatRow;
exports.seatSection = seatSection;
exports.seatingCapacity = seatingCapacity;
exports.seatingType = seatingType;
exports.secondaryPrevention = secondaryPrevention;
exports.securityClearanceRequirement = securityClearanceRequirement;
exports.securityScreening = securityScreening;
exports.seeks = seeks;
exports.seller = seller;
exports.sender = sender;
exports.sensoryRequirement = sensoryRequirement;
exports.sensoryUnit = sensoryUnit;
exports.serialNumber = serialNumber;
exports.seriousAdverseOutcome = seriousAdverseOutcome;
exports.serverStatus = serverStatus;
exports.servesCuisine = servesCuisine;
exports.serviceArea = serviceArea;
exports.serviceAudience = serviceAudience;
exports.serviceLocation = serviceLocation;
exports.serviceOperator = serviceOperator;
exports.serviceOutput = serviceOutput;
exports.servicePhone = servicePhone;
exports.servicePostalAddress = servicePostalAddress;
exports.serviceSmsNumber = serviceSmsNumber;
exports.serviceType = serviceType;
exports.serviceUrl = serviceUrl;
exports.servingSize = servingSize;
exports.sha256 = sha256;
exports.sharedContent = sharedContent;
exports.shippingDestination = shippingDestination;
exports.shippingDetails = shippingDetails;
exports.shippingLabel = shippingLabel;
exports.shippingOrigin = shippingOrigin;
exports.shippingRate = shippingRate;
exports.shippingSettingsLink = shippingSettingsLink;
exports.sibling = sibling;
exports.siblings = siblings;
exports.signDetected = signDetected;
exports.signOrSymptom = signOrSymptom;
exports.significance = significance;
exports.significantLink = significantLink;
exports.significantLinks = significantLinks;
exports.size = size;
exports.sizeGroup = sizeGroup;
exports.sizeSystem = sizeSystem;
exports.skills = skills;
exports.sku = sku;
exports.slogan = slogan;
exports.smiles = smiles;
exports.smokingAllowed = smokingAllowed;
exports.sodiumContent = sodiumContent;
exports.softwareAddOn = softwareAddOn;
exports.softwareHelp = softwareHelp;
exports.softwareRequirements = softwareRequirements;
exports.softwareVersion = softwareVersion;
exports.sourceOrganization = sourceOrganization;
exports.sourcedFrom = sourcedFrom;
exports.spatial = spatial;
exports.spatialCoverage = spatialCoverage;
exports.speakable = speakable;
exports.specialCommitments = specialCommitments;
exports.specialOpeningHoursSpecification = specialOpeningHoursSpecification;
exports.specialty = specialty;
exports.speechToTextMarkup = speechToTextMarkup;
exports.speed = speed;
exports.spokenByCharacter = spokenByCharacter;
exports.sponsor = sponsor;
exports.sport = sport;
exports.sportsActivityLocation = sportsActivityLocation;
exports.sportsEvent = sportsEvent;
exports.sportsTeam = sportsTeam;
exports.spouse = spouse;
exports.stage = stage;
exports.stageAsNumber = stageAsNumber;
exports.starRating = starRating;
exports.startDate = startDate;
exports.startOffset = startOffset;
exports.startTime = startTime;
exports.statType = statType;
exports.status = status;
exports.steeringPosition = steeringPosition;
exports.step = step;
exports.stepValue = stepValue;
exports.steps = steps;
exports.storageRequirements = storageRequirements;
exports.streetAddress = streetAddress;
exports.strengthUnit = strengthUnit;
exports.strengthValue = strengthValue;
exports.structuralClass = structuralClass;
exports.study = study;
exports.studyDesign = studyDesign;
exports.studyLocation = studyLocation;
exports.studySubject = studySubject;
exports.stupidProperty = stupidProperty;
exports.subEvent = subEvent;
exports.subEvents = subEvents;
exports.subOrganization = subOrganization;
exports.subReservation = subReservation;
exports.subStageSuffix = subStageSuffix;
exports.subStructure = subStructure;
exports.subTest = subTest;
exports.subTrip = subTrip;
exports.subjectOf = subjectOf;
exports.subtitleLanguage = subtitleLanguage;
exports.successorOf = successorOf;
exports.sugarContent = sugarContent;
exports.suggestedAge = suggestedAge;
exports.suggestedAnswer = suggestedAnswer;
exports.suggestedGender = suggestedGender;
exports.suggestedMaxAge = suggestedMaxAge;
exports.suggestedMeasurement = suggestedMeasurement;
exports.suggestedMinAge = suggestedMinAge;
exports.suitableForDiet = suitableForDiet;
exports.superEvent = superEvent;
exports.supersededBy = supersededBy;
exports.supply = supply;
exports.supplyTo = supplyTo;
exports.supportingData = supportingData;
exports.surface = surface;
exports.syllabusSections = syllabusSections;
exports.target = target;
exports.targetCollection = targetCollection;
exports.targetDescription = targetDescription;
exports.targetName = targetName;
exports.targetPlatform = targetPlatform;
exports.targetPopulation = targetPopulation;
exports.targetProduct = targetProduct;
exports.targetUrl = targetUrl;
exports.taxID = taxID;
exports.taxonRank = taxonRank;
exports.taxonomicRange = taxonomicRange;
exports.teaches = teaches;
exports.telephone = telephone;
exports.temporal = temporal;
exports.temporalCoverage = temporalCoverage;
exports.termCode = termCode;
exports.termDuration = termDuration;
exports.termsOfService = termsOfService;
exports.termsPerYear = termsPerYear;
exports.text = text;
exports.textValue = textValue;
exports.thumbnail = thumbnail;
exports.thumbnailUrl = thumbnailUrl;
exports.tickerSymbol = tickerSymbol;
exports.ticketNumber = ticketNumber;
exports.ticketToken = ticketToken;
exports.ticketedSeat = ticketedSeat;
exports.timeOfDay = timeOfDay;
exports.timeRequired = timeRequired;
exports.timeToComplete = timeToComplete;
exports.tissueSample = tissueSample;
exports.title = title;
exports.titleEIDR = titleEIDR;
exports.toLocation = toLocation;
exports.toRecipient = toRecipient;
exports.tocContinuation = tocContinuation;
exports.tocEntry = tocEntry;
exports.tongueWeight = tongueWeight;
exports.tool = tool;
exports.torque = torque;
exports.totalHistoricalEnrollment = totalHistoricalEnrollment;
exports.totalJobOpenings = totalJobOpenings;
exports.totalPaymentDue = totalPaymentDue;
exports.totalPrice = totalPrice;
exports.totalTime = totalTime;
exports.tourBookingPage = tourBookingPage;
exports.touristType = touristType;
exports.track = track;
exports.trackingNumber = trackingNumber;
exports.trackingUrl = trackingUrl;
exports.tracks = tracks;
exports.trailer = trailer;
exports.trailerWeight = trailerWeight;
exports.trainName = trainName;
exports.trainNumber = trainNumber;
exports.trainingSalary = trainingSalary;
exports.transFatContent = transFatContent;
exports.transcript = transcript;
exports.transitTime = transitTime;
exports.transitTimeLabel = transitTimeLabel;
exports.translationOfWork = translationOfWork;
exports.translator = translator;
exports.transmissionMethod = transmissionMethod;
exports.travelBans = travelBans;
exports.trialDesign = trialDesign;
exports.tributary = tributary;
exports.tripOrigin = tripOrigin;
exports.typeOfBed = typeOfBed;
exports.typeOfGood = typeOfGood;
exports.typicalAgeRange = typicalAgeRange;
exports.typicalCreditsPerTerm = typicalCreditsPerTerm;
exports.typicalTest = typicalTest;
exports.underName = underName;
exports.unitCode = unitCode;
exports.unitText = unitText;
exports.unnamedSourcesPolicy = unnamedSourcesPolicy;
exports.unsaturatedFatContent = unsaturatedFatContent;
exports.uploadDate = uploadDate;
exports.upvoteCount = upvoteCount;
exports.url = url;
exports.urlTemplate = urlTemplate;
exports.usageInfo = usageInfo;
exports.usedToDiagnose = usedToDiagnose;
exports.userInteractionCount = userInteractionCount;
exports.usesDevice = usesDevice;
exports.usesHealthPlanIdStandard = usesHealthPlanIdStandard;
exports.utterances = utterances;
exports.validFor = validFor;
exports.validFrom = validFrom;
exports.validIn = validIn;
exports.validThrough = validThrough;
exports.validUntil = validUntil;
exports.value = value;
exports.valueAddedTaxIncluded = valueAddedTaxIncluded;
exports.valueMaxLength = valueMaxLength;
exports.valueMinLength = valueMinLength;
exports.valueName = valueName;
exports.valuePattern = valuePattern;
exports.valueReference = valueReference;
exports.valueRequired = valueRequired;
exports.variableMeasured = variableMeasured;
exports.variablesMeasured = variablesMeasured;
exports.variantCover = variantCover;
exports.variesBy = variesBy;
exports.vatID = vatID;
exports.vehicleConfiguration = vehicleConfiguration;
exports.vehicleEngine = vehicleEngine;
exports.vehicleIdentificationNumber = vehicleIdentificationNumber;
exports.vehicleInteriorColor = vehicleInteriorColor;
exports.vehicleInteriorType = vehicleInteriorType;
exports.vehicleModelDate = vehicleModelDate;
exports.vehicleSeatingCapacity = vehicleSeatingCapacity;
exports.vehicleSpecialUsage = vehicleSpecialUsage;
exports.vehicleTransmission = vehicleTransmission;
exports.vendor = vendor;
exports.verificationFactCheckingPolicy = verificationFactCheckingPolicy;
exports.version = version;
exports.video = video;
exports.videoFormat = videoFormat;
exports.videoFrameSize = videoFrameSize;
exports.videoQuality = videoQuality;
exports.volumeNumber = volumeNumber;
exports.warning = warning;
exports.warranty = warranty;
exports.warrantyPromise = warrantyPromise;
exports.warrantyScope = warrantyScope;
exports.webCheckinTime = webCheckinTime;
exports.webFeed = webFeed;
exports.weight = weight;
exports.weightTotal = weightTotal;
exports.wheelbase = wheelbase;
exports.width = width;
exports.winner = winner;
exports.wordCount = wordCount;
exports.workExample = workExample;
exports.workFeatured = workFeatured;
exports.workHours = workHours;
exports.workLocation = workLocation;
exports.workPerformed = workPerformed;
exports.workPresented = workPresented;
exports.workTranslation = workTranslation;
exports.workload = workload;
exports.worksFor = worksFor;
exports.worstRating = worstRating;
exports.xpath = xpath;
exports.yearBuilt = yearBuilt;
exports.yearlyRevenue = yearlyRevenue;
exports.yearsInOperation = yearsInOperation;
exports.yield__workaround = yield__workaround;
