type OwlClass = string;
type OwlObjectProperty = string;
type OwlDatatypeProperty = string;
/**
 * VEVENT
 *
 * Provide a grouping of component properties that describe an event.
 *
 * http://www.w3.org/2002/12/cal/ical#Vevent
 */
export declare const Vevent: OwlClass;
/**
 * VTODO
 *
 * Provide a grouping of calendar properties that describe a to-do.
 *
 * http://www.w3.org/2002/12/cal/ical#Vtodo
 */
export declare const Vtodo: OwlClass;
/**
 * VJOURNAL
 *
 * Provide a grouping of component properties that describe a journal entry.
 *
 * http://www.w3.org/2002/12/cal/ical#Vjournal
 */
export declare const Vjournal: OwlClass;
/**
 * VFREEBUSY
 *
 * Provide a grouping of component properties that describe either a request for free/busy time, describe a response to a request for free/busy time or describe a published set of busy time.
 *
 * http://www.w3.org/2002/12/cal/ical#Vfreebusy
 */
export declare const Vfreebusy: OwlClass;
/**
 * VTIMEZONE
 *
 * Provide a grouping of component properties that defines a time zone.
 *
 * http://www.w3.org/2002/12/cal/ical#Vtimezone
 */
export declare const Vtimezone: OwlClass;
/**
 * VALARM
 *
 * Provide a grouping of component properties that define an alarm.
 *
 * http://www.w3.org/2002/12/cal/ical#Valarm
 */
export declare const Valarm: OwlClass;
/**
 * CALSCALE
 *
 * This property defines the calendar scale used for the calendar information specified in the iCalendar object.
 *
 * http://www.w3.org/2002/12/cal/ical#calscale
 */
export declare const calscale: OwlDatatypeProperty;
/**
 * METHOD
 *
 * This property defines the iCalendar object method associated with the calendar object.
 *
 * http://www.w3.org/2002/12/cal/ical#method
 */
export declare const method: OwlDatatypeProperty;
/**
 * PRODID
 *
 * This property specifies the identifier for the product that created the iCalendar object.
 *
 * http://www.w3.org/2002/12/cal/ical#prodid
 */
export declare const prodid: OwlDatatypeProperty;
/**
 * VERSION
 *
 * This property specifies the identifier corresponding to the highest version number or the minimum and maximum range of the iCalendar specification that is required in order to interpret the iCalendar object.
 *
 * http://www.w3.org/2002/12/cal/ical#version
 */
export declare const version: OwlDatatypeProperty;
/**
 * ATTACH
 *
 * The property provides the capability to associate a document object with a calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#attach
 */
export declare const attach: OwlObjectProperty;
/**
 * CATEGORIES
 *
 * This property defines the categories for a calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#categories
 */
export declare const categories: OwlDatatypeProperty;
/**
 * CLASS
 *
 * This property defines the access classification for a calendar component.
 * Note that `class` is a reserved Javascript keyword, and is therefore suffixed by `__workaround`.
 * For a list of reserved keywords, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords.
 *
 * http://www.w3.org/2002/12/cal/ical#class
 */
export declare const class__workaround: OwlDatatypeProperty;
/**
 * COMMENT
 *
 * This property specifies non-processing information intended to provide a comment to the calendar user.
 *
 * http://www.w3.org/2002/12/cal/ical#comment
 */
export declare const comment: OwlDatatypeProperty;
/**
 * DESCRIPTION
 *
 * This property provides a more complete description of the calendar component, than that provided by the "SUMMARY" property.
 *
 * http://www.w3.org/2002/12/cal/ical#description
 */
export declare const description: OwlDatatypeProperty;
/**
 * GEO
 *
 * This property specifies information related to the global position for the activity specified by a calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#geo
 */
export declare const geo: OwlObjectProperty;
/**
 *
 *
 *
 *
 * http://www.w3.org/2002/12/cal/ical#List_of_Float
 */
export declare const List_of_Float: OwlClass;
/**
 * LOCATION
 *
 * The property defines the intended venue for the activity defined by a calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#location
 */
export declare const location: OwlDatatypeProperty;
/**
 * PERCENT-COMPLETE
 *
 * This property is used by an assignee or delegatee of a to-do to convey the percent completion of a to-do to the Organizer.
 *
 * http://www.w3.org/2002/12/cal/ical#percentComplete
 */
export declare const percentComplete: OwlDatatypeProperty;
/**
 * PRIORITY
 *
 * The property defines the relative priority for a calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#priority
 */
export declare const priority: OwlDatatypeProperty;
/**
 * RESOURCES
 *
 * This property defines the equipment or resources anticipated for an activity specified by a calendar entity..
 *
 * http://www.w3.org/2002/12/cal/ical#resources
 */
export declare const resources: OwlDatatypeProperty;
/**
 * STATUS
 *
 * This property defines the overall status or confirmation for the calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#status
 */
export declare const status: OwlDatatypeProperty;
/**
 * SUMMARY
 *
 * This property defines a short summary or subject for the calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#summary
 */
export declare const summary: OwlDatatypeProperty;
/**
 * COMPLETED
 *
 * This property defines the date and time that a to-do was actually completed.
 *
 * http://www.w3.org/2002/12/cal/ical#completed
 */
export declare const completed: OwlObjectProperty;
/**
 * DTEND
 *
 * This property specifies the date and time that a calendar component ends.
 *
 * http://www.w3.org/2002/12/cal/ical#dtend
 */
export declare const dtend: OwlObjectProperty;
/**
 *
 *
 *
 *
 * http://www.w3.org/2002/12/cal/ical#Value_DATE
 */
export declare const Value_DATE: OwlClass;
/**
 * DUE
 *
 * This property defines the date and time that a to-do is expected to be completed.
 *
 * http://www.w3.org/2002/12/cal/ical#due
 */
export declare const due: OwlObjectProperty;
/**
 * DTSTART
 *
 * This property specifies when the calendar component begins.
 *
 * http://www.w3.org/2002/12/cal/ical#dtstart
 */
export declare const dtstart: OwlObjectProperty;
/**
 * DURATION
 *
 * The property specifies a positive duration of time.
 *
 * http://www.w3.org/2002/12/cal/ical#duration
 */
export declare const duration: OwlObjectProperty;
/**
 *
 *
 *
 *
 * http://www.w3.org/2002/12/cal/ical#Value_DURATION
 */
export declare const Value_DURATION: OwlClass;
/**
 * FREEBUSY
 *
 * The property defines one or more free or busy time intervals.
 *
 * http://www.w3.org/2002/12/cal/ical#freebusy
 */
export declare const freebusy: OwlObjectProperty;
/**
 *
 *
 *
 *
 * http://www.w3.org/2002/12/cal/ical#Value_PERIOD
 */
export declare const Value_PERIOD: OwlClass;
/**
 * TRANSP
 *
 * This property defines whether an event is transparent or not to busy time searches.
 *
 * http://www.w3.org/2002/12/cal/ical#transp
 */
export declare const transp: OwlDatatypeProperty;
/**
 * TZID
 *
 * This property specifies the text value that uniquely identifies the "VTIMEZONE" calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#tzid
 */
export declare const tzid: OwlDatatypeProperty;
/**
 * TZNAME
 *
 * This property specifies the customary designation for a time zone description.
 *
 * http://www.w3.org/2002/12/cal/ical#tzname
 */
export declare const tzname: OwlDatatypeProperty;
/**
 * TZOFFSETFROM
 *
 * This property specifies the offset which is in use prior to this time zone observance.
 *
 * http://www.w3.org/2002/12/cal/ical#tzoffsetfrom
 */
export declare const tzoffsetfrom: OwlDatatypeProperty;
/**
 * TZOFFSETTO
 *
 * This property specifies the offset which is in use in this time zone observance.
 *
 * http://www.w3.org/2002/12/cal/ical#tzoffsetto
 */
export declare const tzoffsetto: OwlDatatypeProperty;
/**
 * TZURL
 *
 * The TZURL provides a means for a VTIMEZONE component to point to a network location that can be used to retrieve an up-to- date version of itself.
 *
 * http://www.w3.org/2002/12/cal/ical#tzurl
 */
export declare const tzurl: OwlObjectProperty;
/**
 * ATTENDEE
 *
 * The property defines an "Attendee" within a calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#attendee
 */
export declare const attendee: OwlObjectProperty;
/**
 * CONTACT
 *
 * The property is used to represent contact information or alternately a reference to contact information associated with the calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#contact
 */
export declare const contact: OwlDatatypeProperty;
/**
 * ORGANIZER
 *
 * The property defines the organizer for a calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#organizer
 */
export declare const organizer: OwlObjectProperty;
/**
 * RECURRENCE-ID
 *
 * This property is used in conjunction with the "UID" and "SEQUENCE" property to identify a specific instance of a recurring "VEVENT", "VTODO" or "VJOURNAL" calendar component. The property value is the effective value of the "DTSTART" property of the recurrence instance.
 *
 * http://www.w3.org/2002/12/cal/ical#recurrenceId
 */
export declare const recurrenceId: OwlObjectProperty;
/**
 *
 *
 *
 *
 * http://www.w3.org/2002/12/cal/ical#DomainOf_rrule
 */
export declare const DomainOf_rrule: OwlClass;
/**
 * RELATED-TO
 *
 * The property is used to represent a relationship or reference between one calendar component and another.
 *
 * http://www.w3.org/2002/12/cal/ical#relatedTo
 */
export declare const relatedTo: OwlDatatypeProperty;
/**
 * URL
 *
 * This property defines a Uniform Resource Locator (URL) associated with the iCalendar object.
 *
 * http://www.w3.org/2002/12/cal/ical#url
 */
export declare const url: OwlObjectProperty;
/**
 * UID
 *
 * This property defines the persistent, globally unique identifier for the calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#uid
 */
export declare const uid: OwlDatatypeProperty;
/**
 * EXDATE
 *
 * This property defines the list of date/time exceptions for a recurring calendar component.
 *
 * http://www.w3.org/2002/12/cal/ical#exdate
 */
export declare const exdate: OwlObjectProperty;
/**
 * EXRULE
 *
 * This property defines a rule or repeating pattern for an exception to a recurrence set.
 *
 * http://www.w3.org/2002/12/cal/ical#exrule
 */
export declare const exrule: OwlObjectProperty;
/**
 *
 *
 *
 *
 * http://www.w3.org/2002/12/cal/ical#Value_RECUR
 */
export declare const Value_RECUR: OwlClass;
/**
 * RDATE
 *
 * This property defines the list of date/times for a recurrence set.
 *
 * http://www.w3.org/2002/12/cal/ical#rdate
 */
export declare const rdate: OwlObjectProperty;
/**
 * RRULE
 *
 * This property defines a rule or repeating pattern for recurring events, to-dos, or time zone definitions.
 *
 * http://www.w3.org/2002/12/cal/ical#rrule
 */
export declare const rrule: OwlObjectProperty;
/**
 * ACTION
 *
 * This property defines the action to be invoked when an alarm is triggered.
 *
 * http://www.w3.org/2002/12/cal/ical#action
 */
export declare const action: OwlDatatypeProperty;
/**
 * REPEAT
 *
 * This property defines the number of time the alarm should be repeated, after the initial trigger.
 *
 * http://www.w3.org/2002/12/cal/ical#repeat
 */
export declare const repeat: OwlDatatypeProperty;
/**
 * TRIGGER
 *
 * This property specifies when an alarm will trigger.
 *
 * http://www.w3.org/2002/12/cal/ical#trigger
 */
export declare const trigger: OwlObjectProperty;
/**
 * CREATED
 *
 * This property specifies the date and time that the calendar information was created by the calendar user agent in the calendar store. Note: This is analogous to the creation date and time for a file in the file system.
 *
 * http://www.w3.org/2002/12/cal/ical#created
 */
export declare const created: OwlObjectProperty;
/**
 * DTSTAMP
 *
 * The property indicates the date/time that the instance of the iCalendar object was created.
 *
 * http://www.w3.org/2002/12/cal/ical#dtstamp
 */
export declare const dtstamp: OwlObjectProperty;
/**
 * LAST-MODIFIED
 *
 * The property specifies the date and time that the information associated with the calendar component was last revised in the calendar store. Note: This is analogous to the modification date and time for a file in the file system.
 *
 * http://www.w3.org/2002/12/cal/ical#lastModified
 */
export declare const lastModified: OwlObjectProperty;
/**
 * SEQUENCE
 *
 * This property defines the revision sequence number of the calendar component within a sequence of revisions.
 *
 * http://www.w3.org/2002/12/cal/ical#sequence
 */
export declare const sequence: OwlDatatypeProperty;
/**
 * REQUEST-STATUS
 *
 * This property defines the status code returned for a scheduling request.
 *
 * http://www.w3.org/2002/12/cal/ical#requestStatus
 */
export declare const requestStatus: OwlDatatypeProperty;
export {};
//# sourceMappingURL=cal.d.ts.map