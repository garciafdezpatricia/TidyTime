/**
 * The custom Inrupt context for verifiable credentials
 * @see https://schema.inrupt.com/credentials/v1.jsonld
 */
declare const _default: {
    readonly "@context": {
        readonly "@version": 1.1;
        readonly "@protected": true;
        readonly ldp: "http://www.w3.org/ns/ldp#";
        readonly acl: "http://www.w3.org/ns/auth/acl#";
        readonly gc: "https://w3id.org/GConsent#";
        readonly vc: "http://www.w3.org/ns/solid/vc#";
        readonly xsd: "http://www.w3.org/2001/XMLSchema#";
        readonly issuerService: {
            readonly "@id": "vc:issuerService";
            readonly "@type": "@id";
        };
        readonly statusService: {
            readonly "@id": "vc:statusService";
            readonly "@type": "@id";
        };
        readonly verifierService: {
            readonly "@id": "vc:verifierService";
            readonly "@type": "@id";
        };
        readonly derivationService: {
            readonly "@id": "vc:derivationService";
            readonly "@type": "@id";
        };
        readonly proofService: {
            readonly "@id": "vc:proofService";
            readonly "@type": "@id";
        };
        readonly availabilityService: {
            readonly "@id": "vc:availabilityService";
            readonly "@type": "@id";
        };
        readonly submissionService: {
            readonly "@id": "vc:submissionService";
            readonly "@type": "@id";
        };
        readonly supportedSignatureTypes: {
            readonly "@id": "vc:supportedSignatureTypes";
            readonly "@type": "@id";
        };
        readonly include: {
            readonly "@id": "vc:include";
            readonly "@type": "@id";
        };
        readonly SolidAccessGrant: "vc:SolidAccessGrant";
        readonly SolidAccessRequest: "vc:SolidAccessRequest";
        readonly ExpiredVerifiableCredential: "vc:ExpiredVerifiableCredential";
        readonly inbox: {
            readonly "@id": "ldp:inbox";
            readonly "@type": "@id";
        };
        readonly Read: "acl:Read";
        readonly Write: "acl:Write";
        readonly Append: "acl:Append";
        readonly mode: {
            readonly "@id": "acl:mode";
            readonly "@type": "@vocab";
        };
        readonly Consent: "gc:Consent";
        readonly ConsentStatusExpired: "gc:ConsentStatusExpired";
        readonly ConsentStatusExplicitlyGiven: "gc:ConsentStatusExplicitlyGiven";
        readonly ConsentStatusGivenByDelegation: "gc:ConsentStatusGivenByDelegation";
        readonly ConsentStatusImplicitlyGiven: "gc:ConsentStatusImplicitlyGiven";
        readonly ConsentStatusInvalidated: "gc:ConsentStatusInvalidated";
        readonly ConsentStatusNotGiven: "gc:ConsentStatusNotGiven";
        readonly ConsentStatusRefused: "gc:ConsentStatusRefused";
        readonly ConsentStatusRequested: "gc:ConsentStatusRequested";
        readonly ConsentStatusUnknown: "gc:ConsentStatusUnknown";
        readonly ConsentStatusWithdrawn: "gc:ConsentStatusWithdrawn";
        readonly forPersonalData: {
            readonly "@id": "gc:forPersonalData";
            readonly "@type": "@id";
        };
        readonly forProcessing: {
            readonly "@id": "gc:forProcessing";
            readonly "@type": "@id";
        };
        readonly forPurpose: {
            readonly "@id": "gc:forPurpose";
            readonly "@type": "@id";
        };
        readonly hasConsent: {
            readonly "@id": "gc:hasConsent";
            readonly "@type": "@id";
        };
        readonly hasContext: {
            readonly "@id": "gc:hasContext";
            readonly "@type": "@id";
        };
        readonly hasStatus: {
            readonly "@id": "gc:hasStatus";
            readonly "@type": "@vocab";
        };
        readonly inMedium: {
            readonly "@id": "gc:inMedium";
            readonly "@type": "@id";
        };
        readonly isConsentForDataSubject: {
            readonly "@id": "gc:isConsentForDataSubject";
            readonly "@type": "@id";
        };
        readonly isProvidedTo: {
            readonly "@id": "gc:isProvidedTo";
            readonly "@type": "@id";
        };
        readonly isProvidedToPerson: {
            readonly "@id": "gc:isProvidedToPerson";
            readonly "@type": "@id";
        };
        readonly isProvidedToController: {
            readonly "@id": "gc:isProvidedToController";
            readonly "@type": "@id";
        };
        readonly providedConsent: {
            readonly "@id": "gc:providedConsent";
            readonly "@type": "@id";
        };
        readonly inherit: {
            readonly "@id": "urn:uuid:71ab2f68-a68b-4452-b968-dd23e0570227";
            readonly "@type": "xsd:boolean";
        };
    };
};
export default _default;
