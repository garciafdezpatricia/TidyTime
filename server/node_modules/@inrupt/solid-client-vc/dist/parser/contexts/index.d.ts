declare const contextDefinitions: {
    readonly "https://www.w3.org/2018/credentials/v1": {
        readonly "@context": {
            readonly "@version": 1.1;
            readonly "@protected": true;
            readonly id: "@id";
            readonly type: "@type";
            readonly VerifiableCredential: {
                readonly "@id": "https://www.w3.org/2018/credentials#VerifiableCredential";
                readonly "@context": {
                    readonly "@version": 1.1;
                    readonly "@protected": true;
                    readonly id: "@id";
                    readonly type: "@type";
                    readonly cred: "https://www.w3.org/2018/credentials#";
                    readonly sec: "https://w3id.org/security#";
                    readonly xsd: "http://www.w3.org/2001/XMLSchema#";
                    readonly credentialSchema: {
                        readonly "@id": "cred:credentialSchema";
                        readonly "@type": "@id";
                        readonly "@context": {
                            readonly "@version": 1.1;
                            readonly "@protected": true;
                            readonly id: "@id";
                            readonly type: "@type";
                            readonly cred: "https://www.w3.org/2018/credentials#";
                            readonly JsonSchemaValidator2018: "cred:JsonSchemaValidator2018";
                        };
                    };
                    readonly credentialStatus: {
                        readonly "@id": "cred:credentialStatus";
                        readonly "@type": "@id";
                    };
                    readonly credentialSubject: {
                        readonly "@id": "cred:credentialSubject";
                        readonly "@type": "@id";
                    };
                    readonly evidence: {
                        readonly "@id": "cred:evidence";
                        readonly "@type": "@id";
                    };
                    readonly expirationDate: {
                        readonly "@id": "cred:expirationDate";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly holder: {
                        readonly "@id": "cred:holder";
                        readonly "@type": "@id";
                    };
                    readonly issued: {
                        readonly "@id": "cred:issued";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly issuer: {
                        readonly "@id": "cred:issuer";
                        readonly "@type": "@id";
                    };
                    readonly issuanceDate: {
                        readonly "@id": "cred:issuanceDate";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly proof: {
                        readonly "@id": "sec:proof";
                        readonly "@type": "@id";
                        readonly "@container": "@graph";
                    };
                    readonly refreshService: {
                        readonly "@id": "cred:refreshService";
                        readonly "@type": "@id";
                        readonly "@context": {
                            readonly "@version": 1.1;
                            readonly "@protected": true;
                            readonly id: "@id";
                            readonly type: "@type";
                            readonly cred: "https://www.w3.org/2018/credentials#";
                            readonly ManualRefreshService2018: "cred:ManualRefreshService2018";
                        };
                    };
                    readonly termsOfUse: {
                        readonly "@id": "cred:termsOfUse";
                        readonly "@type": "@id";
                    };
                    readonly validFrom: {
                        readonly "@id": "cred:validFrom";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly validUntil: {
                        readonly "@id": "cred:validUntil";
                        readonly "@type": "xsd:dateTime";
                    };
                };
            };
            readonly VerifiablePresentation: {
                readonly "@id": "https://www.w3.org/2018/credentials#VerifiablePresentation";
                readonly "@context": {
                    readonly "@version": 1.1;
                    readonly "@protected": true;
                    readonly id: "@id";
                    readonly type: "@type";
                    readonly cred: "https://www.w3.org/2018/credentials#";
                    readonly sec: "https://w3id.org/security#";
                    readonly holder: {
                        readonly "@id": "cred:holder";
                        readonly "@type": "@id";
                    };
                    readonly proof: {
                        readonly "@id": "sec:proof";
                        readonly "@type": "@id";
                        readonly "@container": "@graph";
                    };
                    readonly verifiableCredential: {
                        readonly "@id": "cred:verifiableCredential";
                        readonly "@type": "@id";
                        readonly "@container": "@graph";
                    };
                };
            };
            readonly EcdsaSecp256k1Signature2019: {
                readonly "@id": "https://w3id.org/security#EcdsaSecp256k1Signature2019";
                readonly "@context": {
                    readonly "@version": 1.1;
                    readonly "@protected": true;
                    readonly id: "@id";
                    readonly type: "@type";
                    readonly sec: "https://w3id.org/security#";
                    readonly xsd: "http://www.w3.org/2001/XMLSchema#";
                    readonly challenge: "sec:challenge";
                    readonly created: {
                        readonly "@id": "http://purl.org/dc/terms/created";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly domain: "sec:domain";
                    readonly expires: {
                        readonly "@id": "sec:expiration";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly jws: "sec:jws";
                    readonly nonce: "sec:nonce";
                    readonly proofPurpose: {
                        readonly "@id": "sec:proofPurpose";
                        readonly "@type": "@vocab";
                        readonly "@context": {
                            readonly "@version": 1.1;
                            readonly "@protected": true;
                            readonly id: "@id";
                            readonly type: "@type";
                            readonly sec: "https://w3id.org/security#";
                            readonly assertionMethod: {
                                readonly "@id": "sec:assertionMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                            readonly authentication: {
                                readonly "@id": "sec:authenticationMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                        };
                    };
                    readonly proofValue: "sec:proofValue";
                    readonly verificationMethod: {
                        readonly "@id": "sec:verificationMethod";
                        readonly "@type": "@id";
                    };
                };
            };
            readonly EcdsaSecp256r1Signature2019: {
                readonly "@id": "https://w3id.org/security#EcdsaSecp256r1Signature2019";
                readonly "@context": {
                    readonly "@version": 1.1;
                    readonly "@protected": true;
                    readonly id: "@id";
                    readonly type: "@type";
                    readonly sec: "https://w3id.org/security#";
                    readonly xsd: "http://www.w3.org/2001/XMLSchema#";
                    readonly challenge: "sec:challenge";
                    readonly created: {
                        readonly "@id": "http://purl.org/dc/terms/created";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly domain: "sec:domain";
                    readonly expires: {
                        readonly "@id": "sec:expiration";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly jws: "sec:jws";
                    readonly nonce: "sec:nonce";
                    readonly proofPurpose: {
                        readonly "@id": "sec:proofPurpose";
                        readonly "@type": "@vocab";
                        readonly "@context": {
                            readonly "@version": 1.1;
                            readonly "@protected": true;
                            readonly id: "@id";
                            readonly type: "@type";
                            readonly sec: "https://w3id.org/security#";
                            readonly assertionMethod: {
                                readonly "@id": "sec:assertionMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                            readonly authentication: {
                                readonly "@id": "sec:authenticationMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                        };
                    };
                    readonly proofValue: "sec:proofValue";
                    readonly verificationMethod: {
                        readonly "@id": "sec:verificationMethod";
                        readonly "@type": "@id";
                    };
                };
            };
            readonly Ed25519Signature2018: {
                readonly "@id": "https://w3id.org/security#Ed25519Signature2018";
                readonly "@context": {
                    readonly "@version": 1.1;
                    readonly "@protected": true;
                    readonly id: "@id";
                    readonly type: "@type";
                    readonly sec: "https://w3id.org/security#";
                    readonly xsd: "http://www.w3.org/2001/XMLSchema#";
                    readonly challenge: "sec:challenge";
                    readonly created: {
                        readonly "@id": "http://purl.org/dc/terms/created";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly domain: "sec:domain";
                    readonly expires: {
                        readonly "@id": "sec:expiration";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly jws: "sec:jws";
                    readonly nonce: "sec:nonce";
                    readonly proofPurpose: {
                        readonly "@id": "sec:proofPurpose";
                        readonly "@type": "@vocab";
                        readonly "@context": {
                            readonly "@version": 1.1;
                            readonly "@protected": true;
                            readonly id: "@id";
                            readonly type: "@type";
                            readonly sec: "https://w3id.org/security#";
                            readonly assertionMethod: {
                                readonly "@id": "sec:assertionMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                            readonly authentication: {
                                readonly "@id": "sec:authenticationMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                        };
                    };
                    readonly proofValue: "sec:proofValue";
                    readonly verificationMethod: {
                        readonly "@id": "sec:verificationMethod";
                        readonly "@type": "@id";
                    };
                };
            };
            readonly RsaSignature2018: {
                readonly "@id": "https://w3id.org/security#RsaSignature2018";
                readonly "@context": {
                    readonly "@version": 1.1;
                    readonly "@protected": true;
                    readonly challenge: "sec:challenge";
                    readonly created: {
                        readonly "@id": "http://purl.org/dc/terms/created";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly domain: "sec:domain";
                    readonly expires: {
                        readonly "@id": "sec:expiration";
                        readonly "@type": "xsd:dateTime";
                    };
                    readonly jws: "sec:jws";
                    readonly nonce: "sec:nonce";
                    readonly proofPurpose: {
                        readonly "@id": "sec:proofPurpose";
                        readonly "@type": "@vocab";
                        readonly "@context": {
                            readonly "@version": 1.1;
                            readonly "@protected": true;
                            readonly id: "@id";
                            readonly type: "@type";
                            readonly sec: "https://w3id.org/security#";
                            readonly assertionMethod: {
                                readonly "@id": "sec:assertionMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                            readonly authentication: {
                                readonly "@id": "sec:authenticationMethod";
                                readonly "@type": "@id";
                                readonly "@container": "@set";
                            };
                        };
                    };
                    readonly proofValue: "sec:proofValue";
                    readonly verificationMethod: {
                        readonly "@id": "sec:verificationMethod";
                        readonly "@type": "@id";
                    };
                };
            };
            readonly proof: {
                readonly "@id": "https://w3id.org/security#proof";
                readonly "@type": "@id";
                readonly "@container": "@graph";
            };
        };
    };
    readonly "https://schema.inrupt.com/credentials/v1.jsonld": {
        readonly "@context": {
            readonly "@version": 1.1;
            readonly "@protected": true;
            readonly ldp: "http://www.w3.org/ns/ldp#";
            readonly acl: "http://www.w3.org/ns/auth/acl#";
            readonly gc: "https://w3id.org/GConsent#";
            readonly vc: "http://www.w3.org/ns/solid/vc#";
            readonly xsd: "http://www.w3.org/2001/XMLSchema#";
            readonly issuerService: {
                readonly "@id": "vc:issuerService";
                readonly "@type": "@id";
            };
            readonly statusService: {
                readonly "@id": "vc:statusService";
                readonly "@type": "@id";
            };
            readonly verifierService: {
                readonly "@id": "vc:verifierService";
                readonly "@type": "@id";
            };
            readonly derivationService: {
                readonly "@id": "vc:derivationService";
                readonly "@type": "@id";
            };
            readonly proofService: {
                readonly "@id": "vc:proofService";
                readonly "@type": "@id";
            };
            readonly availabilityService: {
                readonly "@id": "vc:availabilityService";
                readonly "@type": "@id";
            };
            readonly submissionService: {
                readonly "@id": "vc:submissionService";
                readonly "@type": "@id";
            };
            readonly supportedSignatureTypes: {
                readonly "@id": "vc:supportedSignatureTypes";
                readonly "@type": "@id";
            };
            readonly include: {
                readonly "@id": "vc:include";
                readonly "@type": "@id";
            };
            readonly SolidAccessGrant: "vc:SolidAccessGrant";
            readonly SolidAccessRequest: "vc:SolidAccessRequest";
            readonly ExpiredVerifiableCredential: "vc:ExpiredVerifiableCredential";
            readonly inbox: {
                readonly "@id": "ldp:inbox";
                readonly "@type": "@id";
            };
            readonly Read: "acl:Read";
            readonly Write: "acl:Write";
            readonly Append: "acl:Append";
            readonly mode: {
                readonly "@id": "acl:mode";
                readonly "@type": "@vocab";
            };
            readonly Consent: "gc:Consent";
            readonly ConsentStatusExpired: "gc:ConsentStatusExpired";
            readonly ConsentStatusExplicitlyGiven: "gc:ConsentStatusExplicitlyGiven";
            readonly ConsentStatusGivenByDelegation: "gc:ConsentStatusGivenByDelegation";
            readonly ConsentStatusImplicitlyGiven: "gc:ConsentStatusImplicitlyGiven";
            readonly ConsentStatusInvalidated: "gc:ConsentStatusInvalidated";
            readonly ConsentStatusNotGiven: "gc:ConsentStatusNotGiven";
            readonly ConsentStatusRefused: "gc:ConsentStatusRefused";
            readonly ConsentStatusRequested: "gc:ConsentStatusRequested";
            readonly ConsentStatusUnknown: "gc:ConsentStatusUnknown";
            readonly ConsentStatusWithdrawn: "gc:ConsentStatusWithdrawn";
            readonly forPersonalData: {
                readonly "@id": "gc:forPersonalData";
                readonly "@type": "@id";
            };
            readonly forProcessing: {
                readonly "@id": "gc:forProcessing";
                readonly "@type": "@id";
            };
            readonly forPurpose: {
                readonly "@id": "gc:forPurpose";
                readonly "@type": "@id";
            };
            readonly hasConsent: {
                readonly "@id": "gc:hasConsent";
                readonly "@type": "@id";
            };
            readonly hasContext: {
                readonly "@id": "gc:hasContext";
                readonly "@type": "@id";
            };
            readonly hasStatus: {
                readonly "@id": "gc:hasStatus";
                readonly "@type": "@vocab";
            };
            readonly inMedium: {
                readonly "@id": "gc:inMedium";
                readonly "@type": "@id";
            };
            readonly isConsentForDataSubject: {
                readonly "@id": "gc:isConsentForDataSubject";
                readonly "@type": "@id";
            };
            readonly isProvidedTo: {
                readonly "@id": "gc:isProvidedTo";
                readonly "@type": "@id";
            };
            readonly isProvidedToPerson: {
                readonly "@id": "gc:isProvidedToPerson";
                readonly "@type": "@id";
            };
            readonly isProvidedToController: {
                readonly "@id": "gc:isProvidedToController";
                readonly "@type": "@id";
            };
            readonly providedConsent: {
                readonly "@id": "gc:providedConsent";
                readonly "@type": "@id";
            };
            readonly inherit: {
                readonly "@id": "urn:uuid:71ab2f68-a68b-4452-b968-dd23e0570227";
                readonly "@type": "xsd:boolean";
            };
        };
    };
};
export declare const cachedContexts: {
    "https://vc.inrupt.com/credentials/v1": {
        "@context": {
            "@version": number;
            "@protected": boolean;
            ldp: string;
            acl: string;
            gc: string;
            vc: string;
            xsd: string;
            issuerService: {
                "@id": string;
                "@type": string;
            };
            statusService: {
                "@id": string;
                "@type": string;
            };
            verifierService: {
                "@id": string;
                "@type": string;
            };
            derivationService: {
                "@id": string;
                "@type": string;
            };
            proofService: {
                "@id": string;
                "@type": string;
            };
            availabilityService: {
                "@id": string;
                "@type": string;
            };
            submissionService: {
                "@id": string;
                "@type": string;
            };
            supportedSignatureTypes: {
                "@id": string;
                "@type": string;
            };
            include: {
                "@id": string;
                "@type": string;
            };
            SolidAccessGrant: string;
            SolidAccessRequest: string;
            ExpiredVerifiableCredential: string;
            inbox: {
                "@id": string;
                "@type": string;
            };
            Read: string;
            Write: string;
            Append: string;
            mode: {
                "@id": string;
                "@type": string;
            };
            Consent: string;
            ConsentStatusExpired: string;
            ConsentStatusExplicitlyGiven: string;
            ConsentStatusGivenByDelegation: string;
            ConsentStatusImplicitlyGiven: string;
            ConsentStatusInvalidated: string;
            ConsentStatusNotGiven: string;
            ConsentStatusRefused: string;
            ConsentStatusRequested: string;
            ConsentStatusUnknown: string;
            ConsentStatusWithdrawn: string;
            forPersonalData: {
                "@id": string;
                "@type": string;
            };
            forProcessing: {
                "@id": string;
                "@type": string;
            };
            forPurpose: {
                "@id": string;
                "@type": string;
            };
            hasConsent: {
                "@id": string;
                "@type": string;
            };
            hasContext: {
                "@id": string;
                "@type": string;
            };
            hasStatus: {
                "@id": string;
                "@type": string;
            };
            inMedium: {
                "@id": string;
                "@type": string;
            };
            isConsentForDataSubject: {
                "@id": string;
                "@type": string;
            };
            isProvidedTo: {
                "@id": string;
                "@type": string;
            };
            isProvidedToPerson: {
                "@id": string;
                "@type": string;
            };
            isProvidedToController: {
                "@id": string;
                "@type": string;
            };
            providedConsent: {
                "@id": string;
                "@type": string;
            };
            inherit: {
                "@id": string;
                "@type": string;
            };
        };
    };
    "https://w3id.org/security/data-integrity/v1": {
        "@context": {
            id: string;
            type: string;
            "@protected": boolean;
            proof: {
                "@id": string;
                "@type": string;
                "@container": string;
            };
            DataIntegrityProof: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    challenge: string;
                    created: {
                        "@id": string;
                        "@type": string;
                    };
                    domain: string;
                    expires: {
                        "@id": string;
                        "@type": string;
                    };
                    nonce: string;
                    proofPurpose: {
                        "@id": string;
                        "@type": string;
                        "@context": {
                            "@protected": boolean;
                            id: string;
                            type: string;
                            assertionMethod: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            authentication: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            capabilityInvocation: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            capabilityDelegation: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            keyAgreement: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                        };
                    };
                    cryptosuite: string;
                    proofValue: {
                        "@id": string;
                        "@type": string;
                    };
                    verificationMethod: {
                        "@id": string;
                        "@type": string;
                    };
                };
            };
        };
    };
    "https://w3id.org/vc-revocation-list-2020/v1": {
        "@context": {
            "@protected": boolean;
            RevocationList2020Credential: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    description: string;
                    name: string;
                };
            };
            RevocationList2020: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    encodedList: string;
                };
            };
            RevocationList2020Status: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    revocationListCredential: {
                        "@id": string;
                        "@type": string;
                    };
                    revocationListIndex: string;
                };
            };
        };
    };
    "https://w3id.org/vc/status-list/2021/v1": {
        "@context": {
            "@protected": boolean;
            StatusList2021Credential: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    description: string;
                    name: string;
                };
            };
            StatusList2021: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    statusPurpose: string;
                    encodedList: string;
                };
            };
            StatusList2021Entry: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    statusPurpose: string;
                    statusListIndex: string;
                    statusListCredential: {
                        "@id": string;
                        "@type": string;
                    };
                };
            };
        };
    };
    "https://w3id.org/security/suites/ed25519-2020/v1": {
        "@context": {
            id: string;
            type: string;
            "@protected": boolean;
            proof: {
                "@id": string;
                "@type": string;
                "@container": string;
            };
            Ed25519VerificationKey2020: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    controller: {
                        "@id": string;
                        "@type": string;
                    };
                    revoked: {
                        "@id": string;
                        "@type": string;
                    };
                    publicKeyMultibase: {
                        "@id": string;
                        "@type": string;
                    };
                };
            };
            Ed25519Signature2020: {
                "@id": string;
                "@context": {
                    "@protected": boolean;
                    id: string;
                    type: string;
                    challenge: string;
                    created: {
                        "@id": string;
                        "@type": string;
                    };
                    domain: string;
                    expires: {
                        "@id": string;
                        "@type": string;
                    };
                    nonce: string;
                    proofPurpose: {
                        "@id": string;
                        "@type": string;
                        "@context": {
                            "@protected": boolean;
                            id: string;
                            type: string;
                            assertionMethod: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            authentication: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            capabilityInvocation: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            capabilityDelegation: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                            keyAgreement: {
                                "@id": string;
                                "@type": string;
                                "@container": string;
                            };
                        };
                    };
                    proofValue: {
                        "@id": string;
                        "@type": string;
                    };
                    verificationMethod: {
                        "@id": string;
                        "@type": string;
                    };
                };
            };
        };
    };
};
export declare const context: string[];
export default contextDefinitions;
