/**
 * @module revoke
 */
import type { Iri } from "../common/common";
/**
 * Revoke a given VC from a given issuer. This changes the status of the VC so that
 * subsequent verifications will fail. The issuer is expected to implement the
 * [W3C VC Issuer HTTP API](https://w3c-ccg.github.io/vc-api/issuer.html),
 * in particular [VC status update](https://w3c-ccg.github.io/vc-api/issuer.html#operation/updateCredentialStatus).
 *
 * @param issuerEndpoint The `/status` endpoint of the holder.
 * @param credentialId The identifier of the VC to be revoked.
 * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).
 * This can be typically used for authentication. Note that if it is omitted, and
 * `@inrupt/solid-client-authn-browser` is in your dependencies, the default session
 * is picked up.
 * @since 0.1.0
 */
export declare function revokeVerifiableCredential(issuerEndpoint: Iri, credentialId: Iri, options?: {
    fetch: typeof fetch;
}): Promise<void>;
export default revokeVerifiableCredential;
