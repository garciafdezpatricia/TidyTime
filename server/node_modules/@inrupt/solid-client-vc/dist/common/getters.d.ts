import type { BlankNode, DatasetCore, NamedNode } from "@rdfjs/types";
import { type DatasetWithId } from "./common";
/**
 * Get the ID (URL) of a Verifiable Credential.
 *
 * @example
 *
 * ```
 * const id = getId(vc);
 * ```
 *
 * @param vc The Verifiable Credential
 * @returns The VC ID URL
 */
export declare function getId(vc: DatasetWithId): string;
/**
 * Get the subject of a Verifiable Credential.
 *
 * @example
 *
 * ```
 * const subject = getCredentialSubject(vc);
 * ```
 *
 * @param vc The Verifiable Credential
 * @returns The VC subject
 */
export declare function getCredentialSubject(vc: DatasetWithId): NamedNode;
/**
 * Get the issuer of a Verifiable Credential.
 *
 * @example
 *
 * ```
 * const issuer = getIssuer(vc);
 * ```
 *
 * @param vc The Verifiable Credential
 * @returns The VC issuer
 */
export declare function getIssuer(vc: DatasetWithId): string;
/**
 * Get the issuance date of a Verifiable Credential.
 *
 * @example
 *
 * ```
 * const date = getIssuanceDate(vc);
 * ```
 *
 * @param vc The Verifiable Credential
 * @returns The issuance date
 */
export declare function getIssuanceDate(vc: DatasetWithId): Date;
/**
 * Get the expiration date of a Verifiable Credential.
 *
 * @example
 *
 * ```
 * const date = getExpirationDate(vc);
 * ```
 *
 * @param vc The Verifiable Credential
 * @returns The expiration date, or undefined if none is found.
 */
export declare function getExpirationDate(vc: DatasetWithId): Date | undefined;
export declare function isValidProof(dataset: DatasetCore, proof: NamedNode | BlankNode): boolean;
