import '@inrupt/solid-client';
import '../../common/constants.mjs';
import '../constants.mjs';
import 'n3';
import '@inrupt/solid-client-vc';
import 'auth-header';
import { getAccessGrant } from '../manage/getAccessGrant.mjs';
import { GRANT_VC_URL_PARAM_NAME } from '../manage/redirectToRequestor.mjs';

//
// Copyright Inrupt Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
// Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
async function getAccessGrantFromRedirectUrl(redirectUrl, options = {}) {
    const redirectUrlObj = typeof redirectUrl === "string" ? new URL(redirectUrl) : redirectUrl;
    const accessGrantIri = redirectUrlObj.searchParams.get(GRANT_VC_URL_PARAM_NAME);
    if (accessGrantIri === null) {
        throw new Error(`The provided redirect URL [${redirectUrl}] is missing the expected [${GRANT_VC_URL_PARAM_NAME}] query parameter`);
    }
    return getAccessGrant(accessGrantIri, options);
}

export { getAccessGrantFromRedirectUrl as default, getAccessGrantFromRedirectUrl };
