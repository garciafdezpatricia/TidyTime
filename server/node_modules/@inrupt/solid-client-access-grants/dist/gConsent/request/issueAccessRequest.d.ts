import type { VerifiableCredential, VerifiableCredentialBase, DatasetWithId } from "@inrupt/solid-client-vc";
import type { AccessBaseOptions } from "../type/AccessBaseOptions";
import type { DeprecatedAccessRequestParameters, IssueAccessRequestParameters } from "../type/IssueAccessRequestParameters";
import type { AccessRequest } from "../type/AccessRequest";
/**
 * Internal function. This is a stopgap until we have proper JSON-LD parsing.
 * It enforces the shape of the JSON returned by the issuer service, which may
 * vary while still serializing the same data.
 *
 * In particular, this transforms some literals into a one-value array.
 *
 * @hidden
 * @param accessRequest The grant returned by the VC issuer
 * @returns An equivalent JSON-LD document framed according to our typing.
 */
export declare function normalizeAccessRequest<T extends VerifiableCredentialBase>(accessRequest: T): T;
/**
 * Request access to a given Resource.
 *
 * @param params Access to request.
 * @param options Optional properties to customize the access request behavior.
 * @returns A signed Verifiable Credential representing the access request.
 * @since 0.4.0
 */
declare function issueAccessRequest(params: IssueAccessRequestParameters, options: AccessBaseOptions & {
    returnLegacyJsonld: false;
}): Promise<DatasetWithId>;
/**
 * Request access to a given Resource.
 *
 * @param params Access to request.
 * @param options Optional properties to customize the access request behavior.
 * @returns A signed Verifiable Credential representing the access request.
 * @since 0.4.0
 * @deprecated Use RDFJS API instead of relying on the JSON structure by setting `returnLegacyJsonld` to false
 */
declare function issueAccessRequest(params: IssueAccessRequestParameters, options?: AccessBaseOptions & {
    returnLegacyJsonld?: true;
}): Promise<AccessRequest>;
/**
 * Request access to a given Resource.
 *
 * @param params Access to request.
 * @param options Optional properties to customize the access request behavior.
 * @returns A signed Verifiable Credential representing the access request.
 * @since 0.4.0
 * @deprecated Use RDFJS API instead of relying on the JSON structure by setting `returnLegacyJsonld` to false
 */
declare function issueAccessRequest(params: IssueAccessRequestParameters, options?: AccessBaseOptions & {
    returnLegacyJsonld?: boolean;
}): Promise<DatasetWithId>;
/**
 * @deprecated Please remove the `requestor` parameter.
 */
declare function issueAccessRequest(params: DeprecatedAccessRequestParameters, options?: AccessBaseOptions & {
    returnLegacyJsonld?: boolean;
}): Promise<AccessRequest>;
export default issueAccessRequest;
export { issueAccessRequest };
export type { IssueAccessRequestParameters, VerifiableCredential };
