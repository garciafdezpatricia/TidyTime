import type { UrlString } from "@inrupt/solid-client";
import type { DatasetWithId, VerifiableCredential } from "@inrupt/solid-client-vc";
import type { AccessBaseOptions } from "../type/AccessBaseOptions";
import type { AccessGrant } from "../type/AccessGrant";
/**
 * Deny an access request. The content of the denied access request is provided
 * as a Verifiable Credential.
 *
 * @param vc The Verifiable Credential representing the Access Request. If
 * not conform to an Access Request, the function will throw.
 * @param options Optional properties to customise the access denial behaviour.
 * @returns A Verifiable Credential representing the denied access.
 * @since 0.0.1
 */
declare function denyAccessRequest(vc: DatasetWithId | VerifiableCredential | URL | UrlString, options: AccessBaseOptions & {
    returnLegacyJsonld: false;
}): Promise<DatasetWithId>;
/**
 * Deny an access request. The content of the denied access request is provided
 * as a Verifiable Credential.
 *
 * @param vc The Verifiable Credential representing the Access Request. If
 * not conform to an Access Request, the function will throw.
 * @param options Optional properties to customise the access denial behaviour.
 * @returns A Verifiable Credential representing the denied access.
 * @since 0.0.1
 * @deprecated Deprecated in favour of setting returnLegacyJsonld: false. This will be the default value in future
 * versions of this library.
 */
declare function denyAccessRequest(vc: DatasetWithId | VerifiableCredential | URL | UrlString, options?: AccessBaseOptions & {
    returnLegacyJsonld?: true;
}): Promise<AccessGrant>;
/**
 * Deny an access request. The content of the denied access request is provided
 * as a Verifiable Credential.
 *
 * @param vc The Verifiable Credential representing the Access Request. If
 * not conform to an Access Request, the function will throw.
 * @param options Optional properties to customise the access denial behaviour.
 * @returns A Verifiable Credential representing the denied access.
 * @since 0.0.1
 * @deprecated Deprecated in favour of setting returnLegacyJsonld: false. This will be the default value in future
 * versions of this library.
 */
declare function denyAccessRequest(vc: DatasetWithId | VerifiableCredential | URL | UrlString, options?: AccessBaseOptions & {
    returnLegacyJsonld?: boolean;
}): Promise<DatasetWithId>;
export { denyAccessRequest };
export default denyAccessRequest;
export type { UrlString, VerifiableCredential };
