import type { UrlString } from "@inrupt/solid-client";
import type { DatasetWithId, VerifiableCredential } from "@inrupt/solid-client-vc";
/**
 * Makes a request to the access server to verify the validity of a given Verifiable Credential.
 *
 * @param vc Either a VC, or a URL to a VC, to be verified.
 * @param options Optional properties to customise the request behaviour.
 * @returns An object containing checks, warnings, and errors.
 * @since 0.4.0
 */
declare function isValidAccessGrant(vc: DatasetWithId | VerifiableCredential | URL | UrlString, options?: {
    verificationEndpoint?: UrlString;
    fetch?: typeof fetch;
}): Promise<{
    checks: string[];
    warnings: string[];
    errors: string[];
}>;
export { isValidAccessGrant };
export default isValidAccessGrant;
export type { UrlString, VerifiableCredential };
